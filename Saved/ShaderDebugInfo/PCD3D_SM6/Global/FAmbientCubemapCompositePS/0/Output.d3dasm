;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD                 0   xyzw        0     NONE   float   xyzw
; SV_Position              0   xyzw        1      POS   float       
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Target                0   xyzw        0   TARGET   float   xyzw
;
; shader hash: 5fc86b7790a1bb5e210e34beab85becf
;
; Pipeline Runtime Information: 
;
; Pixel Shader
; DepthOutput=0
; SampleFrequency=0
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD                 0          noperspective       
; SV_Position              0          noperspective       
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Target                0                              
;
; Buffer Definitions:
;
; cbuffer _RootShaderParameters
; {
;
;   struct _RootShaderParameters
;   {
;
;       float4 AmbientCubemapColor;                   ; Offset:  192
;       float4 AmbientCubemapMipAdjust;               ; Offset:  208
;   
;   } _RootShaderParameters;                          ; Offset:    0 Size:   224
;
; }
;
; cbuffer UniformBufferConstants_View
; {
;
;   struct hostlayout.UniformBufferConstants_View
;   {
;
;       row_major float4x4 View_TranslatedWorldToClip;; Offset:    0
;       row_major float4x4 View_TranslatedWorldToSubpixelClip;; Offset:   64
;       row_major float4x4 View_RelativeWorldToClip;  ; Offset:  128
;       row_major float4x4 View_ClipToRelativeWorld;  ; Offset:  192
;       row_major float4x4 View_TranslatedWorldToView;; Offset:  256
;       row_major float4x4 View_ViewToTranslatedWorld;; Offset:  320
;       row_major float4x4 View_TranslatedWorldToCameraView;; Offset:  384
;       row_major float4x4 View_CameraViewToTranslatedWorld;; Offset:  448
;       row_major float4x4 View_ViewToClip;           ; Offset:  512
;       row_major float4x4 View_ViewToClipNoAA;       ; Offset:  576
;       row_major float4x4 View_ClipToView;           ; Offset:  640
;       row_major float4x4 View_ClipToTranslatedWorld;; Offset:  704
;       row_major float4x4 View_SVPositionToTranslatedWorld;; Offset:  768
;       row_major float4x4 View_ScreenToRelativeWorld;; Offset:  832
;       row_major float4x4 View_ScreenToTranslatedWorld;; Offset:  896
;       row_major float4x4 View_MobileMultiviewShadowTransform;; Offset:  960
;       float3 View_ViewTilePosition;                 ; Offset: 1024
;       float PrePadding_View_1036;                   ; Offset: 1036
;       float3 View_MatrixTilePosition;               ; Offset: 1040
;       float PrePadding_View_1052;                   ; Offset: 1052
;       float3 View_ViewForward;                      ; Offset: 1056
;       float PrePadding_View_1068;                   ; Offset: 1068
;       float3 View_ViewUp;                           ; Offset: 1072
;       float PrePadding_View_1084;                   ; Offset: 1084
;       float3 View_ViewRight;                        ; Offset: 1088
;       float PrePadding_View_1100;                   ; Offset: 1100
;       float3 View_HMDViewNoRollUp;                  ; Offset: 1104
;       float PrePadding_View_1116;                   ; Offset: 1116
;       float3 View_HMDViewNoRollRight;               ; Offset: 1120
;       float PrePadding_View_1132;                   ; Offset: 1132
;       float4 View_InvDeviceZToWorldZTransform;      ; Offset: 1136
;       float4 View_ScreenPositionScaleBias;          ; Offset: 1152
;       float3 View_RelativeWorldCameraOrigin;        ; Offset: 1168
;       float PrePadding_View_1180;                   ; Offset: 1180
;       float3 View_TranslatedWorldCameraOrigin;      ; Offset: 1184
;       float PrePadding_View_1196;                   ; Offset: 1196
;       float3 View_RelativeWorldViewOrigin;          ; Offset: 1200
;       float PrePadding_View_1212;                   ; Offset: 1212
;       float3 View_RelativePreViewTranslation;       ; Offset: 1216
;       float PrePadding_View_1228;                   ; Offset: 1228
;       row_major float4x4 View_PrevViewToClip;       ; Offset: 1232
;       row_major float4x4 View_PrevClipToView;       ; Offset: 1296
;       row_major float4x4 View_PrevTranslatedWorldToClip;; Offset: 1360
;       row_major float4x4 View_PrevTranslatedWorldToView;; Offset: 1424
;       row_major float4x4 View_PrevViewToTranslatedWorld;; Offset: 1488
;       row_major float4x4 View_PrevTranslatedWorldToCameraView;; Offset: 1552
;       row_major float4x4 View_PrevCameraViewToTranslatedWorld;; Offset: 1616
;       float3 View_PrevTranslatedWorldCameraOrigin;  ; Offset: 1680
;       float PrePadding_View_1692;                   ; Offset: 1692
;       float3 View_PrevRelativeWorldCameraOrigin;    ; Offset: 1696
;       float PrePadding_View_1708;                   ; Offset: 1708
;       float3 View_PrevRelativeWorldViewOrigin;      ; Offset: 1712
;       float PrePadding_View_1724;                   ; Offset: 1724
;       float3 View_RelativePrevPreViewTranslation;   ; Offset: 1728
;       float PrePadding_View_1740;                   ; Offset: 1740
;       row_major float4x4 View_PrevClipToRelativeWorld;; Offset: 1744
;       row_major float4x4 View_PrevScreenToTranslatedWorld;; Offset: 1808
;       row_major float4x4 View_ClipToPrevClip;       ; Offset: 1872
;       row_major float4x4 View_ClipToPrevClipWithAA; ; Offset: 1936
;       float4 View_TemporalAAJitter;                 ; Offset: 2000
;       float4 View_GlobalClippingPlane;              ; Offset: 2016
;       float2 View_FieldOfViewWideAngles;            ; Offset: 2032
;       float2 View_PrevFieldOfViewWideAngles;        ; Offset: 2040
;       float4 View_ViewRectMin;                      ; Offset: 2048
;       float4 View_ViewSizeAndInvSize;               ; Offset: 2064
;       uint4 View_ViewRectMinAndSize;                ; Offset: 2080
;       float4 View_LightProbeSizeRatioAndInvSizeRatio;; Offset: 2096
;       float4 View_BufferSizeAndInvSize;             ; Offset: 2112
;       float4 View_BufferBilinearUVMinMax;           ; Offset: 2128
;       float4 View_ScreenToViewSpace;                ; Offset: 2144
;       float2 View_BufferToSceneTextureScale;        ; Offset: 2160
;       float2 View_ResolutionFractionAndInv;         ; Offset: 2168
;       int View_NumSceneColorMSAASamples;            ; Offset: 2176
;       float View_PreExposure;                       ; Offset: 2180
;       float View_OneOverPreExposure;                ; Offset: 2184
;       float PrePadding_View_2188;                   ; Offset: 2188
;       float4 View_DiffuseOverrideParameter;         ; Offset: 2192
;       float4 View_SpecularOverrideParameter;        ; Offset: 2208
;       float4 View_NormalOverrideParameter;          ; Offset: 2224
;       float2 View_RoughnessOverrideParameter;       ; Offset: 2240
;       float View_PrevFrameGameTime;                 ; Offset: 2248
;       float View_PrevFrameRealTime;                 ; Offset: 2252
;       float View_OutOfBoundsMask;                   ; Offset: 2256
;       float PrePadding_View_2260;                   ; Offset: 2260
;       float PrePadding_View_2264;                   ; Offset: 2264
;       float PrePadding_View_2268;                   ; Offset: 2268
;       float3 View_WorldCameraMovementSinceLastFrame;; Offset: 2272
;       float View_CullingSign;                       ; Offset: 2284
;       float View_NearPlane;                         ; Offset: 2288
;       float View_GameTime;                          ; Offset: 2292
;       float View_RealTime;                          ; Offset: 2296
;       float View_DeltaTime;                         ; Offset: 2300
;       float View_MaterialTextureMipBias;            ; Offset: 2304
;       float View_MaterialTextureDerivativeMultiply; ; Offset: 2308
;       uint View_Random;                             ; Offset: 2312
;       uint View_FrameNumber;                        ; Offset: 2316
;       uint View_StateFrameIndexMod8;                ; Offset: 2320
;       uint View_StateFrameIndex;                    ; Offset: 2324
;       uint View_DebugViewModeMask;                  ; Offset: 2328
;       uint View_WorldIsPaused;                      ; Offset: 2332
;       float View_CameraCut;                         ; Offset: 2336
;       float View_UnlitViewmodeMask;                 ; Offset: 2340
;       float PrePadding_View_2344;                   ; Offset: 2344
;       float PrePadding_View_2348;                   ; Offset: 2348
;       float4 View_DirectionalLightColor;            ; Offset: 2352
;       float3 View_DirectionalLightDirection;        ; Offset: 2368
;       float PrePadding_View_2380;                   ; Offset: 2380
;       float4 View_TranslucencyLightingVolumeMin[2]; ; Offset: 2384
;       float4 View_TranslucencyLightingVolumeInvSize[2];; Offset: 2416
;       float4 View_TemporalAAParams;                 ; Offset: 2448
;       float4 View_CircleDOFParams;                  ; Offset: 2464
;       float View_DepthOfFieldSensorWidth;           ; Offset: 2480
;       float View_DepthOfFieldFocalDistance;         ; Offset: 2484
;       float View_DepthOfFieldScale;                 ; Offset: 2488
;       float View_DepthOfFieldFocalLength;           ; Offset: 2492
;       float View_DepthOfFieldFocalRegion;           ; Offset: 2496
;       float View_DepthOfFieldNearTransitionRegion;  ; Offset: 2500
;       float View_DepthOfFieldFarTransitionRegion;   ; Offset: 2504
;       float View_MotionBlurNormalizedToPixel;       ; Offset: 2508
;       float View_GeneralPurposeTweak;               ; Offset: 2512
;       float View_GeneralPurposeTweak2;              ; Offset: 2516
;       float View_DemosaicVposOffset;                ; Offset: 2520
;       float View_DecalDepthBias;                    ; Offset: 2524
;       float3 View_IndirectLightingColorScale;       ; Offset: 2528
;       float PrePadding_View_2540;                   ; Offset: 2540
;       float3 View_PrecomputedIndirectLightingColorScale;; Offset: 2544
;       float PrePadding_View_2556;                   ; Offset: 2556
;       float3 View_PrecomputedIndirectSpecularColorScale;; Offset: 2560
;       float PrePadding_View_2572;                   ; Offset: 2572
;       float4 View_AtmosphereLightDirection[2];      ; Offset: 2576
;       float4 View_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];; Offset: 2608
;       float4 View_AtmosphereLightIlluminanceOuterSpace[2];; Offset: 2640
;       float4 View_AtmosphereLightDiscLuminance[2];  ; Offset: 2672
;       float4 View_AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];; Offset: 2704
;       float4 View_SkyViewLutSizeAndInvSize;         ; Offset: 2736
;       float3 View_SkyCameraTranslatedWorldOrigin;   ; Offset: 2752
;       float PrePadding_View_2764;                   ; Offset: 2764
;       float4 View_SkyPlanetTranslatedWorldCenterAndViewHeight;; Offset: 2768
;       row_major float4x4 View_SkyViewLutReferential;; Offset: 2784
;       float4 View_SkyAtmosphereSkyLuminanceFactor;  ; Offset: 2848
;       float View_SkyAtmospherePresentInScene;       ; Offset: 2864
;       float View_SkyAtmosphereHeightFogContribution;; Offset: 2868
;       float View_SkyAtmosphereBottomRadiusKm;       ; Offset: 2872
;       float View_SkyAtmosphereTopRadiusKm;          ; Offset: 2876
;       float4 View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;; Offset: 2880
;       float View_SkyAtmosphereAerialPerspectiveStartDepthKm;; Offset: 2896
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;; Offset: 2900
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;; Offset: 2904
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;; Offset: 2908
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;; Offset: 2912
;       float View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;; Offset: 2916
;       float PrePadding_View_2920;                   ; Offset: 2920
;       float PrePadding_View_2924;                   ; Offset: 2924
;       float3 View_NormalCurvatureToRoughnessScaleBias;; Offset: 2928
;       float View_RenderingReflectionCaptureMask;    ; Offset: 2940
;       float View_RealTimeReflectionCapture;         ; Offset: 2944
;       float View_RealTimeReflectionCapturePreExposure;; Offset: 2948
;       float PrePadding_View_2952;                   ; Offset: 2952
;       float PrePadding_View_2956;                   ; Offset: 2956
;       float4 View_AmbientCubemapTint;               ; Offset: 2960
;       float View_AmbientCubemapIntensity;           ; Offset: 2976
;       float View_SkyLightApplyPrecomputedBentNormalShadowingFlag;; Offset: 2980
;       float View_SkyLightAffectReflectionFlag;      ; Offset: 2984
;       float View_SkyLightAffectGlobalIlluminationFlag;; Offset: 2988
;       float4 View_SkyLightColor;                    ; Offset: 2992
;       float4 View_MobileSkyIrradianceEnvironmentMap[8];; Offset: 3008
;       float View_MobilePreviewMode;                 ; Offset: 3136
;       float View_HMDEyePaddingOffset;               ; Offset: 3140
;       float View_ReflectionCubemapMaxMip;           ; Offset: 3144
;       float View_ShowDecalsMask;                    ; Offset: 3148
;       uint View_DistanceFieldAOSpecularOcclusionMode;; Offset: 3152
;       float View_IndirectCapsuleSelfShadowingIntensity;; Offset: 3156
;       float PrePadding_View_3160;                   ; Offset: 3160
;       float PrePadding_View_3164;                   ; Offset: 3164
;       float3 View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;; Offset: 3168
;       int View_StereoPassIndex;                     ; Offset: 3180
;       float4 View_GlobalVolumeTranslatedCenterAndExtent[6];; Offset: 3184
;       float4 View_GlobalVolumeTranslatedWorldToUVAddAndMul[6];; Offset: 3280
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVScale[6];; Offset: 3376
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVBias[6];; Offset: 3472
;       float View_GlobalDistanceFieldMipFactor;      ; Offset: 3568
;       float View_GlobalDistanceFieldMipTransition;  ; Offset: 3572
;       int View_GlobalDistanceFieldClipmapSizeInPages;; Offset: 3576
;       int PrePadding_View_3580;                     ; Offset: 3580
;       float3 View_GlobalDistanceFieldInvPageAtlasSize;; Offset: 3584
;       float PrePadding_View_3596;                   ; Offset: 3596
;       float3 View_GlobalDistanceFieldInvCoverageAtlasSize;; Offset: 3600
;       float View_GlobalVolumeDimension;             ; Offset: 3612
;       float View_GlobalVolumeTexelSize;             ; Offset: 3616
;       float View_MaxGlobalDFAOConeDistance;         ; Offset: 3620
;       uint View_NumGlobalSDFClipmaps;               ; Offset: 3624
;       float View_CoveredExpandSurfaceScale;         ; Offset: 3628
;       float View_NotCoveredExpandSurfaceScale;      ; Offset: 3632
;       float View_NotCoveredMinStepScale;            ; Offset: 3636
;       float View_DitheredTransparencyStepThreshold; ; Offset: 3640
;       float View_DitheredTransparencyTraceThreshold;; Offset: 3644
;       int2 View_CursorPosition;                     ; Offset: 3648
;       float View_bCheckerboardSubsurfaceProfileRendering;; Offset: 3656
;       float PrePadding_View_3660;                   ; Offset: 3660
;       float3 View_VolumetricFogInvGridSize;         ; Offset: 3664
;       float PrePadding_View_3676;                   ; Offset: 3676
;       float3 View_VolumetricFogGridZParams;         ; Offset: 3680
;       float PrePadding_View_3692;                   ; Offset: 3692
;       float2 View_VolumetricFogSVPosToVolumeUV;     ; Offset: 3696
;       float2 View_VolumetricFogScreenUVToHistoryVolumeUV;; Offset: 3704
;       float View_VolumetricFogMaxDistance;          ; Offset: 3712
;       float PrePadding_View_3716;                   ; Offset: 3716
;       float PrePadding_View_3720;                   ; Offset: 3720
;       float PrePadding_View_3724;                   ; Offset: 3724
;       float3 View_VolumetricLightmapWorldToUVScale; ; Offset: 3728
;       float PrePadding_View_3740;                   ; Offset: 3740
;       float3 View_VolumetricLightmapWorldToUVAdd;   ; Offset: 3744
;       float PrePadding_View_3756;                   ; Offset: 3756
;       float3 View_VolumetricLightmapIndirectionTextureSize;; Offset: 3760
;       float View_VolumetricLightmapBrickSize;       ; Offset: 3772
;       float3 View_VolumetricLightmapBrickTexelSize; ; Offset: 3776
;       float View_IndirectLightingCacheShowFlag;     ; Offset: 3788
;       float View_EyeToPixelSpreadAngle;             ; Offset: 3792
;       float PrePadding_View_3796;                   ; Offset: 3796
;       float PrePadding_View_3800;                   ; Offset: 3800
;       float PrePadding_View_3804;                   ; Offset: 3804
;       float4 View_XRPassthroughCameraUVs[2];        ; Offset: 3808
;       float View_GlobalVirtualTextureMipBias;       ; Offset: 3840
;       uint View_VirtualTextureFeedbackShift;        ; Offset: 3844
;       uint View_VirtualTextureFeedbackMask;         ; Offset: 3848
;       uint View_VirtualTextureFeedbackStride;       ; Offset: 3852
;       uint View_VirtualTextureFeedbackJitterOffset; ; Offset: 3856
;       uint View_VirtualTextureFeedbackSampleOffset; ; Offset: 3860
;       uint PrePadding_View_3864;                    ; Offset: 3864
;       uint PrePadding_View_3868;                    ; Offset: 3868
;       float4 View_RuntimeVirtualTextureMipLevel;    ; Offset: 3872
;       float2 View_RuntimeVirtualTexturePackHeight;  ; Offset: 3888
;       float PrePadding_View_3896;                   ; Offset: 3896
;       float PrePadding_View_3900;                   ; Offset: 3900
;       float4 View_RuntimeVirtualTextureDebugParams; ; Offset: 3904
;       float View_OverrideLandscapeLOD;              ; Offset: 3920
;       int View_FarShadowStaticMeshLODBias;          ; Offset: 3924
;       float View_MinRoughness;                      ; Offset: 3928
;       float PrePadding_View_3932;                   ; Offset: 3932
;       float4 View_HairRenderInfo;                   ; Offset: 3936
;       uint View_EnableSkyLight;                     ; Offset: 3952
;       uint View_HairRenderInfoBits;                 ; Offset: 3956
;       uint View_HairComponents;                     ; Offset: 3960
;       float View_bSubsurfacePostprocessEnabled;     ; Offset: 3964
;       float4 View_SSProfilesTextureSizeAndInvSize;  ; Offset: 3968
;       float4 View_SSProfilesPreIntegratedTextureSizeAndInvSize;; Offset: 3984
;       float3 View_PhysicsFieldClipmapCenter;        ; Offset: 4000
;       float View_PhysicsFieldClipmapDistance;       ; Offset: 4012
;       int View_PhysicsFieldClipmapResolution;       ; Offset: 4016
;       int View_PhysicsFieldClipmapExponent;         ; Offset: 4020
;       int View_PhysicsFieldClipmapCount;            ; Offset: 4024
;       int View_PhysicsFieldTargetCount;             ; Offset: 4028
;       int4 View_PhysicsFieldTargets[32];            ; Offset: 4032
;       uint View_InstanceSceneDataSOAStride;         ; Offset: 4544
;       uint View_GPUSceneViewId;                     ; Offset: 4548
;       float View_ViewResolutionFraction;            ; Offset: 4552
;       float View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;; Offset: 4556
;       uint BindlessSampler_View_MaterialTextureBilinearWrapedSampler;; Offset: 4560
;       uint PrePadding_View_4564;                    ; Offset: 4564
;       uint BindlessSampler_View_MaterialTextureBilinearClampedSampler;; Offset: 4568
;       uint PrePadding_View_4572;                    ; Offset: 4572
;       uint BindlessResource_View_VolumetricLightmapIndirectionTexture;; Offset: 4576
;       uint PrePadding_View_4580;                    ; Offset: 4580
;       uint BindlessResource_View_VolumetricLightmapBrickAmbientVector;; Offset: 4584
;       uint PrePadding_View_4588;                    ; Offset: 4588
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients0;; Offset: 4592
;       uint PrePadding_View_4596;                    ; Offset: 4596
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients1;; Offset: 4600
;       uint PrePadding_View_4604;                    ; Offset: 4604
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients2;; Offset: 4608
;       uint PrePadding_View_4612;                    ; Offset: 4612
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients3;; Offset: 4616
;       uint PrePadding_View_4620;                    ; Offset: 4620
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients4;; Offset: 4624
;       uint PrePadding_View_4628;                    ; Offset: 4628
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients5;; Offset: 4632
;       uint PrePadding_View_4636;                    ; Offset: 4636
;       uint BindlessResource_View_SkyBentNormalBrickTexture;; Offset: 4640
;       uint PrePadding_View_4644;                    ; Offset: 4644
;       uint BindlessResource_View_DirectionalLightShadowingBrickTexture;; Offset: 4648
;       uint PrePadding_View_4652;                    ; Offset: 4652
;       uint BindlessSampler_View_VolumetricLightmapBrickAmbientVectorSampler;; Offset: 4656
;       uint PrePadding_View_4660;                    ; Offset: 4660
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler0;; Offset: 4664
;       uint PrePadding_View_4668;                    ; Offset: 4668
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler1;; Offset: 4672
;       uint PrePadding_View_4676;                    ; Offset: 4676
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler2;; Offset: 4680
;       uint PrePadding_View_4684;                    ; Offset: 4684
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler3;; Offset: 4688
;       uint PrePadding_View_4692;                    ; Offset: 4692
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler4;; Offset: 4696
;       uint PrePadding_View_4700;                    ; Offset: 4700
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler5;; Offset: 4704
;       uint PrePadding_View_4708;                    ; Offset: 4708
;       uint BindlessSampler_View_SkyBentNormalTextureSampler;; Offset: 4712
;       uint PrePadding_View_4716;                    ; Offset: 4716
;       uint BindlessSampler_View_DirectionalLightShadowingTextureSampler;; Offset: 4720
;       uint PrePadding_View_4724;                    ; Offset: 4724
;       uint BindlessResource_View_GlobalDistanceFieldPageAtlasTexture;; Offset: 4728
;       uint PrePadding_View_4732;                    ; Offset: 4732
;       uint BindlessResource_View_GlobalDistanceFieldCoverageAtlasTexture;; Offset: 4736
;       uint PrePadding_View_4740;                    ; Offset: 4740
;       uint BindlessResource_View_GlobalDistanceFieldPageTableTexture;; Offset: 4744
;       uint PrePadding_View_4748;                    ; Offset: 4748
;       uint BindlessResource_View_GlobalDistanceFieldMipTexture;; Offset: 4752
;       uint PrePadding_View_4756;                    ; Offset: 4756
;       uint BindlessResource_View_AtmosphereTransmittanceTexture;; Offset: 4760
;       uint PrePadding_View_4764;                    ; Offset: 4764
;       uint BindlessSampler_View_AtmosphereTransmittanceTextureSampler;; Offset: 4768
;       uint PrePadding_View_4772;                    ; Offset: 4772
;       uint BindlessResource_View_AtmosphereIrradianceTexture;; Offset: 4776
;       uint PrePadding_View_4780;                    ; Offset: 4780
;       uint BindlessSampler_View_AtmosphereIrradianceTextureSampler;; Offset: 4784
;       uint PrePadding_View_4788;                    ; Offset: 4788
;       uint BindlessResource_View_AtmosphereInscatterTexture;; Offset: 4792
;       uint PrePadding_View_4796;                    ; Offset: 4796
;       uint BindlessSampler_View_AtmosphereInscatterTextureSampler;; Offset: 4800
;       uint PrePadding_View_4804;                    ; Offset: 4804
;       uint BindlessResource_View_PerlinNoiseGradientTexture;; Offset: 4808
;       uint PrePadding_View_4812;                    ; Offset: 4812
;       uint BindlessSampler_View_PerlinNoiseGradientTextureSampler;; Offset: 4816
;       uint PrePadding_View_4820;                    ; Offset: 4820
;       uint BindlessResource_View_PerlinNoise3DTexture;; Offset: 4824
;       uint PrePadding_View_4828;                    ; Offset: 4828
;       uint BindlessSampler_View_PerlinNoise3DTextureSampler;; Offset: 4832
;       uint PrePadding_View_4836;                    ; Offset: 4836
;       uint BindlessResource_View_SobolSamplingTexture;; Offset: 4840
;       uint PrePadding_View_4844;                    ; Offset: 4844
;       uint BindlessSampler_View_SharedPointWrappedSampler;; Offset: 4848
;       uint PrePadding_View_4852;                    ; Offset: 4852
;       uint BindlessSampler_View_SharedPointClampedSampler;; Offset: 4856
;       uint PrePadding_View_4860;                    ; Offset: 4860
;       uint BindlessSampler_View_SharedBilinearWrappedSampler;; Offset: 4864
;       uint PrePadding_View_4868;                    ; Offset: 4868
;       uint BindlessSampler_View_SharedBilinearClampedSampler;; Offset: 4872
;       uint PrePadding_View_4876;                    ; Offset: 4876
;       uint BindlessSampler_View_SharedBilinearAnisoClampedSampler;; Offset: 4880
;       uint PrePadding_View_4884;                    ; Offset: 4884
;       uint BindlessSampler_View_SharedTrilinearWrappedSampler;; Offset: 4888
;       uint PrePadding_View_4892;                    ; Offset: 4892
;       uint BindlessSampler_View_SharedTrilinearClampedSampler;; Offset: 4896
;       uint PrePadding_View_4900;                    ; Offset: 4900
;       uint BindlessResource_View_PreIntegratedBRDF; ; Offset: 4904
;       uint PrePadding_View_4908;                    ; Offset: 4908
;       uint BindlessSampler_View_PreIntegratedBRDFSampler;; Offset: 4912
;       uint PrePadding_View_4916;                    ; Offset: 4916
;       uint BindlessResource_View_PrimitiveSceneData;; Offset: 4920
;       uint PrePadding_View_4924;                    ; Offset: 4924
;       uint BindlessResource_View_InstanceSceneData; ; Offset: 4928
;       uint PrePadding_View_4932;                    ; Offset: 4932
;       uint BindlessResource_View_InstancePayloadData;; Offset: 4936
;       uint PrePadding_View_4940;                    ; Offset: 4940
;       uint BindlessResource_View_LightmapSceneData; ; Offset: 4944
;       uint PrePadding_View_4948;                    ; Offset: 4948
;       uint BindlessResource_View_SkyIrradianceEnvironmentMap;; Offset: 4952
;       uint PrePadding_View_4956;                    ; Offset: 4956
;       uint BindlessResource_View_TransmittanceLutTexture;; Offset: 4960
;       uint PrePadding_View_4964;                    ; Offset: 4964
;       uint BindlessSampler_View_TransmittanceLutTextureSampler;; Offset: 4968
;       uint PrePadding_View_4972;                    ; Offset: 4972
;       uint BindlessResource_View_SkyViewLutTexture; ; Offset: 4976
;       uint PrePadding_View_4980;                    ; Offset: 4980
;       uint BindlessSampler_View_SkyViewLutTextureSampler;; Offset: 4984
;       uint PrePadding_View_4988;                    ; Offset: 4988
;       uint BindlessResource_View_DistantSkyLightLutTexture;; Offset: 4992
;       uint PrePadding_View_4996;                    ; Offset: 4996
;       uint BindlessSampler_View_DistantSkyLightLutTextureSampler;; Offset: 5000
;       uint PrePadding_View_5004;                    ; Offset: 5004
;       uint BindlessResource_View_CameraAerialPerspectiveVolume;; Offset: 5008
;       uint PrePadding_View_5012;                    ; Offset: 5012
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeSampler;; Offset: 5016
;       uint PrePadding_View_5020;                    ; Offset: 5020
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeMieOnly;; Offset: 5024
;       uint PrePadding_View_5028;                    ; Offset: 5028
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeMieOnlySampler;; Offset: 5032
;       uint PrePadding_View_5036;                    ; Offset: 5036
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeRayOnly;; Offset: 5040
;       uint PrePadding_View_5044;                    ; Offset: 5044
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeRayOnlySampler;; Offset: 5048
;       uint PrePadding_View_5052;                    ; Offset: 5052
;       uint BindlessResource_View_HairScatteringLUTTexture;; Offset: 5056
;       uint PrePadding_View_5060;                    ; Offset: 5060
;       uint BindlessSampler_View_HairScatteringLUTSampler;; Offset: 5064
;       uint PrePadding_View_5068;                    ; Offset: 5068
;       uint BindlessResource_View_LTCMatTexture;     ; Offset: 5072
;       uint PrePadding_View_5076;                    ; Offset: 5076
;       uint BindlessSampler_View_LTCMatSampler;      ; Offset: 5080
;       uint PrePadding_View_5084;                    ; Offset: 5084
;       uint BindlessResource_View_LTCAmpTexture;     ; Offset: 5088
;       uint PrePadding_View_5092;                    ; Offset: 5092
;       uint BindlessSampler_View_LTCAmpSampler;      ; Offset: 5096
;       uint PrePadding_View_5100;                    ; Offset: 5100
;       uint View_bShadingEnergyConservation;         ; Offset: 5104
;       uint View_bShadingEnergyPreservation;         ; Offset: 5108
;       uint BindlessResource_View_ShadingEnergyGGXSpecTexture;; Offset: 5112
;       uint PrePadding_View_5116;                    ; Offset: 5116
;       uint BindlessResource_View_ShadingEnergyGGXGlassTexture;; Offset: 5120
;       uint PrePadding_View_5124;                    ; Offset: 5124
;       uint BindlessResource_View_ShadingEnergyClothSpecTexture;; Offset: 5128
;       uint PrePadding_View_5132;                    ; Offset: 5132
;       uint BindlessResource_View_ShadingEnergyDiffuseTexture;; Offset: 5136
;       uint PrePadding_View_5140;                    ; Offset: 5140
;       uint BindlessSampler_View_ShadingEnergySampler;; Offset: 5144
;       uint PrePadding_View_5148;                    ; Offset: 5148
;       uint BindlessResource_View_SSProfilesTexture; ; Offset: 5152
;       uint PrePadding_View_5156;                    ; Offset: 5156
;       uint BindlessSampler_View_SSProfilesSampler;  ; Offset: 5160
;       uint PrePadding_View_5164;                    ; Offset: 5164
;       uint BindlessSampler_View_SSProfilesTransmissionSampler;; Offset: 5168
;       uint PrePadding_View_5172;                    ; Offset: 5172
;       uint BindlessResource_View_SSProfilesPreIntegratedTexture;; Offset: 5176
;       uint PrePadding_View_5180;                    ; Offset: 5180
;       uint BindlessSampler_View_SSProfilesPreIntegratedSampler;; Offset: 5184
;       uint PrePadding_View_5188;                    ; Offset: 5188
;       uint BindlessResource_View_WaterIndirection;  ; Offset: 5192
;       uint PrePadding_View_5196;                    ; Offset: 5196
;       uint BindlessResource_View_WaterData;         ; Offset: 5200
;       uint PrePadding_View_5204;                    ; Offset: 5204
;       uint PrePadding_View_5208;                    ; Offset: 5208
;       uint PrePadding_View_5212;                    ; Offset: 5212
;       float4 View_RectLightAtlasSizeAndInvSize;     ; Offset: 5216
;       float View_RectLightAtlasMaxMipLevel;         ; Offset: 5232
;       float PrePadding_View_5236;                   ; Offset: 5236
;       uint BindlessResource_View_RectLightAtlasTexture;; Offset: 5240
;       uint PrePadding_View_5244;                    ; Offset: 5244
;       uint BindlessSampler_View_RectLightAtlasSampler;; Offset: 5248
;       uint PrePadding_View_5252;                    ; Offset: 5252
;       uint PrePadding_View_5256;                    ; Offset: 5256
;       uint PrePadding_View_5260;                    ; Offset: 5260
;       float4 View_IESAtlasSizeAndInvSize;           ; Offset: 5264
;       uint BindlessResource_View_IESAtlasTexture;   ; Offset: 5280
;       uint PrePadding_View_5284;                    ; Offset: 5284
;       uint BindlessSampler_View_IESAtlasSampler;    ; Offset: 5288
;       uint PrePadding_View_5292;                    ; Offset: 5292
;       uint BindlessSampler_View_LandscapeWeightmapSampler;; Offset: 5296
;       uint PrePadding_View_5300;                    ; Offset: 5300
;       uint BindlessResource_View_LandscapeIndirection;; Offset: 5304
;       uint PrePadding_View_5308;                    ; Offset: 5308
;       uint BindlessResource_View_LandscapePerComponentData;; Offset: 5312
;       uint PrePadding_View_5316;                    ; Offset: 5316
;       uint BindlessResource_View_VTFeedbackBuffer;  ; Offset: 5320
;       uint PrePadding_View_5324;                    ; Offset: 5324
;       uint BindlessResource_View_EditorVisualizeLevelInstanceIds;; Offset: 5328
;       uint PrePadding_View_5332;                    ; Offset: 5332
;       uint BindlessResource_View_EditorSelectedHitProxyIds;; Offset: 5336
;       uint PrePadding_View_5340;                    ; Offset: 5340
;       uint BindlessResource_View_PhysicsFieldClipmapBuffer;; Offset: 5344
;       uint PrePadding_View_5348;                    ; Offset: 5348
;       uint PrePadding_View_5352;                    ; Offset: 5352
;       uint PrePadding_View_5356;                    ; Offset: 5356
;       float3 View_TLASRelativePreViewTranslation;   ; Offset: 5360
;       float PrePadding_View_5372;                   ; Offset: 5372
;       float3 View_TLASViewTilePosition;             ; Offset: 5376
;   
;   } UniformBufferConstants_View;                    ; Offset:    0 Size:  5388
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; _RootShaderParameters             cbuffer      NA          NA     CB0            cb0     1
; UniformBufferConstants_View       cbuffer      NA          NA     CB1            cb1     1
; D3DStaticPointClampedSampler      sampler      NA          NA      S0   s1,space1000     1
; AmbientCubemapSampler             sampler      NA          NA      S1             s0     1
; PreIntegratedGFSampler            sampler      NA          NA      S2             s1     1
; AmbientOcclusionSampler           sampler      NA          NA      S3             s2     1
; GBufferATexture                   texture     f32          2d      T0             t0     1
; GBufferBTexture                   texture     f32          2d      T1             t1     1
; GBufferCTexture                   texture     f32          2d      T2             t2     1
; GBufferDTexture                   texture     f32          2d      T3             t3     1
; AmbientCubemap                    texture     f32        cube      T4             t4     1
; PreIntegratedGF                   texture     f32          2d      T5             t5     1
; AmbientOcclusionTexture           texture     f32          2d      T6             t6     1
;
;
; ViewId state:
;
; Number of inputs: 8, outputs: 4
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 0, 1, 2, 3 }
;   output 1 depends on inputs: { 0, 1, 2, 3 }
;   output 2 depends on inputs: { 0, 1, 2, 3 }
;   output 3 depends on inputs: { 0, 1, 2, 3 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%"class.TextureCube<vector<float, 4> >" = type { <4 x float> }
%_RootShaderParameters = type { <4 x float>, <4 x float> }
%hostlayout.UniformBufferConstants_View = type { [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <4 x float>, <4 x float>, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <4 x float>, <4 x float>, <2 x float>, <2 x float>, <4 x float>, <4 x float>, <4 x i32>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, <2 x float>, i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i32, float, float, float, float, <4 x float>, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <4 x float>, float, float, float, float, float, float, float, float, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <3 x float>, float, <4 x float>, [4 x <4 x float>], <4 x float>, float, float, float, float, <4 x float>, float, float, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, <4 x float>, float, float, float, float, <4 x float>, [8 x <4 x float>], float, float, float, float, i32, float, float, float, <3 x float>, i32, [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], float, float, i32, i32, <3 x float>, float, <3 x float>, float, float, float, i32, float, float, float, float, float, <2 x i32>, float, float, <3 x float>, float, <3 x float>, float, <2 x float>, <2 x float>, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, float, float, float, float, [2 x <4 x float>], float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <2 x float>, float, float, <4 x float>, float, i32, float, float, <4 x float>, i32, i32, i32, float, <4 x float>, <4 x float>, <3 x float>, float, i32, i32, i32, i32, [32 x <4 x i32>], i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, float, float, i32, i32, i32, i32, i32, i32, <4 x float>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <3 x float>, float, <3 x float> }
%struct.SamplerState = type { i32 }

define void @MainPS() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 6, i32 6, i32 0, i8 0 }, i32 6, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 5, i32 5, i32 0, i8 0 }, i32 5, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 4, i32 4, i32 0, i8 0 }, i32 4, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 3, i32 3, i32 0, i8 0 }, i32 3, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 0 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %6 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 0 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %7 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind zeroinitializer, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %8 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 3 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %9 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 3 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %10 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 3 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %11 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 1000, i8 3 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %12 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 2 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %13 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %14 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %12, %dx.types.ResourceProperties { i32 13, i32 5388 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %15 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %13, %dx.types.ResourceProperties { i32 13, i32 224 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %16 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %17 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %18 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %19 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %20 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %7, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %21 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %11, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %22 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %20, %dx.types.Handle %21, float %16, float %17, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %23 = extractvalue %dx.types.ResRet.f32 %22, 0
  %24 = extractvalue %dx.types.ResRet.f32 %22, 1
  %25 = extractvalue %dx.types.ResRet.f32 %22, 2
  %26 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %6, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %27 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %26, %dx.types.Handle %21, float %16, float %17, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %28 = extractvalue %dx.types.ResRet.f32 %27, 0
  %29 = extractvalue %dx.types.ResRet.f32 %27, 1
  %30 = extractvalue %dx.types.ResRet.f32 %27, 2
  %31 = extractvalue %dx.types.ResRet.f32 %27, 3
  %32 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %5, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %33 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %32, %dx.types.Handle %21, float %16, float %17, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %34 = extractvalue %dx.types.ResRet.f32 %33, 0
  %35 = extractvalue %dx.types.ResRet.f32 %33, 1
  %36 = extractvalue %dx.types.ResRet.f32 %33, 2
  %37 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %4, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %38 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %37, %dx.types.Handle %21, float %16, float %17, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %39 = extractvalue %dx.types.ResRet.f32 %38, 0
  %40 = extractvalue %dx.types.ResRet.f32 %38, 1
  %41 = extractvalue %dx.types.ResRet.f32 %38, 2
  %42 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %14, i32 132)  ; CBufferLoadLegacy(handle,regIndex)
  %43 = extractvalue %dx.types.CBufRet.f32 %42, 0
  %44 = extractvalue %dx.types.CBufRet.f32 %42, 1
  %45 = fmul fast float %43, %16
  %46 = fmul fast float %44, %17
  %47 = fptoui float %45 to i32
  %48 = fptoui float %46 to i32
  %49 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %14, i32 153)  ; CBufferLoadLegacy(handle,regIndex)
  %50 = extractvalue %dx.types.CBufRet.f32 %49, 0
  %51 = fptoui float %50 to i32
  %52 = add i32 %47, %48
  %53 = add i32 %52, %51
  %54 = and i32 %53, 1
  %55 = icmp ne i32 %54, 0
  %56 = fmul fast float %31, 2.550000e+02
  %57 = fadd fast float %56, 5.000000e-01
  %58 = fptoui float %57 to i32
  %59 = and i32 %58, 15
  %60 = fmul fast float %23, 2.000000e+00
  %61 = fmul fast float %24, 2.000000e+00
  %62 = fmul fast float %25, 2.000000e+00
  %63 = fadd fast float %60, -1.000000e+00
  %64 = fadd fast float %61, -1.000000e+00
  %65 = fadd fast float %62, -1.000000e+00
  %66 = and i32 %58, 14
  %67 = icmp eq i32 %66, 2
  %68 = and i32 %58, 12
  %69 = icmp eq i32 %68, 4
  %70 = or i1 %69, %67
  %71 = icmp eq i32 %66, 8
  %72 = or i1 %71, %70
  %73 = select i1 %72, float %39, float 0.000000e+00
  %74 = select i1 %72, float %40, float 0.000000e+00
  %75 = select i1 %72, float %41, float 0.000000e+00
  %76 = call float @dx.op.dot3.f32(i32 55, float %63, float %64, float %65, float %63, float %64, float %65)  ; Dot3(ax,ay,az,bx,by,bz)
  %77 = call float @dx.op.unary.f32(i32 25, float %76)  ; Rsqrt(value)
  %78 = fmul fast float %77, %63
  %79 = fmul fast float %77, %64
  %80 = fmul fast float %77, %65
  %81 = icmp eq i32 %59, 9
  %82 = select i1 %81, float 0.000000e+00, float %28
  %83 = fmul fast float %29, 0x3FB47AE140000000
  %84 = fsub fast float %34, %83
  %85 = fsub fast float %35, %83
  %86 = fsub fast float %36, %83
  %87 = fmul fast float %82, %84
  %88 = fmul fast float %82, %85
  %89 = fmul fast float %82, %86
  %90 = fadd fast float %87, %83
  %91 = fadd fast float %88, %83
  %92 = fadd fast float %89, %83
  %93 = icmp eq i32 %59, 5
  %94 = or i1 %93, %81
  br i1 %94, label %95, label %117

; <label>:95                                      ; preds = %0
  %96 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %14, i32 247)  ; CBufferLoadLegacy(handle,regIndex)
  %97 = extractvalue %dx.types.CBufRet.f32 %96, 3
  %98 = fcmp fast ogt float %97, 0.000000e+00
  br i1 %98, label %99, label %103

; <label>:99                                      ; preds = %95
  %100 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %14, i32 228)  ; CBufferLoadLegacy(handle,regIndex)
  %101 = extractvalue %dx.types.CBufRet.f32 %100, 2
  %102 = fcmp fast ogt float %101, 0.000000e+00
  br label %103

; <label>:103                                     ; preds = %99, %95
  %104 = phi i1 [ false, %95 ], [ %102, %99 ]
  %105 = fcmp fast une float %97, 0.000000e+00
  %106 = select i1 %105, float 1.000000e+00, float %34
  %107 = select i1 %105, float 1.000000e+00, float %35
  %108 = select i1 %105, float 1.000000e+00, float %36
  br i1 %104, label %109, label %117

; <label>:109                                     ; preds = %103
  %110 = uitofp i1 %55 to float
  %111 = xor i1 %55, true
  %112 = uitofp i1 %111 to float
  %113 = fmul fast float %112, %90
  %114 = fmul fast float %112, %91
  %115 = fmul fast float %112, %92
  %116 = fmul fast float %112, %29
  br label %117

; <label>:117                                     ; preds = %109, %103, %0
  %118 = phi float [ %90, %0 ], [ %113, %109 ], [ %90, %103 ]
  %119 = phi float [ %91, %0 ], [ %114, %109 ], [ %91, %103 ]
  %120 = phi float [ %92, %0 ], [ %115, %109 ], [ %92, %103 ]
  %121 = phi float [ %34, %0 ], [ %110, %109 ], [ %106, %103 ]
  %122 = phi float [ %35, %0 ], [ %110, %109 ], [ %107, %103 ]
  %123 = phi float [ %36, %0 ], [ %110, %109 ], [ %108, %103 ]
  %124 = phi float [ %29, %0 ], [ %116, %109 ], [ %29, %103 ]
  %125 = fmul fast float %121, %82
  %126 = fmul fast float %122, %82
  %127 = fmul fast float %123, %82
  %128 = fsub fast float %121, %125
  %129 = fsub fast float %122, %126
  %130 = fsub fast float %123, %127
  %131 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %14, i32 137)  ; CBufferLoadLegacy(handle,regIndex)
  %132 = extractvalue %dx.types.CBufRet.f32 %131, 3
  %133 = fmul fast float %132, %128
  %134 = fmul fast float %132, %129
  %135 = fmul fast float %132, %130
  %136 = extractvalue %dx.types.CBufRet.f32 %131, 0
  %137 = extractvalue %dx.types.CBufRet.f32 %131, 1
  %138 = extractvalue %dx.types.CBufRet.f32 %131, 2
  %139 = fadd fast float %133, %136
  %140 = fadd fast float %134, %137
  %141 = fadd fast float %135, %138
  %142 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %14, i32 138)  ; CBufferLoadLegacy(handle,regIndex)
  %143 = extractvalue %dx.types.CBufRet.f32 %142, 3
  %144 = fmul fast float %143, %118
  %145 = fmul fast float %143, %119
  %146 = fmul fast float %143, %120
  %147 = extractvalue %dx.types.CBufRet.f32 %142, 0
  %148 = extractvalue %dx.types.CBufRet.f32 %142, 1
  %149 = extractvalue %dx.types.CBufRet.f32 %142, 2
  %150 = fadd fast float %144, %147
  %151 = fadd fast float %145, %148
  %152 = fadd fast float %146, %149
  %153 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 13)  ; CBufferLoadLegacy(handle,regIndex)
  %154 = extractvalue %dx.types.CBufRet.f32 %153, 2
  %155 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %14, i32 52)  ; CBufferLoadLegacy(handle,regIndex)
  %156 = extractvalue %dx.types.CBufRet.f32 %155, 0
  %157 = extractvalue %dx.types.CBufRet.f32 %155, 1
  %158 = extractvalue %dx.types.CBufRet.f32 %155, 2
  %159 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %14, i32 53)  ; CBufferLoadLegacy(handle,regIndex)
  %160 = extractvalue %dx.types.CBufRet.f32 %159, 0
  %161 = extractvalue %dx.types.CBufRet.f32 %159, 1
  %162 = extractvalue %dx.types.CBufRet.f32 %159, 2
  %163 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %14, i32 54)  ; CBufferLoadLegacy(handle,regIndex)
  %164 = extractvalue %dx.types.CBufRet.f32 %163, 0
  %165 = extractvalue %dx.types.CBufRet.f32 %163, 1
  %166 = extractvalue %dx.types.CBufRet.f32 %163, 2
  %167 = fmul fast float %156, %18
  %168 = call float @dx.op.tertiary.f32(i32 46, float %19, float %160, float %167)  ; FMad(a,b,c)
  %169 = fadd fast float %164, %168
  %170 = fmul fast float %157, %18
  %171 = call float @dx.op.tertiary.f32(i32 46, float %19, float %161, float %170)  ; FMad(a,b,c)
  %172 = fadd fast float %171, %165
  %173 = fmul fast float %158, %18
  %174 = call float @dx.op.tertiary.f32(i32 46, float %19, float %162, float %173)  ; FMad(a,b,c)
  %175 = fadd fast float %174, %166
  %176 = call float @dx.op.dot3.f32(i32 55, float %169, float %172, float %175, float %169, float %172, float %175)  ; Dot3(ax,ay,az,bx,by,bz)
  %177 = call float @dx.op.unary.f32(i32 25, float %176)  ; Rsqrt(value)
  %178 = fmul fast float %177, %169
  %179 = fmul fast float %177, %172
  %180 = fmul fast float %177, %175
  %181 = fsub fast float -0.000000e+00, %178
  %182 = fsub fast float -0.000000e+00, %179
  %183 = fsub fast float -0.000000e+00, %180
  %184 = call float @dx.op.dot3.f32(i32 55, float %181, float %182, float %183, float %78, float %79, float %80)  ; Dot3(ax,ay,az,bx,by,bz)
  %185 = fmul fast float %184, 2.000000e+00
  %186 = fmul fast float %185, %78
  %187 = fmul fast float %185, %79
  %188 = fmul fast float %185, %80
  %189 = fadd fast float %186, %178
  %190 = fadd fast float %187, %179
  %191 = fadd fast float %188, %180
  %192 = call float @dx.op.dot3.f32(i32 55, float %78, float %79, float %80, float %181, float %182, float %183)  ; Dot3(ax,ay,az,bx,by,bz)
  %193 = call float @dx.op.unary.f32(i32 7, float %192)  ; Saturate(value)
  %194 = fmul fast float %30, %30
  %195 = fsub fast float 1.000000e+00, %194
  %196 = call float @dx.op.unary.f32(i32 24, float %195)  ; Sqrt(value)
  %197 = fadd fast float %196, %194
  %198 = fmul fast float %197, %195
  %199 = fsub fast float %189, %78
  %200 = fsub fast float %190, %79
  %201 = fsub fast float %191, %80
  %202 = fmul fast float %198, %199
  %203 = fmul fast float %198, %200
  %204 = fmul fast float %198, %201
  %205 = fadd fast float %202, %78
  %206 = fadd fast float %203, %79
  %207 = fadd fast float %204, %80
  %208 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 5, i32 1033 })  ; AnnotateHandle(res,props)  resource: TextureCube<4xF32>
  %209 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %10, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %210 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %208, %dx.types.Handle %209, float %78, float %79, float %80, float undef, i32 undef, i32 undef, i32 undef, float %154)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %211 = extractvalue %dx.types.ResRet.f32 %210, 0
  %212 = extractvalue %dx.types.ResRet.f32 %210, 1
  %213 = extractvalue %dx.types.ResRet.f32 %210, 2
  %214 = fmul fast float %211, %139
  %215 = fmul fast float %212, %140
  %216 = fmul fast float %213, %141
  %217 = icmp eq i32 %59, 4
  %218 = extractvalue %dx.types.CBufRet.f32 %153, 3
  %219 = call float @dx.op.unary.f32(i32 23, float %30)  ; Log(value)
  %220 = fmul fast float %219, 0x3FF2666660000000
  %221 = fadd fast float %218, -4.000000e+00
  %222 = fadd fast float %221, %220
  %223 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %224 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %9, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  br i1 %217, label %225, label %244, !dx.controlflow.hints !33

; <label>:225                                     ; preds = %117
  %226 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %208, %dx.types.Handle %209, float %205, float %206, float %207, float undef, i32 undef, i32 undef, i32 undef, float %222)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %227 = extractvalue %dx.types.ResRet.f32 %226, 0
  %228 = extractvalue %dx.types.ResRet.f32 %226, 1
  %229 = extractvalue %dx.types.ResRet.f32 %226, 2
  %230 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %223, %dx.types.Handle %224, float %193, float %30, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %231 = extractvalue %dx.types.ResRet.f32 %230, 0
  %232 = extractvalue %dx.types.ResRet.f32 %230, 1
  %233 = fmul fast float %231, %150
  %234 = fmul fast float %231, %151
  %235 = fmul fast float %231, %152
  %236 = fsub fast float 1.000000e+00, %73
  %237 = fmul fast float %232, %236
  %238 = fadd fast float %233, %237
  %239 = fadd fast float %234, %237
  %240 = fadd fast float %235, %237
  %241 = fmul fast float %238, %227
  %242 = fmul fast float %239, %228
  %243 = fmul fast float %240, %229
  br label %264

; <label>:244                                     ; preds = %117
  %245 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %208, %dx.types.Handle %209, float %205, float %206, float %207, float undef, i32 undef, i32 undef, i32 undef, float %222)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %246 = extractvalue %dx.types.ResRet.f32 %245, 0
  %247 = extractvalue %dx.types.ResRet.f32 %245, 1
  %248 = extractvalue %dx.types.ResRet.f32 %245, 2
  %249 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %223, %dx.types.Handle %224, float %193, float %30, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %250 = extractvalue %dx.types.ResRet.f32 %249, 0
  %251 = extractvalue %dx.types.ResRet.f32 %249, 1
  %252 = fmul fast float %250, %150
  %253 = fmul fast float %250, %151
  %254 = fmul fast float %250, %152
  %255 = fmul fast float %151, 5.000000e+01
  %256 = call float @dx.op.unary.f32(i32 7, float %255)  ; Saturate(value)
  %257 = fmul fast float %256, %251
  %258 = fadd fast float %252, %257
  %259 = fadd fast float %253, %257
  %260 = fadd fast float %254, %257
  %261 = fmul fast float %258, %246
  %262 = fmul fast float %259, %247
  %263 = fmul fast float %260, %248
  br label %264

; <label>:264                                     ; preds = %244, %225
  %265 = phi float [ %241, %225 ], [ %261, %244 ]
  %266 = phi float [ %242, %225 ], [ %262, %244 ]
  %267 = phi float [ %243, %225 ], [ %263, %244 ]
  br i1 %217, label %268, label %299, !dx.controlflow.hints !34

; <label>:268                                     ; preds = %264
  %269 = extractvalue %dx.types.CBufRet.f32 %153, 3
  %270 = call float @dx.op.unary.f32(i32 23, float %74)  ; Log(value)
  %271 = fmul fast float %270, 0x3FF2666660000000
  %272 = fadd fast float %269, -4.000000e+00
  %273 = fadd fast float %272, %271
  %274 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %208, %dx.types.Handle %209, float %189, float %190, float %191, float undef, i32 undef, i32 undef, i32 undef, float %273)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %275 = extractvalue %dx.types.ResRet.f32 %274, 0
  %276 = extractvalue %dx.types.ResRet.f32 %274, 1
  %277 = extractvalue %dx.types.ResRet.f32 %274, 2
  %278 = fsub fast float 1.000000e+00, %193
  %279 = call float @dx.op.unary.f32(i32 23, float %278)  ; Log(value)
  %280 = fmul fast float %279, 5.000000e+00
  %281 = call float @dx.op.unary.f32(i32 21, float %280)  ; Exp(value)
  %282 = fsub fast float 1.000000e+00, %281
  %283 = fmul fast float %282, 0x3FA47AE140000000
  %284 = fadd fast float %283, %281
  %285 = fmul fast float %284, %73
  %286 = fsub fast float 1.000000e+00, %285
  %287 = fmul fast float %286, %214
  %288 = fmul fast float %286, %215
  %289 = fmul fast float %286, %216
  %290 = fmul fast float %286, %265
  %291 = fmul fast float %286, %266
  %292 = fmul fast float %286, %267
  %293 = fmul fast float %285, %275
  %294 = fmul fast float %285, %276
  %295 = fmul fast float %285, %277
  %296 = fadd fast float %290, %293
  %297 = fadd fast float %291, %294
  %298 = fadd fast float %292, %295
  br label %299

; <label>:299                                     ; preds = %268, %264
  %300 = phi float [ %287, %268 ], [ %214, %264 ]
  %301 = phi float [ %288, %268 ], [ %215, %264 ]
  %302 = phi float [ %289, %268 ], [ %216, %264 ]
  %303 = phi float [ %296, %268 ], [ %265, %264 ]
  %304 = phi float [ %297, %268 ], [ %266, %264 ]
  %305 = phi float [ %298, %268 ], [ %267, %264 ]
  %306 = icmp eq i32 %59, 7
  br i1 %306, label %307, label %501, !dx.controlflow.hints !35

; <label>:307                                     ; preds = %299
  %308 = fmul fast float %184, %78
  %309 = fmul fast float %184, %79
  %310 = fmul fast float %184, %80
  %311 = fsub fast float %181, %308
  %312 = fsub fast float %182, %309
  %313 = fsub fast float %183, %310
  %314 = call float @dx.op.dot3.f32(i32 55, float %311, float %312, float %313, float %311, float %312, float %313)  ; Dot3(ax,ay,az,bx,by,bz)
  %315 = call float @dx.op.unary.f32(i32 25, float %314)  ; Rsqrt(value)
  %316 = fmul fast float %311, %315
  %317 = fmul fast float %312, %315
  %318 = fmul fast float %313, %315
  %319 = call float @dx.op.dot3.f32(i32 55, float %316, float %317, float %318, float %316, float %317, float %318)  ; Dot3(ax,ay,az,bx,by,bz)
  %320 = call float @dx.op.unary.f32(i32 25, float %319)  ; Rsqrt(value)
  %321 = fmul fast float %320, %316
  %322 = fmul fast float %320, %317
  %323 = fmul fast float %320, %318
  %324 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %208, %dx.types.Handle %209, float %321, float %322, float %323, float undef, i32 undef, i32 undef, i32 undef, float %154)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %325 = extractvalue %dx.types.ResRet.f32 %324, 0
  %326 = extractvalue %dx.types.ResRet.f32 %324, 1
  %327 = extractvalue %dx.types.ResRet.f32 %324, 2
  %328 = call float @dx.op.binary.f32(i32 35, float %30, float 0x3F70101020000000)  ; FMax(a,b)
  %329 = call float @dx.op.binary.f32(i32 36, float %328, float 1.000000e+00)  ; FMin(a,b)
  %330 = call float @dx.op.dot3.f32(i32 55, float %181, float %182, float %183, float %321, float %322, float %323)  ; Dot3(ax,ay,az,bx,by,bz)
  %331 = call float @dx.op.dot3.f32(i32 55, float %78, float %79, float %80, float %321, float %322, float %323)  ; Dot3(ax,ay,az,bx,by,bz)
  %332 = call float @dx.op.binary.f32(i32 35, float %331, float -1.000000e+00)  ; FMax(a,b)
  %333 = call float @dx.op.binary.f32(i32 36, float %332, float 1.000000e+00)  ; FMin(a,b)
  %334 = call float @dx.op.binary.f32(i32 35, float %192, float -1.000000e+00)  ; FMax(a,b)
  %335 = call float @dx.op.binary.f32(i32 36, float %334, float 1.000000e+00)  ; FMin(a,b)
  %336 = call float @dx.op.unary.f32(i32 6, float %335)  ; FAbs(value)
  %337 = fmul fast float %336, 0x3FC40AE960000000
  %338 = fsub fast float 0x3FF921FB60000000, %337
  %339 = fsub fast float 1.000000e+00, %336
  %340 = call float @dx.op.unary.f32(i32 24, float %339)  ; Sqrt(value)
  %341 = fmul fast float %338, %340
  %342 = fcmp fast oge float %335, 0.000000e+00
  %343 = fsub fast float 0x400921FB60000000, %341
  %344 = select i1 %342, float %341, float %343
  %345 = call float @dx.op.unary.f32(i32 6, float %333)  ; FAbs(value)
  %346 = fmul fast float %345, 0x3FC40AE960000000
  %347 = fsub fast float 0x3FF921FB60000000, %346
  %348 = fsub fast float 1.000000e+00, %345
  %349 = call float @dx.op.unary.f32(i32 24, float %348)  ; Sqrt(value)
  %350 = fmul fast float %347, %349
  %351 = fcmp fast oge float %333, 0.000000e+00
  %352 = fsub fast float 0x400921FB60000000, %350
  %353 = select i1 %351, float %350, float %352
  %354 = fsub fast float %353, %344
  %355 = call float @dx.op.unary.f32(i32 6, float %354)  ; FAbs(value)
  %356 = fmul fast float %355, 5.000000e-01
  %357 = call float @dx.op.unary.f32(i32 12, float %356)  ; Cos(value)
  %358 = fmul fast float %333, %78
  %359 = fmul fast float %333, %79
  %360 = fmul fast float %333, %80
  %361 = fsub fast float %321, %358
  %362 = fsub fast float %322, %359
  %363 = fsub fast float %323, %360
  %364 = fmul fast float %335, %78
  %365 = fmul fast float %335, %79
  %366 = fmul fast float %335, %80
  %367 = fsub fast float %181, %364
  %368 = fsub fast float %182, %365
  %369 = fsub fast float %183, %366
  %370 = call float @dx.op.dot3.f32(i32 55, float %361, float %362, float %363, float %367, float %368, float %369)  ; Dot3(ax,ay,az,bx,by,bz)
  %371 = call float @dx.op.dot3.f32(i32 55, float %361, float %362, float %363, float %361, float %362, float %363)  ; Dot3(ax,ay,az,bx,by,bz)
  %372 = call float @dx.op.dot3.f32(i32 55, float %367, float %368, float %369, float %367, float %368, float %369)  ; Dot3(ax,ay,az,bx,by,bz)
  %373 = fmul fast float %372, %371
  %374 = fadd fast float %373, 0x3F1A36E2E0000000
  %375 = call float @dx.op.unary.f32(i32 25, float %374)  ; Rsqrt(value)
  %376 = fmul fast float %375, %370
  %377 = fmul fast float %376, 5.000000e-01
  %378 = fadd fast float %377, 5.000000e-01
  %379 = call float @dx.op.unary.f32(i32 7, float %378)  ; Saturate(value)
  %380 = call float @dx.op.unary.f32(i32 24, float %379)  ; Sqrt(value)
  %381 = fmul fast float %329, %329
  %382 = fadd fast float %381, 0x3FC99999A0000000
  %383 = fmul fast float %381, 2.000000e+00
  %384 = fadd fast float %383, 0x3FC99999A0000000
  %385 = fmul fast float %380, 0x3FEFEBF020000000
  %386 = fmul fast float %335, %335
  %387 = fsub fast float 1.000000e+00, %386
  %388 = call float @dx.op.unary.f32(i32 24, float %387)  ; Sqrt(value)
  %389 = fmul fast float %385, %388
  %390 = fmul fast float %335, 0x3FB1E7C640000000
  %391 = fsub fast float %389, %390
  %392 = fmul fast float %391, 0x3FC1E7C640000000
  %393 = fadd fast float %335, %333
  %394 = fadd fast float %393, %392
  %395 = fmul fast float %382, 0x3FF6A09E60000000
  %396 = fmul fast float %395, %380
  %397 = fmul fast float %394, %394
  %398 = fmul fast float %397, -5.000000e-01
  %399 = fmul fast float %396, %396
  %400 = fdiv fast float %398, %399
  %401 = fmul fast float %400, 0x3FF7154760000000
  %402 = call float @dx.op.unary.f32(i32 21, float %401)  ; Exp(value)
  %403 = fmul fast float %396, 0x40040D9320000000
  %404 = fdiv fast float %402, %403
  %405 = fmul fast float %330, 5.000000e-01
  %406 = fadd fast float %405, 5.000000e-01
  %407 = call float @dx.op.unary.f32(i32 7, float %406)  ; Saturate(value)
  %408 = call float @dx.op.unary.f32(i32 24, float %407)  ; Sqrt(value)
  %409 = fsub fast float 1.000000e+00, %408
  %410 = fmul fast float %409, %409
  %411 = fmul fast float %409, 0x3FEE82E740000000
  %412 = fmul fast float %410, %410
  %413 = fmul fast float %412, %411
  %414 = fadd fast float %413, 0x3FA7D18B20000000
  %415 = fsub fast float -0.000000e+00, %330
  %416 = call float @dx.op.unary.f32(i32 7, float %415)  ; Saturate(value)
  %417 = fsub fast float 1.000000e+00, %416
  %418 = fmul fast float %124, 5.000000e-01
  %419 = fmul fast float %418, %380
  %420 = fmul fast float %419, %404
  %421 = fmul fast float %420, %417
  %422 = fmul fast float %421, %414
  %423 = fadd fast float %333, 0xBFC1EB8520000000
  %424 = fadd fast float %423, %335
  %425 = fmul fast float %424, %424
  %426 = fmul fast float %425, -5.000000e-01
  %427 = fmul fast float %384, %384
  %428 = fdiv fast float %426, %427
  %429 = fmul fast float %428, 0x3FF7154760000000
  %430 = call float @dx.op.unary.f32(i32 21, float %429)  ; Exp(value)
  %431 = fmul fast float %381, 0x40140D9320000000
  %432 = fadd fast float %431, 0x3FE00ADC20000000
  %433 = fdiv fast float %430, %432
  %434 = fmul fast float %357, 5.000000e-01
  %435 = fsub fast float 1.000000e+00, %434
  %436 = fmul fast float %435, %435
  %437 = fmul fast float %357, 0x3FDE82E740000000
  %438 = fsub fast float 0x3FEE82E740000000, %437
  %439 = fmul fast float %436, %436
  %440 = fmul fast float %439, %438
  %441 = fadd fast float %440, 0x3FA7D18B20000000
  %442 = fsub fast float 0x3FEE82E740000000, %440
  %443 = fdiv fast float 0x3FE99999A0000000, %357
  %444 = call float @dx.op.unary.f32(i32 6, float %121)  ; FAbs(value)
  %445 = call float @dx.op.unary.f32(i32 6, float %122)  ; FAbs(value)
  %446 = call float @dx.op.unary.f32(i32 6, float %123)  ; FAbs(value)
  %447 = call float @dx.op.unary.f32(i32 23, float %444)  ; Log(value)
  %448 = call float @dx.op.unary.f32(i32 23, float %445)  ; Log(value)
  %449 = call float @dx.op.unary.f32(i32 23, float %446)  ; Log(value)
  %450 = fmul fast float %447, %443
  %451 = fmul fast float %448, %443
  %452 = fmul fast float %449, %443
  %453 = call float @dx.op.unary.f32(i32 21, float %450)  ; Exp(value)
  %454 = call float @dx.op.unary.f32(i32 21, float %451)  ; Exp(value)
  %455 = call float @dx.op.unary.f32(i32 21, float %452)  ; Exp(value)
  %456 = fmul fast float %376, 0x4038869BE0000000
  %457 = fadd fast float %456, 0xC038355B40000000
  %458 = call float @dx.op.unary.f32(i32 21, float %457)  ; Exp(value)
  %459 = fmul fast float %442, %442
  %460 = fmul fast float %459, %441
  %461 = fmul fast float %460, %433
  %462 = fmul fast float %461, %458
  %463 = fmul fast float %462, %453
  %464 = fmul fast float %462, %454
  %465 = fmul fast float %462, %455
  %466 = fadd fast float %422, %463
  %467 = fadd fast float %422, %464
  %468 = fadd fast float %422, %465
  %469 = call float @dx.op.unary.f32(i32 6, float %331)  ; FAbs(value)
  %470 = fsub fast float 1.000000e+00, %469
  %471 = call float @dx.op.dot3.f32(i32 55, float %316, float %317, float %318, float %321, float %322, float %323)  ; Dot3(ax,ay,az,bx,by,bz)
  %472 = fadd fast float %471, 1.000000e+00
  %473 = fmul fast float %472, 2.500000e-01
  %474 = call float @dx.op.unary.f32(i32 7, float %473)  ; Saturate(value)
  %475 = fsub fast float %470, %474
  %476 = fmul fast float %475, 0x3FD51EB860000000
  %477 = fadd fast float %476, %474
  %478 = fmul fast float %82, 0x3FD45F3060000000
  %479 = fmul fast float %478, %477
  %480 = call float @dx.op.unary.f32(i32 24, float %444)  ; Sqrt(value)
  %481 = call float @dx.op.unary.f32(i32 24, float %445)  ; Sqrt(value)
  %482 = call float @dx.op.unary.f32(i32 24, float %446)  ; Sqrt(value)
  %483 = fmul fast float %479, %480
  %484 = fmul fast float %481, %479
  %485 = fmul fast float %482, %479
  %486 = fadd fast float %466, %483
  %487 = fadd fast float %467, %484
  %488 = fadd fast float %468, %485
  %489 = fsub fast float -0.000000e+00, %486
  %490 = fsub fast float -0.000000e+00, %487
  %491 = fsub fast float -0.000000e+00, %488
  %492 = call float @dx.op.binary.f32(i32 36, float %489, float 0.000000e+00)  ; FMin(a,b)
  %493 = call float @dx.op.binary.f32(i32 36, float %490, float 0.000000e+00)  ; FMin(a,b)
  %494 = call float @dx.op.binary.f32(i32 36, float %491, float 0.000000e+00)  ; FMin(a,b)
  %495 = fmul fast float %325, 0xC00921FB60000000
  %496 = fmul fast float %495, %492
  %497 = fmul fast float %326, 0xC00921FB60000000
  %498 = fmul fast float %497, %493
  %499 = fmul fast float %327, 0xC00921FB60000000
  %500 = fmul fast float %499, %494
  br label %501

; <label>:501                                     ; preds = %307, %299
  %502 = phi float [ 0.000000e+00, %307 ], [ %300, %299 ]
  %503 = phi float [ 0.000000e+00, %307 ], [ %301, %299 ]
  %504 = phi float [ 0.000000e+00, %307 ], [ %302, %299 ]
  %505 = phi float [ %496, %307 ], [ %303, %299 ]
  %506 = phi float [ %498, %307 ], [ %304, %299 ]
  %507 = phi float [ %500, %307 ], [ %305, %299 ]
  %508 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %509 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %8, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %510 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %508, %dx.types.Handle %509, float %16, float %17, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %511 = extractvalue %dx.types.ResRet.f32 %510, 0
  br i1 %67, label %512, label %540

; <label>:512                                     ; preds = %501
  %513 = fmul fast float %73, %73
  %514 = fmul fast float %74, %74
  %515 = fmul fast float %75, %75
  %516 = fmul fast float %513, 5.000000e-01
  %517 = fmul fast float %516, %211
  %518 = fmul fast float %514, 5.000000e-01
  %519 = fmul fast float %518, %212
  %520 = fmul fast float %515, 5.000000e-01
  %521 = fmul fast float %520, %213
  %522 = fadd fast float %502, %517
  %523 = fadd fast float %503, %519
  %524 = fadd fast float %504, %521
  %525 = fadd fast float %154, -2.500000e+00
  %526 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %208, %dx.types.Handle %209, float %178, float %179, float %180, float undef, i32 undef, i32 undef, i32 undef, float %525)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %527 = extractvalue %dx.types.ResRet.f32 %526, 0
  %528 = extractvalue %dx.types.ResRet.f32 %526, 1
  %529 = extractvalue %dx.types.ResRet.f32 %526, 2
  %530 = fmul fast float %511, 5.000000e-01
  %531 = fmul fast float %530, %513
  %532 = fmul fast float %531, %527
  %533 = fmul fast float %530, %514
  %534 = fmul fast float %533, %528
  %535 = fmul fast float %530, %515
  %536 = fmul fast float %535, %529
  %537 = fadd fast float %532, %505
  %538 = fadd fast float %534, %506
  %539 = fadd fast float %536, %507
  br label %540

; <label>:540                                     ; preds = %512, %501
  %541 = phi float [ %522, %512 ], [ %502, %501 ]
  %542 = phi float [ %523, %512 ], [ %503, %501 ]
  %543 = phi float [ %524, %512 ], [ %504, %501 ]
  %544 = phi float [ %537, %512 ], [ %505, %501 ]
  %545 = phi float [ %538, %512 ], [ %506, %501 ]
  %546 = phi float [ %539, %512 ], [ %507, %501 ]
  %547 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 12)  ; CBufferLoadLegacy(handle,regIndex)
  %548 = extractvalue %dx.types.CBufRet.f32 %547, 0
  %549 = extractvalue %dx.types.CBufRet.f32 %547, 1
  %550 = extractvalue %dx.types.CBufRet.f32 %547, 2
  %551 = fadd fast float %544, %541
  %552 = fadd fast float %545, %542
  %553 = fadd fast float %546, %543
  br i1 %94, label %554, label %563

; <label>:554                                     ; preds = %540
  %555 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %14, i32 228)  ; CBufferLoadLegacy(handle,regIndex)
  %556 = extractvalue %dx.types.CBufRet.f32 %555, 2
  %557 = fcmp fast oeq float %556, 0.000000e+00
  br i1 %557, label %558, label %563

; <label>:558                                     ; preds = %554
  %559 = fmul fast float %548, %541
  %560 = fmul fast float %549, %542
  %561 = fmul fast float %550, %543
  %562 = call float @dx.op.dot3.f32(i32 55, float %559, float %560, float %561, float 0x3FD3333340000000, float 0x3FE2E147A0000000, float 0x3FBC28F5C0000000)  ; Dot3(ax,ay,az,bx,by,bz)
  br label %563

; <label>:563                                     ; preds = %558, %554, %540
  %564 = phi float [ %562, %558 ], [ 0.000000e+00, %554 ], [ 0.000000e+00, %540 ]
  %565 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %14, i32 228)  ; CBufferLoadLegacy(handle,regIndex)
  %566 = extractvalue %dx.types.CBufRet.f32 %565, 2
  %567 = fcmp fast oeq float %566, 0.000000e+00
  %568 = select i1 %567, float %564, float 0.000000e+00
  %569 = fmul fast float %551, %511
  %570 = fmul fast float %569, %548
  %571 = fmul fast float %552, %511
  %572 = fmul fast float %571, %549
  %573 = fmul fast float %553, %511
  %574 = fmul fast float %573, %550
  %575 = fmul fast float %568, %511
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %570)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %572)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %574)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %575)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.viewIdState = !{!22}
!dx.entryPoints = !{!23}

!0 = !{!"dxc(private) 1.7.0.0 (private, 00000000)"}
!1 = !{i32 1, i32 6}
!2 = !{i32 1, i32 7}
!3 = !{!"ps", i32 6, i32 6}
!4 = !{!5, null, !14, !17}
!5 = !{!6, !8, !9, !10, !11, !12, !13}
!6 = !{i32 0, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i32 0, !7}
!7 = !{i32 0, i32 9}
!8 = !{i32 1, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 1, i32 1, i32 2, i32 0, !7}
!9 = !{i32 2, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 2, i32 1, i32 2, i32 0, !7}
!10 = !{i32 3, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 3, i32 1, i32 2, i32 0, !7}
!11 = !{i32 4, %"class.TextureCube<vector<float, 4> >"* undef, !"", i32 0, i32 4, i32 1, i32 5, i32 0, !7}
!12 = !{i32 5, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 5, i32 1, i32 2, i32 0, !7}
!13 = !{i32 6, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 6, i32 1, i32 2, i32 0, !7}
!14 = !{!15, !16}
!15 = !{i32 0, %_RootShaderParameters* undef, !"", i32 0, i32 0, i32 1, i32 224, null}
!16 = !{i32 1, %hostlayout.UniformBufferConstants_View* undef, !"", i32 0, i32 1, i32 1, i32 5388, null}
!17 = !{!18, !19, !20, !21}
!18 = !{i32 0, %struct.SamplerState* undef, !"", i32 1000, i32 1, i32 1, i32 0, null}
!19 = !{i32 1, %struct.SamplerState* undef, !"", i32 0, i32 0, i32 1, i32 0, null}
!20 = !{i32 2, %struct.SamplerState* undef, !"", i32 0, i32 1, i32 1, i32 0, null}
!21 = !{i32 3, %struct.SamplerState* undef, !"", i32 0, i32 2, i32 1, i32 0, null}
!22 = !{[10 x i32] [i32 8, i32 4, i32 15, i32 15, i32 15, i32 15, i32 0, i32 0, i32 0, i32 0]}
!23 = !{void ()* @MainPS, !"MainPS", !24, !4, !32}
!24 = !{!25, !30, null}
!25 = !{!26, !29}
!26 = !{i32 0, !"TEXCOORD", i8 9, i8 0, !27, i8 4, i32 1, i8 4, i32 0, i8 0, !28}
!27 = !{i32 0}
!28 = !{i32 3, i32 15}
!29 = !{i32 1, !"SV_Position", i8 9, i8 3, !27, i8 4, i32 1, i8 4, i32 1, i8 0, null}
!30 = !{!31}
!31 = !{i32 0, !"SV_Target", i8 9, i8 16, !27, i8 0, i32 1, i8 4, i32 0, i8 0, !28}
!32 = !{i32 5, !27}
!33 = distinct !{!33, !"dx.controlflow.hints", i32 1}
!34 = distinct !{!34, !"dx.controlflow.hints", i32 1}
!35 = distinct !{!35, !"dx.controlflow.hints", i32 1}
