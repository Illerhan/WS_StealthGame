;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
; shader hash: ee77bc27e19bd177ae11e7d1f3582ddd
;
; Pipeline Runtime Information: 
;
; Compute Shader
; NumThreads=(8,8,1)
;
;
; Buffer Definitions:
;
; cbuffer _RootShaderParameters
; {
;
;   struct hostlayout._RootShaderParameters
;   {
;
;       float2 NumGroups;                             ; Offset:   80
;       float3 LightDirection;                        ; Offset:   96
;       float4 LightTranslatedPositionAndInvRadius;   ; Offset:  112
;       float LightSourceRadius;                      ; Offset:  128
;       float RayStartOffsetDepthScale;               ; Offset:  132
;       float3 TanLightAngleAndNormalThreshold;       ; Offset:  144
;       int4 ScissorRectMinAndSize;                   ; Offset:  160
;       uint NumSceneObjects;                         ; Offset:  192
;       uint NumSceneHeightfieldObjects;              ; Offset:  216
;       uint2 ShadowTileListGroupSize;                ; Offset:  344
;       uint ShadowMaxObjectsPerTile;                 ; Offset:  352
;       float3 DistanceFieldBrickSize;                ; Offset:  416
;       float3 DistanceFieldUniqueDataBrickSize;      ; Offset:  432
;       uint3 DistanceFieldBrickAtlasSizeInBricks;    ; Offset:  448
;       uint3 DistanceFieldBrickAtlasMask;            ; Offset:  464
;       uint3 DistanceFieldBrickAtlasSizeLog2;        ; Offset:  480
;       float3 DistanceFieldBrickAtlasTexelSize;      ; Offset:  496
;       float3 DistanceFieldBrickAtlasHalfTexelSize;  ; Offset:  512
;       float3 DistanceFieldBrickOffsetToAtlasUVScale;; Offset:  528
;       float3 DistanceFieldUniqueDataBrickSizeInAtlasTexels;; Offset:  544
;       row_major float4x4 TranslatedWorldToShadow;   ; Offset:  576
;       float TwoSidedMeshDistanceBiasScale;          ; Offset:  640
;       float MinDepth;                               ; Offset:  644
;       float MaxDepth;                               ; Offset:  648
;       uint DownsampleFactor;                        ; Offset:  652
;       float2 InvOutputBufferSize;                   ; Offset:  656
;   
;   } _RootShaderParameters;                          ; Offset:    0 Size:   664
;
; }
;
; cbuffer UniformBufferConstants_View
; {
;
;   struct hostlayout.UniformBufferConstants_View
;   {
;
;       row_major float4x4 View_TranslatedWorldToClip;; Offset:    0
;       row_major float4x4 View_TranslatedWorldToSubpixelClip;; Offset:   64
;       row_major float4x4 View_RelativeWorldToClip;  ; Offset:  128
;       row_major float4x4 View_ClipToRelativeWorld;  ; Offset:  192
;       row_major float4x4 View_TranslatedWorldToView;; Offset:  256
;       row_major float4x4 View_ViewToTranslatedWorld;; Offset:  320
;       row_major float4x4 View_TranslatedWorldToCameraView;; Offset:  384
;       row_major float4x4 View_CameraViewToTranslatedWorld;; Offset:  448
;       row_major float4x4 View_ViewToClip;           ; Offset:  512
;       row_major float4x4 View_ViewToClipNoAA;       ; Offset:  576
;       row_major float4x4 View_ClipToView;           ; Offset:  640
;       row_major float4x4 View_ClipToTranslatedWorld;; Offset:  704
;       row_major float4x4 View_SVPositionToTranslatedWorld;; Offset:  768
;       row_major float4x4 View_ScreenToRelativeWorld;; Offset:  832
;       row_major float4x4 View_ScreenToTranslatedWorld;; Offset:  896
;       row_major float4x4 View_MobileMultiviewShadowTransform;; Offset:  960
;       float3 View_ViewTilePosition;                 ; Offset: 1024
;       float PrePadding_View_1036;                   ; Offset: 1036
;       float3 View_MatrixTilePosition;               ; Offset: 1040
;       float PrePadding_View_1052;                   ; Offset: 1052
;       float3 View_ViewForward;                      ; Offset: 1056
;       float PrePadding_View_1068;                   ; Offset: 1068
;       float3 View_ViewUp;                           ; Offset: 1072
;       float PrePadding_View_1084;                   ; Offset: 1084
;       float3 View_ViewRight;                        ; Offset: 1088
;       float PrePadding_View_1100;                   ; Offset: 1100
;       float3 View_HMDViewNoRollUp;                  ; Offset: 1104
;       float PrePadding_View_1116;                   ; Offset: 1116
;       float3 View_HMDViewNoRollRight;               ; Offset: 1120
;       float PrePadding_View_1132;                   ; Offset: 1132
;       float4 View_InvDeviceZToWorldZTransform;      ; Offset: 1136
;       float4 View_ScreenPositionScaleBias;          ; Offset: 1152
;       float3 View_RelativeWorldCameraOrigin;        ; Offset: 1168
;       float PrePadding_View_1180;                   ; Offset: 1180
;       float3 View_TranslatedWorldCameraOrigin;      ; Offset: 1184
;       float PrePadding_View_1196;                   ; Offset: 1196
;       float3 View_RelativeWorldViewOrigin;          ; Offset: 1200
;       float PrePadding_View_1212;                   ; Offset: 1212
;       float3 View_RelativePreViewTranslation;       ; Offset: 1216
;       float PrePadding_View_1228;                   ; Offset: 1228
;       row_major float4x4 View_PrevViewToClip;       ; Offset: 1232
;       row_major float4x4 View_PrevClipToView;       ; Offset: 1296
;       row_major float4x4 View_PrevTranslatedWorldToClip;; Offset: 1360
;       row_major float4x4 View_PrevTranslatedWorldToView;; Offset: 1424
;       row_major float4x4 View_PrevViewToTranslatedWorld;; Offset: 1488
;       row_major float4x4 View_PrevTranslatedWorldToCameraView;; Offset: 1552
;       row_major float4x4 View_PrevCameraViewToTranslatedWorld;; Offset: 1616
;       float3 View_PrevTranslatedWorldCameraOrigin;  ; Offset: 1680
;       float PrePadding_View_1692;                   ; Offset: 1692
;       float3 View_PrevRelativeWorldCameraOrigin;    ; Offset: 1696
;       float PrePadding_View_1708;                   ; Offset: 1708
;       float3 View_PrevRelativeWorldViewOrigin;      ; Offset: 1712
;       float PrePadding_View_1724;                   ; Offset: 1724
;       float3 View_RelativePrevPreViewTranslation;   ; Offset: 1728
;       float PrePadding_View_1740;                   ; Offset: 1740
;       row_major float4x4 View_PrevClipToRelativeWorld;; Offset: 1744
;       row_major float4x4 View_PrevScreenToTranslatedWorld;; Offset: 1808
;       row_major float4x4 View_ClipToPrevClip;       ; Offset: 1872
;       row_major float4x4 View_ClipToPrevClipWithAA; ; Offset: 1936
;       float4 View_TemporalAAJitter;                 ; Offset: 2000
;       float4 View_GlobalClippingPlane;              ; Offset: 2016
;       float2 View_FieldOfViewWideAngles;            ; Offset: 2032
;       float2 View_PrevFieldOfViewWideAngles;        ; Offset: 2040
;       float4 View_ViewRectMin;                      ; Offset: 2048
;       float4 View_ViewSizeAndInvSize;               ; Offset: 2064
;       uint4 View_ViewRectMinAndSize;                ; Offset: 2080
;       float4 View_LightProbeSizeRatioAndInvSizeRatio;; Offset: 2096
;       float4 View_BufferSizeAndInvSize;             ; Offset: 2112
;       float4 View_BufferBilinearUVMinMax;           ; Offset: 2128
;       float4 View_ScreenToViewSpace;                ; Offset: 2144
;       float2 View_BufferToSceneTextureScale;        ; Offset: 2160
;       float2 View_ResolutionFractionAndInv;         ; Offset: 2168
;       int View_NumSceneColorMSAASamples;            ; Offset: 2176
;       float View_PreExposure;                       ; Offset: 2180
;       float View_OneOverPreExposure;                ; Offset: 2184
;       float PrePadding_View_2188;                   ; Offset: 2188
;       float4 View_DiffuseOverrideParameter;         ; Offset: 2192
;       float4 View_SpecularOverrideParameter;        ; Offset: 2208
;       float4 View_NormalOverrideParameter;          ; Offset: 2224
;       float2 View_RoughnessOverrideParameter;       ; Offset: 2240
;       float View_PrevFrameGameTime;                 ; Offset: 2248
;       float View_PrevFrameRealTime;                 ; Offset: 2252
;       float View_OutOfBoundsMask;                   ; Offset: 2256
;       float PrePadding_View_2260;                   ; Offset: 2260
;       float PrePadding_View_2264;                   ; Offset: 2264
;       float PrePadding_View_2268;                   ; Offset: 2268
;       float3 View_WorldCameraMovementSinceLastFrame;; Offset: 2272
;       float View_CullingSign;                       ; Offset: 2284
;       float View_NearPlane;                         ; Offset: 2288
;       float View_GameTime;                          ; Offset: 2292
;       float View_RealTime;                          ; Offset: 2296
;       float View_DeltaTime;                         ; Offset: 2300
;       float View_MaterialTextureMipBias;            ; Offset: 2304
;       float View_MaterialTextureDerivativeMultiply; ; Offset: 2308
;       uint View_Random;                             ; Offset: 2312
;       uint View_FrameNumber;                        ; Offset: 2316
;       uint View_StateFrameIndexMod8;                ; Offset: 2320
;       uint View_StateFrameIndex;                    ; Offset: 2324
;       uint View_DebugViewModeMask;                  ; Offset: 2328
;       uint View_WorldIsPaused;                      ; Offset: 2332
;       float View_CameraCut;                         ; Offset: 2336
;       float View_UnlitViewmodeMask;                 ; Offset: 2340
;       float PrePadding_View_2344;                   ; Offset: 2344
;       float PrePadding_View_2348;                   ; Offset: 2348
;       float4 View_DirectionalLightColor;            ; Offset: 2352
;       float3 View_DirectionalLightDirection;        ; Offset: 2368
;       float PrePadding_View_2380;                   ; Offset: 2380
;       float4 View_TranslucencyLightingVolumeMin[2]; ; Offset: 2384
;       float4 View_TranslucencyLightingVolumeInvSize[2];; Offset: 2416
;       float4 View_TemporalAAParams;                 ; Offset: 2448
;       float4 View_CircleDOFParams;                  ; Offset: 2464
;       float View_DepthOfFieldSensorWidth;           ; Offset: 2480
;       float View_DepthOfFieldFocalDistance;         ; Offset: 2484
;       float View_DepthOfFieldScale;                 ; Offset: 2488
;       float View_DepthOfFieldFocalLength;           ; Offset: 2492
;       float View_DepthOfFieldFocalRegion;           ; Offset: 2496
;       float View_DepthOfFieldNearTransitionRegion;  ; Offset: 2500
;       float View_DepthOfFieldFarTransitionRegion;   ; Offset: 2504
;       float View_MotionBlurNormalizedToPixel;       ; Offset: 2508
;       float View_GeneralPurposeTweak;               ; Offset: 2512
;       float View_GeneralPurposeTweak2;              ; Offset: 2516
;       float View_DemosaicVposOffset;                ; Offset: 2520
;       float View_DecalDepthBias;                    ; Offset: 2524
;       float3 View_IndirectLightingColorScale;       ; Offset: 2528
;       float PrePadding_View_2540;                   ; Offset: 2540
;       float3 View_PrecomputedIndirectLightingColorScale;; Offset: 2544
;       float PrePadding_View_2556;                   ; Offset: 2556
;       float3 View_PrecomputedIndirectSpecularColorScale;; Offset: 2560
;       float PrePadding_View_2572;                   ; Offset: 2572
;       float4 View_AtmosphereLightDirection[2];      ; Offset: 2576
;       float4 View_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];; Offset: 2608
;       float4 View_AtmosphereLightIlluminanceOuterSpace[2];; Offset: 2640
;       float4 View_AtmosphereLightDiscLuminance[2];  ; Offset: 2672
;       float4 View_AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];; Offset: 2704
;       float4 View_SkyViewLutSizeAndInvSize;         ; Offset: 2736
;       float3 View_SkyCameraTranslatedWorldOrigin;   ; Offset: 2752
;       float PrePadding_View_2764;                   ; Offset: 2764
;       float4 View_SkyPlanetTranslatedWorldCenterAndViewHeight;; Offset: 2768
;       row_major float4x4 View_SkyViewLutReferential;; Offset: 2784
;       float4 View_SkyAtmosphereSkyLuminanceFactor;  ; Offset: 2848
;       float View_SkyAtmospherePresentInScene;       ; Offset: 2864
;       float View_SkyAtmosphereHeightFogContribution;; Offset: 2868
;       float View_SkyAtmosphereBottomRadiusKm;       ; Offset: 2872
;       float View_SkyAtmosphereTopRadiusKm;          ; Offset: 2876
;       float4 View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;; Offset: 2880
;       float View_SkyAtmosphereAerialPerspectiveStartDepthKm;; Offset: 2896
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;; Offset: 2900
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;; Offset: 2904
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;; Offset: 2908
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;; Offset: 2912
;       float View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;; Offset: 2916
;       float PrePadding_View_2920;                   ; Offset: 2920
;       float PrePadding_View_2924;                   ; Offset: 2924
;       float3 View_NormalCurvatureToRoughnessScaleBias;; Offset: 2928
;       float View_RenderingReflectionCaptureMask;    ; Offset: 2940
;       float View_RealTimeReflectionCapture;         ; Offset: 2944
;       float View_RealTimeReflectionCapturePreExposure;; Offset: 2948
;       float PrePadding_View_2952;                   ; Offset: 2952
;       float PrePadding_View_2956;                   ; Offset: 2956
;       float4 View_AmbientCubemapTint;               ; Offset: 2960
;       float View_AmbientCubemapIntensity;           ; Offset: 2976
;       float View_SkyLightApplyPrecomputedBentNormalShadowingFlag;; Offset: 2980
;       float View_SkyLightAffectReflectionFlag;      ; Offset: 2984
;       float View_SkyLightAffectGlobalIlluminationFlag;; Offset: 2988
;       float4 View_SkyLightColor;                    ; Offset: 2992
;       float4 View_MobileSkyIrradianceEnvironmentMap[8];; Offset: 3008
;       float View_MobilePreviewMode;                 ; Offset: 3136
;       float View_HMDEyePaddingOffset;               ; Offset: 3140
;       float View_ReflectionCubemapMaxMip;           ; Offset: 3144
;       float View_ShowDecalsMask;                    ; Offset: 3148
;       uint View_DistanceFieldAOSpecularOcclusionMode;; Offset: 3152
;       float View_IndirectCapsuleSelfShadowingIntensity;; Offset: 3156
;       float PrePadding_View_3160;                   ; Offset: 3160
;       float PrePadding_View_3164;                   ; Offset: 3164
;       float3 View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;; Offset: 3168
;       int View_StereoPassIndex;                     ; Offset: 3180
;       float4 View_GlobalVolumeTranslatedCenterAndExtent[6];; Offset: 3184
;       float4 View_GlobalVolumeTranslatedWorldToUVAddAndMul[6];; Offset: 3280
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVScale[6];; Offset: 3376
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVBias[6];; Offset: 3472
;       float View_GlobalDistanceFieldMipFactor;      ; Offset: 3568
;       float View_GlobalDistanceFieldMipTransition;  ; Offset: 3572
;       int View_GlobalDistanceFieldClipmapSizeInPages;; Offset: 3576
;       int PrePadding_View_3580;                     ; Offset: 3580
;       float3 View_GlobalDistanceFieldInvPageAtlasSize;; Offset: 3584
;       float PrePadding_View_3596;                   ; Offset: 3596
;       float3 View_GlobalDistanceFieldInvCoverageAtlasSize;; Offset: 3600
;       float View_GlobalVolumeDimension;             ; Offset: 3612
;       float View_GlobalVolumeTexelSize;             ; Offset: 3616
;       float View_MaxGlobalDFAOConeDistance;         ; Offset: 3620
;       uint View_NumGlobalSDFClipmaps;               ; Offset: 3624
;       float View_CoveredExpandSurfaceScale;         ; Offset: 3628
;       float View_NotCoveredExpandSurfaceScale;      ; Offset: 3632
;       float View_NotCoveredMinStepScale;            ; Offset: 3636
;       float View_DitheredTransparencyStepThreshold; ; Offset: 3640
;       float View_DitheredTransparencyTraceThreshold;; Offset: 3644
;       int2 View_CursorPosition;                     ; Offset: 3648
;       float View_bCheckerboardSubsurfaceProfileRendering;; Offset: 3656
;       float PrePadding_View_3660;                   ; Offset: 3660
;       float3 View_VolumetricFogInvGridSize;         ; Offset: 3664
;       float PrePadding_View_3676;                   ; Offset: 3676
;       float3 View_VolumetricFogGridZParams;         ; Offset: 3680
;       float PrePadding_View_3692;                   ; Offset: 3692
;       float2 View_VolumetricFogSVPosToVolumeUV;     ; Offset: 3696
;       float2 View_VolumetricFogScreenUVToHistoryVolumeUV;; Offset: 3704
;       float View_VolumetricFogMaxDistance;          ; Offset: 3712
;       float PrePadding_View_3716;                   ; Offset: 3716
;       float PrePadding_View_3720;                   ; Offset: 3720
;       float PrePadding_View_3724;                   ; Offset: 3724
;       float3 View_VolumetricLightmapWorldToUVScale; ; Offset: 3728
;       float PrePadding_View_3740;                   ; Offset: 3740
;       float3 View_VolumetricLightmapWorldToUVAdd;   ; Offset: 3744
;       float PrePadding_View_3756;                   ; Offset: 3756
;       float3 View_VolumetricLightmapIndirectionTextureSize;; Offset: 3760
;       float View_VolumetricLightmapBrickSize;       ; Offset: 3772
;       float3 View_VolumetricLightmapBrickTexelSize; ; Offset: 3776
;       float View_IndirectLightingCacheShowFlag;     ; Offset: 3788
;       float View_EyeToPixelSpreadAngle;             ; Offset: 3792
;       float PrePadding_View_3796;                   ; Offset: 3796
;       float PrePadding_View_3800;                   ; Offset: 3800
;       float PrePadding_View_3804;                   ; Offset: 3804
;       float4 View_XRPassthroughCameraUVs[2];        ; Offset: 3808
;       float View_GlobalVirtualTextureMipBias;       ; Offset: 3840
;       uint View_VirtualTextureFeedbackShift;        ; Offset: 3844
;       uint View_VirtualTextureFeedbackMask;         ; Offset: 3848
;       uint View_VirtualTextureFeedbackStride;       ; Offset: 3852
;       uint View_VirtualTextureFeedbackJitterOffset; ; Offset: 3856
;       uint View_VirtualTextureFeedbackSampleOffset; ; Offset: 3860
;       uint PrePadding_View_3864;                    ; Offset: 3864
;       uint PrePadding_View_3868;                    ; Offset: 3868
;       float4 View_RuntimeVirtualTextureMipLevel;    ; Offset: 3872
;       float2 View_RuntimeVirtualTexturePackHeight;  ; Offset: 3888
;       float PrePadding_View_3896;                   ; Offset: 3896
;       float PrePadding_View_3900;                   ; Offset: 3900
;       float4 View_RuntimeVirtualTextureDebugParams; ; Offset: 3904
;       float View_OverrideLandscapeLOD;              ; Offset: 3920
;       int View_FarShadowStaticMeshLODBias;          ; Offset: 3924
;       float View_MinRoughness;                      ; Offset: 3928
;       float PrePadding_View_3932;                   ; Offset: 3932
;       float4 View_HairRenderInfo;                   ; Offset: 3936
;       uint View_EnableSkyLight;                     ; Offset: 3952
;       uint View_HairRenderInfoBits;                 ; Offset: 3956
;       uint View_HairComponents;                     ; Offset: 3960
;       float View_bSubsurfacePostprocessEnabled;     ; Offset: 3964
;       float4 View_SSProfilesTextureSizeAndInvSize;  ; Offset: 3968
;       float4 View_SSProfilesPreIntegratedTextureSizeAndInvSize;; Offset: 3984
;       float3 View_PhysicsFieldClipmapCenter;        ; Offset: 4000
;       float View_PhysicsFieldClipmapDistance;       ; Offset: 4012
;       int View_PhysicsFieldClipmapResolution;       ; Offset: 4016
;       int View_PhysicsFieldClipmapExponent;         ; Offset: 4020
;       int View_PhysicsFieldClipmapCount;            ; Offset: 4024
;       int View_PhysicsFieldTargetCount;             ; Offset: 4028
;       int4 View_PhysicsFieldTargets[32];            ; Offset: 4032
;       uint View_InstanceSceneDataSOAStride;         ; Offset: 4544
;       uint View_GPUSceneViewId;                     ; Offset: 4548
;       float View_ViewResolutionFraction;            ; Offset: 4552
;       float View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;; Offset: 4556
;       uint BindlessSampler_View_MaterialTextureBilinearWrapedSampler;; Offset: 4560
;       uint PrePadding_View_4564;                    ; Offset: 4564
;       uint BindlessSampler_View_MaterialTextureBilinearClampedSampler;; Offset: 4568
;       uint PrePadding_View_4572;                    ; Offset: 4572
;       uint BindlessResource_View_VolumetricLightmapIndirectionTexture;; Offset: 4576
;       uint PrePadding_View_4580;                    ; Offset: 4580
;       uint BindlessResource_View_VolumetricLightmapBrickAmbientVector;; Offset: 4584
;       uint PrePadding_View_4588;                    ; Offset: 4588
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients0;; Offset: 4592
;       uint PrePadding_View_4596;                    ; Offset: 4596
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients1;; Offset: 4600
;       uint PrePadding_View_4604;                    ; Offset: 4604
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients2;; Offset: 4608
;       uint PrePadding_View_4612;                    ; Offset: 4612
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients3;; Offset: 4616
;       uint PrePadding_View_4620;                    ; Offset: 4620
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients4;; Offset: 4624
;       uint PrePadding_View_4628;                    ; Offset: 4628
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients5;; Offset: 4632
;       uint PrePadding_View_4636;                    ; Offset: 4636
;       uint BindlessResource_View_SkyBentNormalBrickTexture;; Offset: 4640
;       uint PrePadding_View_4644;                    ; Offset: 4644
;       uint BindlessResource_View_DirectionalLightShadowingBrickTexture;; Offset: 4648
;       uint PrePadding_View_4652;                    ; Offset: 4652
;       uint BindlessSampler_View_VolumetricLightmapBrickAmbientVectorSampler;; Offset: 4656
;       uint PrePadding_View_4660;                    ; Offset: 4660
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler0;; Offset: 4664
;       uint PrePadding_View_4668;                    ; Offset: 4668
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler1;; Offset: 4672
;       uint PrePadding_View_4676;                    ; Offset: 4676
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler2;; Offset: 4680
;       uint PrePadding_View_4684;                    ; Offset: 4684
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler3;; Offset: 4688
;       uint PrePadding_View_4692;                    ; Offset: 4692
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler4;; Offset: 4696
;       uint PrePadding_View_4700;                    ; Offset: 4700
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler5;; Offset: 4704
;       uint PrePadding_View_4708;                    ; Offset: 4708
;       uint BindlessSampler_View_SkyBentNormalTextureSampler;; Offset: 4712
;       uint PrePadding_View_4716;                    ; Offset: 4716
;       uint BindlessSampler_View_DirectionalLightShadowingTextureSampler;; Offset: 4720
;       uint PrePadding_View_4724;                    ; Offset: 4724
;       uint BindlessResource_View_GlobalDistanceFieldPageAtlasTexture;; Offset: 4728
;       uint PrePadding_View_4732;                    ; Offset: 4732
;       uint BindlessResource_View_GlobalDistanceFieldCoverageAtlasTexture;; Offset: 4736
;       uint PrePadding_View_4740;                    ; Offset: 4740
;       uint BindlessResource_View_GlobalDistanceFieldPageTableTexture;; Offset: 4744
;       uint PrePadding_View_4748;                    ; Offset: 4748
;       uint BindlessResource_View_GlobalDistanceFieldMipTexture;; Offset: 4752
;       uint PrePadding_View_4756;                    ; Offset: 4756
;       uint BindlessResource_View_AtmosphereTransmittanceTexture;; Offset: 4760
;       uint PrePadding_View_4764;                    ; Offset: 4764
;       uint BindlessSampler_View_AtmosphereTransmittanceTextureSampler;; Offset: 4768
;       uint PrePadding_View_4772;                    ; Offset: 4772
;       uint BindlessResource_View_AtmosphereIrradianceTexture;; Offset: 4776
;       uint PrePadding_View_4780;                    ; Offset: 4780
;       uint BindlessSampler_View_AtmosphereIrradianceTextureSampler;; Offset: 4784
;       uint PrePadding_View_4788;                    ; Offset: 4788
;       uint BindlessResource_View_AtmosphereInscatterTexture;; Offset: 4792
;       uint PrePadding_View_4796;                    ; Offset: 4796
;       uint BindlessSampler_View_AtmosphereInscatterTextureSampler;; Offset: 4800
;       uint PrePadding_View_4804;                    ; Offset: 4804
;       uint BindlessResource_View_PerlinNoiseGradientTexture;; Offset: 4808
;       uint PrePadding_View_4812;                    ; Offset: 4812
;       uint BindlessSampler_View_PerlinNoiseGradientTextureSampler;; Offset: 4816
;       uint PrePadding_View_4820;                    ; Offset: 4820
;       uint BindlessResource_View_PerlinNoise3DTexture;; Offset: 4824
;       uint PrePadding_View_4828;                    ; Offset: 4828
;       uint BindlessSampler_View_PerlinNoise3DTextureSampler;; Offset: 4832
;       uint PrePadding_View_4836;                    ; Offset: 4836
;       uint BindlessResource_View_SobolSamplingTexture;; Offset: 4840
;       uint PrePadding_View_4844;                    ; Offset: 4844
;       uint BindlessSampler_View_SharedPointWrappedSampler;; Offset: 4848
;       uint PrePadding_View_4852;                    ; Offset: 4852
;       uint BindlessSampler_View_SharedPointClampedSampler;; Offset: 4856
;       uint PrePadding_View_4860;                    ; Offset: 4860
;       uint BindlessSampler_View_SharedBilinearWrappedSampler;; Offset: 4864
;       uint PrePadding_View_4868;                    ; Offset: 4868
;       uint BindlessSampler_View_SharedBilinearClampedSampler;; Offset: 4872
;       uint PrePadding_View_4876;                    ; Offset: 4876
;       uint BindlessSampler_View_SharedBilinearAnisoClampedSampler;; Offset: 4880
;       uint PrePadding_View_4884;                    ; Offset: 4884
;       uint BindlessSampler_View_SharedTrilinearWrappedSampler;; Offset: 4888
;       uint PrePadding_View_4892;                    ; Offset: 4892
;       uint BindlessSampler_View_SharedTrilinearClampedSampler;; Offset: 4896
;       uint PrePadding_View_4900;                    ; Offset: 4900
;       uint BindlessResource_View_PreIntegratedBRDF; ; Offset: 4904
;       uint PrePadding_View_4908;                    ; Offset: 4908
;       uint BindlessSampler_View_PreIntegratedBRDFSampler;; Offset: 4912
;       uint PrePadding_View_4916;                    ; Offset: 4916
;       uint BindlessResource_View_PrimitiveSceneData;; Offset: 4920
;       uint PrePadding_View_4924;                    ; Offset: 4924
;       uint BindlessResource_View_InstanceSceneData; ; Offset: 4928
;       uint PrePadding_View_4932;                    ; Offset: 4932
;       uint BindlessResource_View_InstancePayloadData;; Offset: 4936
;       uint PrePadding_View_4940;                    ; Offset: 4940
;       uint BindlessResource_View_LightmapSceneData; ; Offset: 4944
;       uint PrePadding_View_4948;                    ; Offset: 4948
;       uint BindlessResource_View_SkyIrradianceEnvironmentMap;; Offset: 4952
;       uint PrePadding_View_4956;                    ; Offset: 4956
;       uint BindlessResource_View_TransmittanceLutTexture;; Offset: 4960
;       uint PrePadding_View_4964;                    ; Offset: 4964
;       uint BindlessSampler_View_TransmittanceLutTextureSampler;; Offset: 4968
;       uint PrePadding_View_4972;                    ; Offset: 4972
;       uint BindlessResource_View_SkyViewLutTexture; ; Offset: 4976
;       uint PrePadding_View_4980;                    ; Offset: 4980
;       uint BindlessSampler_View_SkyViewLutTextureSampler;; Offset: 4984
;       uint PrePadding_View_4988;                    ; Offset: 4988
;       uint BindlessResource_View_DistantSkyLightLutTexture;; Offset: 4992
;       uint PrePadding_View_4996;                    ; Offset: 4996
;       uint BindlessSampler_View_DistantSkyLightLutTextureSampler;; Offset: 5000
;       uint PrePadding_View_5004;                    ; Offset: 5004
;       uint BindlessResource_View_CameraAerialPerspectiveVolume;; Offset: 5008
;       uint PrePadding_View_5012;                    ; Offset: 5012
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeSampler;; Offset: 5016
;       uint PrePadding_View_5020;                    ; Offset: 5020
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeMieOnly;; Offset: 5024
;       uint PrePadding_View_5028;                    ; Offset: 5028
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeMieOnlySampler;; Offset: 5032
;       uint PrePadding_View_5036;                    ; Offset: 5036
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeRayOnly;; Offset: 5040
;       uint PrePadding_View_5044;                    ; Offset: 5044
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeRayOnlySampler;; Offset: 5048
;       uint PrePadding_View_5052;                    ; Offset: 5052
;       uint BindlessResource_View_HairScatteringLUTTexture;; Offset: 5056
;       uint PrePadding_View_5060;                    ; Offset: 5060
;       uint BindlessSampler_View_HairScatteringLUTSampler;; Offset: 5064
;       uint PrePadding_View_5068;                    ; Offset: 5068
;       uint BindlessResource_View_LTCMatTexture;     ; Offset: 5072
;       uint PrePadding_View_5076;                    ; Offset: 5076
;       uint BindlessSampler_View_LTCMatSampler;      ; Offset: 5080
;       uint PrePadding_View_5084;                    ; Offset: 5084
;       uint BindlessResource_View_LTCAmpTexture;     ; Offset: 5088
;       uint PrePadding_View_5092;                    ; Offset: 5092
;       uint BindlessSampler_View_LTCAmpSampler;      ; Offset: 5096
;       uint PrePadding_View_5100;                    ; Offset: 5100
;       uint View_bShadingEnergyConservation;         ; Offset: 5104
;       uint View_bShadingEnergyPreservation;         ; Offset: 5108
;       uint BindlessResource_View_ShadingEnergyGGXSpecTexture;; Offset: 5112
;       uint PrePadding_View_5116;                    ; Offset: 5116
;       uint BindlessResource_View_ShadingEnergyGGXGlassTexture;; Offset: 5120
;       uint PrePadding_View_5124;                    ; Offset: 5124
;       uint BindlessResource_View_ShadingEnergyClothSpecTexture;; Offset: 5128
;       uint PrePadding_View_5132;                    ; Offset: 5132
;       uint BindlessResource_View_ShadingEnergyDiffuseTexture;; Offset: 5136
;       uint PrePadding_View_5140;                    ; Offset: 5140
;       uint BindlessSampler_View_ShadingEnergySampler;; Offset: 5144
;       uint PrePadding_View_5148;                    ; Offset: 5148
;       uint BindlessResource_View_SSProfilesTexture; ; Offset: 5152
;       uint PrePadding_View_5156;                    ; Offset: 5156
;       uint BindlessSampler_View_SSProfilesSampler;  ; Offset: 5160
;       uint PrePadding_View_5164;                    ; Offset: 5164
;       uint BindlessSampler_View_SSProfilesTransmissionSampler;; Offset: 5168
;       uint PrePadding_View_5172;                    ; Offset: 5172
;       uint BindlessResource_View_SSProfilesPreIntegratedTexture;; Offset: 5176
;       uint PrePadding_View_5180;                    ; Offset: 5180
;       uint BindlessSampler_View_SSProfilesPreIntegratedSampler;; Offset: 5184
;       uint PrePadding_View_5188;                    ; Offset: 5188
;       uint BindlessResource_View_WaterIndirection;  ; Offset: 5192
;       uint PrePadding_View_5196;                    ; Offset: 5196
;       uint BindlessResource_View_WaterData;         ; Offset: 5200
;       uint PrePadding_View_5204;                    ; Offset: 5204
;       uint PrePadding_View_5208;                    ; Offset: 5208
;       uint PrePadding_View_5212;                    ; Offset: 5212
;       float4 View_RectLightAtlasSizeAndInvSize;     ; Offset: 5216
;       float View_RectLightAtlasMaxMipLevel;         ; Offset: 5232
;       float PrePadding_View_5236;                   ; Offset: 5236
;       uint BindlessResource_View_RectLightAtlasTexture;; Offset: 5240
;       uint PrePadding_View_5244;                    ; Offset: 5244
;       uint BindlessSampler_View_RectLightAtlasSampler;; Offset: 5248
;       uint PrePadding_View_5252;                    ; Offset: 5252
;       uint PrePadding_View_5256;                    ; Offset: 5256
;       uint PrePadding_View_5260;                    ; Offset: 5260
;       float4 View_IESAtlasSizeAndInvSize;           ; Offset: 5264
;       uint BindlessResource_View_IESAtlasTexture;   ; Offset: 5280
;       uint PrePadding_View_5284;                    ; Offset: 5284
;       uint BindlessSampler_View_IESAtlasSampler;    ; Offset: 5288
;       uint PrePadding_View_5292;                    ; Offset: 5292
;       uint BindlessSampler_View_LandscapeWeightmapSampler;; Offset: 5296
;       uint PrePadding_View_5300;                    ; Offset: 5300
;       uint BindlessResource_View_LandscapeIndirection;; Offset: 5304
;       uint PrePadding_View_5308;                    ; Offset: 5308
;       uint BindlessResource_View_LandscapePerComponentData;; Offset: 5312
;       uint PrePadding_View_5316;                    ; Offset: 5316
;       uint BindlessResource_View_VTFeedbackBuffer;  ; Offset: 5320
;       uint PrePadding_View_5324;                    ; Offset: 5324
;       uint BindlessResource_View_EditorVisualizeLevelInstanceIds;; Offset: 5328
;       uint PrePadding_View_5332;                    ; Offset: 5332
;       uint BindlessResource_View_EditorSelectedHitProxyIds;; Offset: 5336
;       uint PrePadding_View_5340;                    ; Offset: 5340
;       uint BindlessResource_View_PhysicsFieldClipmapBuffer;; Offset: 5344
;       uint PrePadding_View_5348;                    ; Offset: 5348
;       uint PrePadding_View_5352;                    ; Offset: 5352
;       uint PrePadding_View_5356;                    ; Offset: 5356
;       float3 View_TLASRelativePreViewTranslation;   ; Offset: 5360
;       float PrePadding_View_5372;                   ; Offset: 5372
;       float3 View_TLASViewTilePosition;             ; Offset: 5376
;   
;   } UniformBufferConstants_View;                    ; Offset:    0 Size:  5388
;
; }
;
; Resource bind info for SceneDistanceFieldAssetData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for CulledObjectIndices
; {
;
;   uint $Element;                                    ; Offset:    0 Size:     4
;
; }
;
; Resource bind info for SceneObjectBounds
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for SceneObjectData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; _RootShaderParameters             cbuffer      NA          NA     CB0            cb0     1
; UniformBufferConstants_View       cbuffer      NA          NA     CB1            cb1     1
; D3DStaticBilinearWrappedSampler   sampler      NA          NA      S0   s2,space1000     1
; SceneTexturesStruct_PointClampSampler   sampler      NA          NA      S1             s0     1
; SceneTexturesStruct_SceneDepthTexture   texture     f32          2d      T0             t0     1
; SceneTexturesStruct_GBufferBTexture   texture     f32          2d      T1             t1     1
; SceneTexturesStruct_GBufferDTexture   texture     f32          2d      T2             t2     1
; DistanceFieldIndirection2Table    texture     f32         buf      T3             t3     1
; DistanceFieldBrickTexture         texture     f32          3d      T4             t4     1
; SceneDistanceFieldAssetData       texture  struct         r/o      T5             t5     1
; ObjectIndirectArguments           texture     u32         buf      T6             t6     1
; CulledObjectIndices               texture  struct         r/o      T7             t7     1
; SceneObjectBounds                 texture  struct         r/o      T8             t8     1
; SceneObjectData                   texture  struct         r/o      T9             t9     1
; RWShadowFactors                       UAV     f32          2d      U0             u0     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%"class.Buffer<vector<float, 4> >" = type { <4 x float> }
%"class.Texture3D<vector<float, 4> >" = type { <4 x float>, %"class.Texture3D<vector<float, 4> >::mips_type" }
%"class.Texture3D<vector<float, 4> >::mips_type" = type { i32 }
%"class.StructuredBuffer<vector<float, 4> >" = type { <4 x float> }
%"class.Buffer<unsigned int>" = type { i32 }
%"class.StructuredBuffer<unsigned int>" = type { i32 }
%"class.RWTexture2D<vector<float, 2> >" = type { <2 x float> }
%hostlayout._RootShaderParameters = type { <2 x float>, <3 x float>, <4 x float>, float, float, <3 x float>, <4 x i32>, i32, i32, <2 x i32>, i32, <3 x float>, <3 x float>, <3 x i32>, <3 x i32>, <3 x i32>, <3 x float>, <3 x float>, <3 x float>, <3 x float>, [4 x <4 x float>], float, float, float, i32, <2 x float> }
%hostlayout.UniformBufferConstants_View = type { [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <4 x float>, <4 x float>, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <4 x float>, <4 x float>, <2 x float>, <2 x float>, <4 x float>, <4 x float>, <4 x i32>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, <2 x float>, i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i32, float, float, float, float, <4 x float>, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <4 x float>, float, float, float, float, float, float, float, float, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <3 x float>, float, <4 x float>, [4 x <4 x float>], <4 x float>, float, float, float, float, <4 x float>, float, float, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, <4 x float>, float, float, float, float, <4 x float>, [8 x <4 x float>], float, float, float, float, i32, float, float, float, <3 x float>, i32, [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], float, float, i32, i32, <3 x float>, float, <3 x float>, float, float, float, i32, float, float, float, float, float, <2 x i32>, float, float, <3 x float>, float, <3 x float>, float, <2 x float>, <2 x float>, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, float, float, float, float, [2 x <4 x float>], float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <2 x float>, float, float, <4 x float>, float, i32, float, float, <4 x float>, i32, i32, i32, float, <4 x float>, <4 x float>, <3 x float>, float, i32, i32, i32, i32, [32 x <4 x i32>], i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, float, float, i32, i32, i32, i32, i32, i32, <4 x float>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <3 x float>, float, <3 x float> }
%struct.SamplerState = type { i32 }

@"\01?IntersectingObjectIndices@@3PAIA" = external addrspace(3) global [2048 x i32], align 4
@"\01?IntegerTileMinZ@@3IA" = external addrspace(3) global i32, align 4
@"\01?IntegerTileMaxZ@@3IA" = external addrspace(3) global i32, align 4
@"\01?IntegerTileMinZ2@@3IA" = external addrspace(3) global i32, align 4
@"\01?IntegerTileMaxZ2@@3IA" = external addrspace(3) global i32, align 4
@"\01?TileNumObjects0@@3IA" = external addrspace(3) global i32, align 4
@"\01?TileNumObjects1@@3IA" = external addrspace(3) global i32, align 4

define void @DistanceFieldShadowingCS() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 1 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 9, i32 9, i32 0, i8 0 }, i32 9, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 8, i32 8, i32 0, i8 0 }, i32 8, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 7, i32 7, i32 0, i8 0 }, i32 7, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 6, i32 6, i32 0, i8 0 }, i32 6, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %6 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 5, i32 5, i32 0, i8 0 }, i32 5, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %7 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 4, i32 4, i32 0, i8 0 }, i32 4, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %8 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 3, i32 3, i32 0, i8 0 }, i32 3, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %9 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 0 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %10 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 0 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %11 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind zeroinitializer, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %12 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 3 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %13 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 1000, i8 3 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %14 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 2 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %15 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %16 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %14, %dx.types.ResourceProperties { i32 13, i32 5388 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %17 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %15, %dx.types.ResourceProperties { i32 13, i32 664 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %18 = call i32 @dx.op.groupId.i32(i32 94, i32 0)  ; GroupId(component)
  %19 = call i32 @dx.op.groupId.i32(i32 94, i32 1)  ; GroupId(component)
  %20 = call i32 @dx.op.threadId.i32(i32 93, i32 0)  ; ThreadId(component)
  %21 = call i32 @dx.op.threadId.i32(i32 93, i32 1)  ; ThreadId(component)
  %22 = call i32 @dx.op.threadIdInGroup.i32(i32 95, i32 0)  ; ThreadIdInGroup(component)
  %23 = call i32 @dx.op.threadIdInGroup.i32(i32 95, i32 1)  ; ThreadIdInGroup(component)
  %24 = shl i32 %23, 3
  %25 = add i32 %24, %22
  %26 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 40)  ; CBufferLoadLegacy(handle,regIndex)
  %27 = extractvalue %dx.types.CBufRet.i32 %26, 3
  %28 = mul i32 %27, %20
  %29 = mul i32 %27, %21
  %30 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %31 = extractvalue %dx.types.CBufRet.i32 %30, 0
  %32 = extractvalue %dx.types.CBufRet.i32 %30, 1
  %33 = add i32 %28, %31
  %34 = add i32 %29, %32
  %35 = uitofp i32 %33 to float
  %36 = uitofp i32 %34 to float
  %37 = fadd fast float %35, 5.000000e-01
  %38 = fadd fast float %36, 5.000000e-01
  %39 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 132)  ; CBufferLoadLegacy(handle,regIndex)
  %40 = extractvalue %dx.types.CBufRet.f32 %39, 2
  %41 = extractvalue %dx.types.CBufRet.f32 %39, 3
  %42 = fmul fast float %37, %40
  %43 = fmul fast float %38, %41
  %44 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 72)  ; CBufferLoadLegacy(handle,regIndex)
  %45 = extractvalue %dx.types.CBufRet.f32 %44, 2
  %46 = extractvalue %dx.types.CBufRet.f32 %44, 3
  %47 = fsub fast float %42, %46
  %48 = fsub fast float %43, %45
  %49 = extractvalue %dx.types.CBufRet.f32 %44, 0
  %50 = extractvalue %dx.types.CBufRet.f32 %44, 1
  %51 = fdiv fast float %47, %49
  %52 = fdiv fast float %48, %50
  %53 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %11, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %54 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %12, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %55 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %53, %dx.types.Handle %54, float %42, float %43, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %56 = extractvalue %dx.types.ResRet.f32 %55, 0
  %57 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 71)  ; CBufferLoadLegacy(handle,regIndex)
  %58 = extractvalue %dx.types.CBufRet.f32 %57, 0
  %59 = fmul fast float %58, %56
  %60 = extractvalue %dx.types.CBufRet.f32 %57, 1
  %61 = fadd fast float %59, %60
  %62 = extractvalue %dx.types.CBufRet.f32 %57, 2
  %63 = fmul fast float %62, %56
  %64 = extractvalue %dx.types.CBufRet.f32 %57, 3
  %65 = fsub fast float %63, %64
  %66 = fdiv fast float 1.000000e+00, %65
  %67 = fadd fast float %61, %66
  %68 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 56)  ; CBufferLoadLegacy(handle,regIndex)
  %69 = extractvalue %dx.types.CBufRet.f32 %68, 0
  %70 = extractvalue %dx.types.CBufRet.f32 %68, 1
  %71 = extractvalue %dx.types.CBufRet.f32 %68, 2
  %72 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 57)  ; CBufferLoadLegacy(handle,regIndex)
  %73 = extractvalue %dx.types.CBufRet.f32 %72, 0
  %74 = extractvalue %dx.types.CBufRet.f32 %72, 1
  %75 = extractvalue %dx.types.CBufRet.f32 %72, 2
  %76 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 58)  ; CBufferLoadLegacy(handle,regIndex)
  %77 = extractvalue %dx.types.CBufRet.f32 %76, 0
  %78 = extractvalue %dx.types.CBufRet.f32 %76, 1
  %79 = extractvalue %dx.types.CBufRet.f32 %76, 2
  %80 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 59)  ; CBufferLoadLegacy(handle,regIndex)
  %81 = extractvalue %dx.types.CBufRet.f32 %80, 0
  %82 = extractvalue %dx.types.CBufRet.f32 %80, 1
  %83 = extractvalue %dx.types.CBufRet.f32 %80, 2
  %84 = fmul fast float %67, %51
  %85 = fmul fast float %67, %52
  %86 = fmul fast float %84, %69
  %87 = call float @dx.op.tertiary.f32(i32 46, float %85, float %73, float %86)  ; FMad(a,b,c)
  %88 = call float @dx.op.tertiary.f32(i32 46, float %67, float %77, float %87)  ; FMad(a,b,c)
  %89 = fadd fast float %88, %81
  %90 = fmul fast float %84, %70
  %91 = call float @dx.op.tertiary.f32(i32 46, float %85, float %74, float %90)  ; FMad(a,b,c)
  %92 = call float @dx.op.tertiary.f32(i32 46, float %67, float %78, float %91)  ; FMad(a,b,c)
  %93 = fadd fast float %92, %82
  %94 = fmul fast float %84, %71
  %95 = call float @dx.op.tertiary.f32(i32 46, float %85, float %75, float %94)  ; FMad(a,b,c)
  %96 = call float @dx.op.tertiary.f32(i32 46, float %67, float %79, float %95)  ; FMad(a,b,c)
  %97 = fadd fast float %96, %83
  %98 = icmp eq i32 %25, 0
  br i1 %98, label %99, label %100

; <label>:99                                      ; preds = %0
  store i32 2139095039, i32 addrspace(3)* @"\01?IntegerTileMinZ@@3IA", align 4, !tbaa !32, !noalias !36
  store i32 0, i32 addrspace(3)* @"\01?IntegerTileMaxZ@@3IA", align 4, !tbaa !32, !noalias !36
  store i32 2139095039, i32 addrspace(3)* @"\01?IntegerTileMinZ2@@3IA", align 4, !tbaa !32, !noalias !36
  store i32 0, i32 addrspace(3)* @"\01?IntegerTileMaxZ2@@3IA", align 4, !tbaa !32, !noalias !36
  store i32 0, i32 addrspace(3)* @"\01?TileNumObjects0@@3IA", align 4, !tbaa !32, !noalias !36
  store i32 0, i32 addrspace(3)* @"\01?TileNumObjects1@@3IA", align 4, !tbaa !32, !noalias !36
  br label %100

; <label>:100                                     ; preds = %99, %0
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %101 = fcmp fast ogt float %67, 0.000000e+00
  br i1 %101, label %102, label %106

; <label>:102                                     ; preds = %100
  %103 = bitcast float %67 to i32
  %104 = atomicrmw umin i32 addrspace(3)* @"\01?IntegerTileMinZ@@3IA", i32 %103 seq_cst
  %105 = atomicrmw umax i32 addrspace(3)* @"\01?IntegerTileMaxZ@@3IA", i32 %103 seq_cst
  br label %106

; <label>:106                                     ; preds = %102, %100
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %107 = load i32, i32 addrspace(3)* @"\01?IntegerTileMinZ@@3IA", align 4, !tbaa !32, !noalias !36
  %108 = bitcast i32 %107 to float
  %109 = load i32, i32 addrspace(3)* @"\01?IntegerTileMaxZ@@3IA", align 4, !tbaa !32, !noalias !36
  %110 = bitcast i32 %109 to float
  %111 = fadd fast float %110, %108
  %112 = fmul fast float %111, 5.000000e-01
  %113 = fcmp fast oge float %67, %112
  %114 = and i1 %101, %113
  br i1 %114, label %115, label %118

; <label>:115                                     ; preds = %106
  %116 = bitcast float %67 to i32
  %117 = atomicrmw umin i32 addrspace(3)* @"\01?IntegerTileMinZ2@@3IA", i32 %116 seq_cst
  br label %118

; <label>:118                                     ; preds = %115, %106
  %119 = fcmp fast ole float %67, %112
  %120 = and i1 %101, %119
  br i1 %120, label %121, label %124

; <label>:121                                     ; preds = %118
  %122 = bitcast float %67 to i32
  %123 = atomicrmw umax i32 addrspace(3)* @"\01?IntegerTileMaxZ2@@3IA", i32 %122 seq_cst
  br label %124

; <label>:124                                     ; preds = %121, %118
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %125 = load i32, i32 addrspace(3)* @"\01?IntegerTileMinZ2@@3IA", align 4, !tbaa !32, !noalias !36
  %126 = bitcast i32 %125 to float
  %127 = load i32, i32 addrspace(3)* @"\01?IntegerTileMaxZ2@@3IA", align 4, !tbaa !32, !noalias !36
  %128 = bitcast i32 %127 to float
  %129 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 40)  ; CBufferLoadLegacy(handle,regIndex)
  %130 = extractvalue %dx.types.CBufRet.f32 %129, 0
  %131 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 41)  ; CBufferLoadLegacy(handle,regIndex)
  %132 = extractvalue %dx.types.CBufRet.f32 %131, 1
  %133 = fmul fast float %130, 2.000000e+00
  %134 = fmul fast float %132, 2.000000e+00
  %135 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %136 = extractvalue %dx.types.CBufRet.i32 %135, 2
  %137 = extractvalue %dx.types.CBufRet.i32 %135, 3
  %138 = sitofp i32 %136 to float
  %139 = sitofp i32 %137 to float
  %140 = fmul fast float %133, %138
  %141 = fmul fast float %134, %139
  %142 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 129)  ; CBufferLoadLegacy(handle,regIndex)
  %143 = extractvalue %dx.types.CBufRet.f32 %142, 0
  %144 = extractvalue %dx.types.CBufRet.f32 %142, 1
  %145 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %146 = extractvalue %dx.types.CBufRet.f32 %145, 0
  %147 = extractvalue %dx.types.CBufRet.f32 %145, 1
  %148 = fmul fast float %146, %143
  %149 = fmul fast float %147, %144
  %150 = fdiv fast float %140, %148
  %151 = fdiv fast float %141, %149
  %152 = extractvalue %dx.types.CBufRet.i32 %135, 0
  %153 = extractvalue %dx.types.CBufRet.i32 %135, 1
  %154 = sitofp i32 %152 to float
  %155 = sitofp i32 %153 to float
  %156 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 128)  ; CBufferLoadLegacy(handle,regIndex)
  %157 = extractvalue %dx.types.CBufRet.f32 %156, 0
  %158 = extractvalue %dx.types.CBufRet.f32 %156, 1
  %159 = fsub fast float %154, %157
  %160 = fsub fast float %155, %158
  %161 = fmul fast float %133, %159
  %162 = fmul fast float %134, %160
  %163 = extractvalue %dx.types.CBufRet.f32 %142, 2
  %164 = extractvalue %dx.types.CBufRet.f32 %142, 3
  %165 = fmul fast float %161, %163
  %166 = fmul fast float %162, %164
  %167 = fsub fast float %165, %130
  %168 = fsub fast float %166, %132
  %169 = uitofp i32 %18 to float
  %170 = uitofp i32 %19 to float
  %171 = fmul fast float %150, %169
  %172 = fmul fast float %151, %170
  %173 = fadd fast float %167, %171
  %174 = fadd fast float %172, %168
  %175 = fsub fast float -0.000000e+00, %174
  %176 = add i32 %18, 1
  %177 = add i32 %19, 1
  %178 = uitofp i32 %176 to float
  %179 = uitofp i32 %177 to float
  %180 = fmul fast float %150, %178
  %181 = fmul fast float %151, %179
  %182 = fadd fast float %167, %180
  %183 = fadd fast float %181, %168
  %184 = fsub fast float -0.000000e+00, %183
  %185 = fmul fast float %173, %128
  %186 = fmul fast float %128, %175
  %187 = fmul fast float %173, %108
  %188 = fmul fast float %108, %175
  %189 = call float @dx.op.binary.f32(i32 36, float %187, float %185)  ; FMin(a,b)
  %190 = call float @dx.op.binary.f32(i32 36, float %188, float %186)  ; FMin(a,b)
  %191 = fmul fast float %182, %128
  %192 = fmul fast float %128, %184
  %193 = fmul fast float %182, %108
  %194 = fmul fast float %108, %184
  %195 = call float @dx.op.binary.f32(i32 35, float %193, float %191)  ; FMax(a,b)
  %196 = call float @dx.op.binary.f32(i32 35, float %194, float %192)  ; FMax(a,b)
  %197 = fmul fast float %173, %110
  %198 = fmul fast float %110, %175
  %199 = fmul fast float %173, %126
  %200 = fmul fast float %126, %175
  %201 = call float @dx.op.binary.f32(i32 36, float %199, float %197)  ; FMin(a,b)
  %202 = call float @dx.op.binary.f32(i32 36, float %200, float %198)  ; FMin(a,b)
  %203 = fmul fast float %182, %110
  %204 = fmul fast float %110, %184
  %205 = fmul fast float %182, %126
  %206 = fmul fast float %126, %184
  %207 = call float @dx.op.binary.f32(i32 35, float %205, float %203)  ; FMax(a,b)
  %208 = call float @dx.op.binary.f32(i32 35, float %206, float %204)  ; FMax(a,b)
  %209 = fadd fast float %195, %189
  %210 = fadd fast float %196, %190
  %211 = fadd fast float %128, %108
  %212 = fmul fast float %209, 5.000000e-01
  %213 = fmul fast float %210, 5.000000e-01
  %214 = fmul fast float %211, 5.000000e-01
  %215 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 20)  ; CBufferLoadLegacy(handle,regIndex)
  %216 = extractvalue %dx.types.CBufRet.f32 %215, 0
  %217 = extractvalue %dx.types.CBufRet.f32 %215, 1
  %218 = extractvalue %dx.types.CBufRet.f32 %215, 2
  %219 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 21)  ; CBufferLoadLegacy(handle,regIndex)
  %220 = extractvalue %dx.types.CBufRet.f32 %219, 0
  %221 = extractvalue %dx.types.CBufRet.f32 %219, 1
  %222 = extractvalue %dx.types.CBufRet.f32 %219, 2
  %223 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %224 = extractvalue %dx.types.CBufRet.f32 %223, 0
  %225 = extractvalue %dx.types.CBufRet.f32 %223, 1
  %226 = extractvalue %dx.types.CBufRet.f32 %223, 2
  %227 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 23)  ; CBufferLoadLegacy(handle,regIndex)
  %228 = extractvalue %dx.types.CBufRet.f32 %227, 0
  %229 = extractvalue %dx.types.CBufRet.f32 %227, 1
  %230 = extractvalue %dx.types.CBufRet.f32 %227, 2
  %231 = fmul fast float %216, %212
  %232 = call float @dx.op.tertiary.f32(i32 46, float %213, float %220, float %231)  ; FMad(a,b,c)
  %233 = call float @dx.op.tertiary.f32(i32 46, float %214, float %224, float %232)  ; FMad(a,b,c)
  %234 = fadd fast float %233, %228
  %235 = fmul fast float %217, %212
  %236 = call float @dx.op.tertiary.f32(i32 46, float %213, float %221, float %235)  ; FMad(a,b,c)
  %237 = call float @dx.op.tertiary.f32(i32 46, float %214, float %225, float %236)  ; FMad(a,b,c)
  %238 = fadd fast float %237, %229
  %239 = fmul fast float %218, %212
  %240 = call float @dx.op.tertiary.f32(i32 46, float %213, float %222, float %239)  ; FMad(a,b,c)
  %241 = call float @dx.op.tertiary.f32(i32 46, float %214, float %226, float %240)  ; FMad(a,b,c)
  %242 = fadd fast float %241, %230
  %243 = fsub fast float %212, %195
  %244 = fsub fast float %213, %196
  %245 = fsub fast float %214, %128
  %246 = fmul fast float %243, %243
  %247 = fmul fast float %244, %244
  %248 = fmul fast float %245, %245
  %249 = fadd fast float %246, %248
  %250 = fadd fast float %249, %247
  %251 = call float @dx.op.unary.f32(i32 24, float %250)  ; Sqrt(value)
  %252 = fadd fast float %207, %201
  %253 = fadd fast float %208, %202
  %254 = fadd fast float %126, %110
  %255 = fmul fast float %252, 5.000000e-01
  %256 = fmul fast float %253, 5.000000e-01
  %257 = fmul fast float %254, 5.000000e-01
  %258 = fmul fast float %216, %255
  %259 = call float @dx.op.tertiary.f32(i32 46, float %256, float %220, float %258)  ; FMad(a,b,c)
  %260 = call float @dx.op.tertiary.f32(i32 46, float %257, float %224, float %259)  ; FMad(a,b,c)
  %261 = fadd fast float %260, %228
  %262 = fmul fast float %217, %255
  %263 = call float @dx.op.tertiary.f32(i32 46, float %256, float %221, float %262)  ; FMad(a,b,c)
  %264 = call float @dx.op.tertiary.f32(i32 46, float %257, float %225, float %263)  ; FMad(a,b,c)
  %265 = fadd fast float %264, %229
  %266 = fmul fast float %218, %255
  %267 = call float @dx.op.tertiary.f32(i32 46, float %256, float %222, float %266)  ; FMad(a,b,c)
  %268 = call float @dx.op.tertiary.f32(i32 46, float %257, float %226, float %267)  ; FMad(a,b,c)
  %269 = fadd fast float %268, %230
  %270 = fsub fast float %255, %207
  %271 = fsub fast float %256, %208
  %272 = fsub fast float %257, %110
  %273 = fmul fast float %270, %270
  %274 = fmul fast float %271, %271
  %275 = fmul fast float %272, %272
  %276 = fadd fast float %273, %275
  %277 = fadd fast float %276, %274
  %278 = call float @dx.op.unary.f32(i32 24, float %277)  ; Sqrt(value)
  %279 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %280 = extractvalue %dx.types.CBufRet.f32 %279, 0
  %281 = extractvalue %dx.types.CBufRet.f32 %279, 1
  %282 = extractvalue %dx.types.CBufRet.f32 %279, 2
  %283 = fsub fast float %280, %234
  %284 = fsub fast float %281, %238
  %285 = fsub fast float %282, %242
  %286 = fmul fast float %283, %283
  %287 = fmul fast float %284, %284
  %288 = fadd fast float %286, %287
  %289 = fmul fast float %285, %285
  %290 = fadd fast float %288, %289
  %291 = call float @dx.op.unary.f32(i32 24, float %290)  ; Sqrt(value)
  %292 = fsub fast float %280, %261
  %293 = fsub fast float %281, %265
  %294 = fsub fast float %282, %269
  %295 = fmul fast float %292, %292
  %296 = fmul fast float %293, %293
  %297 = fadd fast float %295, %296
  %298 = fmul fast float %294, %294
  %299 = fadd fast float %297, %298
  %300 = call float @dx.op.unary.f32(i32 24, float %299)  ; Sqrt(value)
  %301 = fdiv fast float %283, %291
  %302 = fdiv fast float %284, %291
  %303 = fdiv fast float %285, %291
  %304 = fdiv fast float %292, %300
  %305 = fdiv fast float %293, %300
  %306 = fdiv fast float %294, %300
  %307 = extractvalue %dx.types.CBufRet.f32 %279, 3
  %308 = fdiv fast float 1.000000e+00, %307
  %309 = fadd fast float %308, %251
  %310 = fcmp fast olt float %291, %309
  %311 = fadd fast float %308, %278
  %312 = fcmp fast olt float %300, %311
  %313 = or i1 %310, %312
  br i1 %313, label %314, label %421, !dx.controlflow.hints !41

; <label>:314                                     ; preds = %124
  %315 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %5, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %316 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %315, i32 1, i32 undef)  ; BufferLoad(srv,index,wot)
  %317 = extractvalue %dx.types.ResRet.i32 %316, 0
  %318 = icmp ult i32 %25, %317
  br i1 %318, label %319, label %421

; <label>:319                                     ; preds = %314
  br label %320

; <label>:320                                     ; preds = %417, %319
  %321 = phi i32 [ %418, %417 ], [ %25, %319 ]
  %322 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %4, %dx.types.ResourceProperties { i32 12, i32 4 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=4>
  %323 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %322, i32 %321, i32 0, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %324 = extractvalue %dx.types.ResRet.i32 %323, 0
  %325 = mul i32 %324, 3
  %326 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %327 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %326, i32 %325, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %328 = extractvalue %dx.types.ResRet.f32 %327, 0
  %329 = extractvalue %dx.types.ResRet.f32 %327, 1
  %330 = extractvalue %dx.types.ResRet.f32 %327, 2
  %331 = add i32 %325, 1
  %332 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %326, i32 %331, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %333 = extractvalue %dx.types.ResRet.f32 %332, 0
  %334 = extractvalue %dx.types.ResRet.f32 %332, 1
  %335 = extractvalue %dx.types.ResRet.f32 %332, 2
  %336 = extractvalue %dx.types.ResRet.f32 %332, 3
  %337 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 64)  ; CBufferLoadLegacy(handle,regIndex)
  %338 = extractvalue %dx.types.CBufRet.f32 %337, 0
  %339 = extractvalue %dx.types.CBufRet.f32 %337, 1
  %340 = extractvalue %dx.types.CBufRet.f32 %337, 2
  %341 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 76)  ; CBufferLoadLegacy(handle,regIndex)
  %342 = extractvalue %dx.types.CBufRet.f32 %341, 0
  %343 = extractvalue %dx.types.CBufRet.f32 %341, 1
  %344 = extractvalue %dx.types.CBufRet.f32 %341, 2
  %345 = fadd fast float %342, %333
  %346 = fadd fast float %343, %334
  %347 = fadd fast float %344, %335
  %348 = fsub fast float %328, %338
  %349 = fsub fast float %329, %339
  %350 = fsub fast float %330, %340
  %351 = fmul fast float %348, 2.097152e+06
  %352 = fmul fast float %349, 2.097152e+06
  %353 = fmul fast float %350, 2.097152e+06
  %354 = fadd fast float %345, %351
  %355 = fadd fast float %346, %352
  %356 = fadd fast float %347, %353
  %357 = fadd fast float %336, %251
  %358 = fsub fast float %354, %234
  %359 = fsub fast float %355, %238
  %360 = fsub fast float %356, %242
  %361 = call float @dx.op.dot3.f32(i32 55, float %358, float %359, float %360, float %301, float %302, float %303)  ; Dot3(ax,ay,az,bx,by,bz)
  %362 = fmul fast float %361, %301
  %363 = fmul fast float %361, %302
  %364 = fmul fast float %361, %303
  %365 = fadd fast float %362, %234
  %366 = fadd fast float %363, %238
  %367 = fadd fast float %364, %242
  %368 = fsub fast float %365, %354
  %369 = fsub fast float %366, %355
  %370 = fsub fast float %367, %356
  %371 = call float @dx.op.dot3.f32(i32 55, float %368, float %369, float %370, float %368, float %369, float %370)  ; Dot3(ax,ay,az,bx,by,bz)
  %372 = fmul fast float %357, %357
  %373 = fcmp fast ole float %371, %372
  %374 = fsub fast float -0.000000e+00, %357
  %375 = fcmp fast ogt float %361, %374
  %376 = and i1 %375, %373
  br i1 %376, label %377, label %380

; <label>:377                                     ; preds = %320
  %378 = fsub fast float %361, %357
  %379 = fcmp fast olt float %378, %291
  br label %380

; <label>:380                                     ; preds = %377, %320
  %381 = phi i1 [ false, %320 ], [ %379, %377 ]
  br i1 %381, label %382, label %386, !dx.controlflow.hints !42

; <label>:382                                     ; preds = %380
  %383 = atomicrmw add i32 addrspace(3)* @"\01?TileNumObjects0@@3IA", i32 1 seq_cst
  %384 = call i32 @dx.op.binary.i32(i32 40, i32 %383, i32 1023)  ; UMin(a,b)
  %385 = getelementptr [2048 x i32], [2048 x i32] addrspace(3)* @"\01?IntersectingObjectIndices@@3PAIA", i32 0, i32 %384
  store i32 %324, i32 addrspace(3)* %385, align 4, !tbaa !32, !noalias !36
  br label %386

; <label>:386                                     ; preds = %382, %380
  %387 = fadd fast float %336, %278
  %388 = fsub fast float %354, %261
  %389 = fsub fast float %355, %265
  %390 = fsub fast float %356, %269
  %391 = call float @dx.op.dot3.f32(i32 55, float %388, float %389, float %390, float %304, float %305, float %306)  ; Dot3(ax,ay,az,bx,by,bz)
  %392 = fmul fast float %391, %304
  %393 = fmul fast float %391, %305
  %394 = fmul fast float %391, %306
  %395 = fsub fast float %261, %354
  %396 = fadd fast float %395, %392
  %397 = fsub fast float %265, %355
  %398 = fadd fast float %397, %393
  %399 = fsub fast float %269, %356
  %400 = fadd fast float %399, %394
  %401 = call float @dx.op.dot3.f32(i32 55, float %396, float %398, float %400, float %396, float %398, float %400)  ; Dot3(ax,ay,az,bx,by,bz)
  %402 = fmul fast float %387, %387
  %403 = fcmp fast ole float %401, %402
  %404 = fsub fast float -0.000000e+00, %387
  %405 = fcmp fast ogt float %391, %404
  %406 = and i1 %405, %403
  br i1 %406, label %407, label %410

; <label>:407                                     ; preds = %386
  %408 = fsub fast float %391, %387
  %409 = fcmp fast olt float %408, %300
  br label %410

; <label>:410                                     ; preds = %407, %386
  %411 = phi i1 [ false, %386 ], [ %409, %407 ]
  br i1 %411, label %412, label %417, !dx.controlflow.hints !43

; <label>:412                                     ; preds = %410
  %413 = atomicrmw add i32 addrspace(3)* @"\01?TileNumObjects1@@3IA", i32 1 seq_cst
  %414 = call i32 @dx.op.binary.i32(i32 40, i32 %413, i32 1023)  ; UMin(a,b)
  %415 = add i32 %414, 1024
  %416 = getelementptr [2048 x i32], [2048 x i32] addrspace(3)* @"\01?IntersectingObjectIndices@@3PAIA", i32 0, i32 %415
  store i32 %324, i32 addrspace(3)* %416, align 4, !tbaa !32, !noalias !36
  br label %417

; <label>:417                                     ; preds = %412, %410
  %418 = add i32 %321, 64
  %419 = icmp ult i32 %418, %317
  br i1 %419, label %320, label %420, !llvm.loop !44

; <label>:420                                     ; preds = %417
  br label %421

; <label>:421                                     ; preds = %420, %314, %124
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %422 = fcmp fast ogt float %67, %128
  %423 = zext i1 %422 to i32
  %424 = load i32, i32 addrspace(3)* @"\01?TileNumObjects0@@3IA", align 4, !tbaa !32, !noalias !36
  %425 = load i32, i32 addrspace(3)* @"\01?TileNumObjects1@@3IA", align 4, !tbaa !32, !noalias !36
  %426 = select i1 %422, i32 %425, i32 %424
  %427 = call i32 @dx.op.binary.i32(i32 40, i32 %426, i32 1024)  ; UMin(a,b)
  br i1 %313, label %428, label %839, !dx.controlflow.hints !46

; <label>:428                                     ; preds = %421
  %429 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %430 = extractvalue %dx.types.CBufRet.f32 %429, 1
  %431 = fmul fast float %430, %67
  %432 = fadd fast float %431, 2.000000e+00
  %433 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %434 = extractvalue %dx.types.CBufRet.f32 %433, 0
  %435 = extractvalue %dx.types.CBufRet.f32 %433, 1
  %436 = extractvalue %dx.types.CBufRet.f32 %433, 2
  %437 = fsub fast float %434, %89
  %438 = fsub fast float %435, %93
  %439 = fsub fast float %436, %97
  %440 = fmul fast float %437, %437
  %441 = fmul fast float %438, %438
  %442 = fadd fast float %440, %441
  %443 = fmul fast float %439, %439
  %444 = fadd fast float %442, %443
  %445 = call float @dx.op.unary.f32(i32 24, float %444)  ; Sqrt(value)
  %446 = fdiv fast float %437, %445
  %447 = fdiv fast float %438, %445
  %448 = fdiv fast float %439, %445
  %449 = fmul fast float %446, %432
  %450 = fmul fast float %447, %432
  %451 = fmul fast float %448, %432
  %452 = fadd fast float %449, %89
  %453 = fadd fast float %450, %93
  %454 = fadd fast float %451, %97
  %455 = extractvalue %dx.types.CBufRet.f32 %429, 0
  %456 = fdiv fast float %455, %445
  %457 = call float @dx.op.binary.f32(i32 36, float %456, float 0x3FC691E200000000)  ; FMin(a,b)
  %458 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %10, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %459 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %12, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %460 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %458, %dx.types.Handle %459, float %42, float %43, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %461 = extractvalue %dx.types.ResRet.f32 %460, 3
  %462 = fmul fast float %461, 2.550000e+02
  %463 = fadd fast float %462, 5.000000e-01
  %464 = fptoui float %463 to i32
  %465 = and i32 %464, 15
  %466 = and i32 %464, 14
  %467 = icmp eq i32 %466, 2
  %468 = add nsw i32 %465, -5
  %469 = icmp ult i32 %468, 3
  %470 = or i1 %467, %469
  %471 = icmp eq i32 %465, 9
  %472 = or i1 %471, %470
  br i1 %472, label %473, label %488, !dx.controlflow.hints !47

; <label>:473                                     ; preds = %428
  %474 = icmp eq i32 %466, 8
  %475 = and i32 %464, 12
  %476 = icmp eq i32 %475, 4
  %477 = or i1 %476, %467
  %478 = or i1 %474, %477
  %479 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %9, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %480 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %479, %dx.types.Handle %459, float %42, float %43, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %481 = extractvalue %dx.types.ResRet.f32 %480, 3
  %482 = select i1 %478, float %481, float 0.000000e+00
  %483 = call float @dx.op.binary.f32(i32 36, float %482, float 0x3FEFAE1480000000)  ; FMin(a,b)
  %484 = fsub fast float 1.000000e+00, %483
  %485 = call float @dx.op.unary.f32(i32 23, float %484)  ; Log(value)
  %486 = fmul fast float %485, 0xBFA1BE9C00000000
  %487 = fmul float %486, 0xBFF7154760000000
  br label %488

; <label>:488                                     ; preds = %473, %428
  %489 = phi float [ %487, %473 ], [ -0.000000e+00, %428 ]
  %490 = phi i1 [ true, %473 ], [ false, %428 ]
  %491 = icmp eq i32 %427, 0
  br i1 %491, label %839, label %492

; <label>:492                                     ; preds = %488
  br label %493

; <label>:493                                     ; preds = %834, %492
  %494 = phi float [ %832, %834 ], [ 1.000000e+00, %492 ]
  %495 = phi i32 [ %835, %834 ], [ 0, %492 ]
  %496 = shl nuw nsw i32 %423, 10
  %497 = add i32 %495, %496
  %498 = getelementptr [2048 x i32], [2048 x i32] addrspace(3)* @"\01?IntersectingObjectIndices@@3PAIA", i32 0, i32 %497
  %499 = load i32, i32 addrspace(3)* %498, align 4, !tbaa !32
  %500 = mul i32 %499, 10
  %501 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %502 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %501, i32 %500, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %503 = extractvalue %dx.types.ResRet.f32 %502, 0
  %504 = extractvalue %dx.types.ResRet.f32 %502, 1
  %505 = extractvalue %dx.types.ResRet.f32 %502, 2
  %506 = or i32 %500, 1
  %507 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %501, i32 %506, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %508 = extractvalue %dx.types.ResRet.f32 %507, 0
  %509 = extractvalue %dx.types.ResRet.f32 %507, 1
  %510 = extractvalue %dx.types.ResRet.f32 %507, 2
  %511 = extractvalue %dx.types.ResRet.f32 %507, 3
  %512 = add i32 %500, 2
  %513 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %501, i32 %512, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %514 = extractvalue %dx.types.ResRet.f32 %513, 0
  %515 = extractvalue %dx.types.ResRet.f32 %513, 1
  %516 = extractvalue %dx.types.ResRet.f32 %513, 2
  %517 = extractvalue %dx.types.ResRet.f32 %513, 3
  %518 = add i32 %500, 3
  %519 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %501, i32 %518, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %520 = extractvalue %dx.types.ResRet.f32 %519, 0
  %521 = extractvalue %dx.types.ResRet.f32 %519, 1
  %522 = extractvalue %dx.types.ResRet.f32 %519, 2
  %523 = extractvalue %dx.types.ResRet.f32 %519, 3
  %524 = add i32 %500, 4
  %525 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %501, i32 %524, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %526 = extractvalue %dx.types.ResRet.f32 %525, 0
  %527 = extractvalue %dx.types.ResRet.f32 %525, 1
  %528 = extractvalue %dx.types.ResRet.f32 %525, 2
  %529 = extractvalue %dx.types.ResRet.f32 %525, 3
  %530 = fcmp fast olt float %529, 0.000000e+00
  %531 = add i32 %500, 5
  %532 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %501, i32 %531, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %533 = extractvalue %dx.types.ResRet.f32 %532, 2
  %534 = add i32 %500, 9
  %535 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %501, i32 %534, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %536 = extractvalue %dx.types.ResRet.f32 %535, 0
  %537 = extractvalue %dx.types.ResRet.f32 %535, 1
  %538 = extractvalue %dx.types.ResRet.f32 %535, 2
  %539 = call float @dx.op.binary.f32(i32 36, float %537, float %538)  ; FMin(a,b)
  %540 = call float @dx.op.binary.f32(i32 36, float %536, float %539)  ; FMin(a,b)
  %541 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 64)  ; CBufferLoadLegacy(handle,regIndex)
  %542 = extractvalue %dx.types.CBufRet.f32 %541, 0
  %543 = extractvalue %dx.types.CBufRet.f32 %541, 1
  %544 = extractvalue %dx.types.CBufRet.f32 %541, 2
  %545 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 76)  ; CBufferLoadLegacy(handle,regIndex)
  %546 = extractvalue %dx.types.CBufRet.f32 %545, 0
  %547 = extractvalue %dx.types.CBufRet.f32 %545, 1
  %548 = extractvalue %dx.types.CBufRet.f32 %545, 2
  %549 = fsub fast float %542, %503
  %550 = fsub fast float %543, %504
  %551 = fsub fast float %544, %505
  %552 = fmul fast float %549, 2.097152e+06
  %553 = fmul fast float %550, 2.097152e+06
  %554 = fmul fast float %551, 2.097152e+06
  %555 = fsub fast float %552, %546
  %556 = fsub fast float %553, %547
  %557 = fsub fast float %554, %548
  %558 = fmul fast float %555, %508
  %559 = call float @dx.op.tertiary.f32(i32 46, float %556, float %509, float %558)  ; FMad(a,b,c)
  %560 = call float @dx.op.tertiary.f32(i32 46, float %557, float %510, float %559)  ; FMad(a,b,c)
  %561 = fadd fast float %560, %511
  %562 = fmul fast float %555, %514
  %563 = call float @dx.op.tertiary.f32(i32 46, float %556, float %515, float %562)  ; FMad(a,b,c)
  %564 = call float @dx.op.tertiary.f32(i32 46, float %557, float %516, float %563)  ; FMad(a,b,c)
  %565 = fadd fast float %564, %517
  %566 = fmul fast float %555, %520
  %567 = call float @dx.op.tertiary.f32(i32 46, float %556, float %521, float %566)  ; FMad(a,b,c)
  %568 = call float @dx.op.tertiary.f32(i32 46, float %557, float %522, float %567)  ; FMad(a,b,c)
  %569 = fadd fast float %568, %523
  %570 = fmul fast float %508, %452
  %571 = call float @dx.op.tertiary.f32(i32 46, float %453, float %509, float %570)  ; FMad(a,b,c)
  %572 = call float @dx.op.tertiary.f32(i32 46, float %454, float %510, float %571)  ; FMad(a,b,c)
  %573 = fadd fast float %561, %572
  %574 = fsub fast float -0.000000e+00, %573
  %575 = fmul fast float %514, %452
  %576 = call float @dx.op.tertiary.f32(i32 46, float %453, float %515, float %575)  ; FMad(a,b,c)
  %577 = call float @dx.op.tertiary.f32(i32 46, float %454, float %516, float %576)  ; FMad(a,b,c)
  %578 = fadd fast float %565, %577
  %579 = fsub fast float -0.000000e+00, %578
  %580 = fmul fast float %520, %452
  %581 = call float @dx.op.tertiary.f32(i32 46, float %453, float %521, float %580)  ; FMad(a,b,c)
  %582 = call float @dx.op.tertiary.f32(i32 46, float %454, float %522, float %581)  ; FMad(a,b,c)
  %583 = fadd fast float %569, %582
  %584 = fsub fast float -0.000000e+00, %583
  %585 = fmul fast float %508, %434
  %586 = call float @dx.op.tertiary.f32(i32 46, float %435, float %509, float %585)  ; FMad(a,b,c)
  %587 = call float @dx.op.tertiary.f32(i32 46, float %436, float %510, float %586)  ; FMad(a,b,c)
  %588 = fmul fast float %514, %434
  %589 = call float @dx.op.tertiary.f32(i32 46, float %435, float %515, float %588)  ; FMad(a,b,c)
  %590 = call float @dx.op.tertiary.f32(i32 46, float %436, float %516, float %589)  ; FMad(a,b,c)
  %591 = fmul fast float %520, %434
  %592 = call float @dx.op.tertiary.f32(i32 46, float %435, float %521, float %591)  ; FMad(a,b,c)
  %593 = call float @dx.op.tertiary.f32(i32 46, float %436, float %522, float %592)  ; FMad(a,b,c)
  %594 = fsub fast float %587, %572
  %595 = fsub fast float %590, %577
  %596 = fsub fast float %593, %582
  %597 = fmul fast float %594, %594
  %598 = fmul fast float %595, %595
  %599 = fadd fast float %598, %597
  %600 = fmul fast float %596, %596
  %601 = fadd fast float %599, %600
  %602 = call float @dx.op.unary.f32(i32 24, float %601)  ; Sqrt(value)
  %603 = fdiv fast float %594, %602
  %604 = fdiv fast float %595, %602
  %605 = fdiv fast float %596, %602
  %606 = call float @dx.op.binary.f32(i32 35, float %537, float %538)  ; FMax(a,b)
  %607 = call float @dx.op.binary.f32(i32 35, float %536, float %606)  ; FMax(a,b)
  %608 = fdiv fast float 1.000000e+00, %607
  %609 = fmul fast float %608, 0x3FD99999A0000000
  %610 = fmul fast float %608, 1.000000e+02
  %611 = fmul fast float %608, %533
  %612 = call float @dx.op.binary.f32(i32 35, float %611, float 0x3F1A36E2E0000000)  ; FMax(a,b)
  %613 = fdiv fast float 1.000000e+00, %612
  %614 = call float @dx.op.dot3.f32(i32 55, float %574, float %579, float %584, float %603, float %604, float %605)  ; Dot3(ax,ay,az,bx,by,bz)
  %615 = call float @dx.op.binary.f32(i32 35, float %614, float 0.000000e+00)  ; FMax(a,b)
  %616 = fmul fast float %615, %457
  %617 = call float @dx.op.binary.f32(i32 36, float %616, float %610)  ; FMin(a,b)
  %618 = fsub fast float -0.000000e+00, %526
  %619 = fsub fast float -0.000000e+00, %527
  %620 = fsub fast float -0.000000e+00, %528
  %621 = fdiv fast float 1.000000e+00, %594
  %622 = fdiv fast float 1.000000e+00, %595
  %623 = fdiv fast float 1.000000e+00, %596
  %624 = fsub fast float %618, %573
  %625 = fsub fast float %624, %617
  %626 = fsub fast float %619, %578
  %627 = fsub fast float %626, %617
  %628 = fsub fast float %620, %583
  %629 = fsub fast float %628, %617
  %630 = fmul fast float %625, %621
  %631 = fmul fast float %622, %627
  %632 = fmul fast float %623, %629
  %633 = fsub fast float %526, %573
  %634 = fadd fast float %633, %617
  %635 = fsub fast float %527, %578
  %636 = fadd fast float %635, %617
  %637 = fsub fast float %528, %583
  %638 = fadd fast float %637, %617
  %639 = fmul fast float %634, %621
  %640 = fmul fast float %622, %636
  %641 = fmul fast float %623, %638
  %642 = call float @dx.op.binary.f32(i32 36, float %630, float %639)  ; FMin(a,b)
  %643 = call float @dx.op.binary.f32(i32 36, float %631, float %640)  ; FMin(a,b)
  %644 = call float @dx.op.binary.f32(i32 36, float %632, float %641)  ; FMin(a,b)
  %645 = call float @dx.op.binary.f32(i32 35, float %630, float %639)  ; FMax(a,b)
  %646 = call float @dx.op.binary.f32(i32 35, float %631, float %640)  ; FMax(a,b)
  %647 = call float @dx.op.binary.f32(i32 35, float %632, float %641)  ; FMax(a,b)
  %648 = call float @dx.op.binary.f32(i32 35, float %643, float %644)  ; FMax(a,b)
  %649 = call float @dx.op.binary.f32(i32 35, float %642, float %648)  ; FMax(a,b)
  %650 = call float @dx.op.binary.f32(i32 36, float %646, float %647)  ; FMin(a,b)
  %651 = call float @dx.op.binary.f32(i32 36, float %645, float %650)  ; FMin(a,b)
  %652 = call float @dx.op.unary.f32(i32 7, float %649)  ; Saturate(value)
  %653 = call float @dx.op.unary.f32(i32 7, float %651)  ; Saturate(value)
  %654 = fcmp fast olt float %652, %653
  br i1 %654, label %655, label %831, !dx.controlflow.hints !48

; <label>:655                                     ; preds = %493
  %656 = extractvalue %dx.types.ResRet.f32 %535, 3
  %657 = bitcast float %656 to i32
  %658 = call float @dx.op.unary.f32(i32 6, float %529)  ; FAbs(value)
  %659 = mul i32 %657, 9
  %660 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %6, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %661 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %660, i32 %659, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %662 = extractvalue %dx.types.ResRet.f32 %661, 0
  %663 = bitcast float %662 to i32
  %664 = lshr i32 %663, 30
  %665 = mul nuw nsw i32 %664, 3
  %666 = add i32 %659, -3
  %667 = add i32 %666, %665
  %668 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %660, i32 %667, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %669 = extractvalue %dx.types.ResRet.f32 %668, 0
  %670 = extractvalue %dx.types.ResRet.f32 %668, 1
  %671 = bitcast float %669 to i32
  %672 = bitcast float %670 to i32
  %673 = add i32 %667, 1
  %674 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %660, i32 %673, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %675 = extractvalue %dx.types.ResRet.f32 %674, 0
  %676 = extractvalue %dx.types.ResRet.f32 %674, 1
  %677 = extractvalue %dx.types.ResRet.f32 %674, 2
  %678 = extractvalue %dx.types.ResRet.f32 %674, 3
  %679 = add i32 %667, 2
  %680 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %660, i32 %679, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %681 = extractvalue %dx.types.ResRet.f32 %680, 0
  %682 = extractvalue %dx.types.ResRet.f32 %680, 1
  %683 = extractvalue %dx.types.ResRet.f32 %680, 2
  %684 = extractvalue %dx.types.ResRet.f32 %680, 3
  %685 = and i32 %671, 1023
  %686 = lshr i32 %671, 10
  %687 = and i32 %686, 1023
  %688 = xor i32 %664, 3
  %689 = uitofp i32 %688 to float
  %690 = call float @dx.op.unary.f32(i32 21, float %689)  ; Exp(value)
  %691 = fmul fast float %690, %658
  br i1 %530, label %692, label %695

; <label>:692                                     ; preds = %655
  %693 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 40)  ; CBufferLoadLegacy(handle,regIndex)
  %694 = extractvalue %dx.types.CBufRet.f32 %693, 0
  br label %695

; <label>:695                                     ; preds = %692, %655
  %696 = phi float [ %694, %692 ], [ 1.000000e+00, %655 ]
  %697 = fmul fast float %691, %696
  %698 = fmul fast float %697, 2.000000e+00
  %699 = fadd fast float %684, %678
  %700 = fsub fast float %699, %697
  %701 = select i1 %530, float %700, float %699
  %702 = call float @dx.op.binary.f32(i32 36, float %610, float %701)  ; FMin(a,b)
  %703 = fmul fast float %652, %602
  %704 = fmul fast float %653, %602
  br label %705

; <label>:705                                     ; preds = %822, %695
  %706 = phi float [ %494, %695 ], [ %815, %822 ]
  %707 = phi float [ %703, %695 ], [ %818, %822 ]
  %708 = phi i32 [ 0, %695 ], [ %823, %822 ]
  %709 = fmul fast float %707, %603
  %710 = fmul fast float %707, %604
  %711 = fmul fast float %707, %605
  %712 = fadd fast float %709, %573
  %713 = fadd fast float %710, %578
  %714 = fadd fast float %711, %583
  %715 = call float @dx.op.binary.f32(i32 35, float %712, float %618)  ; FMax(a,b)
  %716 = call float @dx.op.binary.f32(i32 35, float %713, float %619)  ; FMax(a,b)
  %717 = call float @dx.op.binary.f32(i32 35, float %714, float %620)  ; FMax(a,b)
  %718 = call float @dx.op.binary.f32(i32 36, float %715, float %526)  ; FMin(a,b)
  %719 = call float @dx.op.binary.f32(i32 36, float %716, float %527)  ; FMin(a,b)
  %720 = call float @dx.op.binary.f32(i32 36, float %717, float %528)  ; FMin(a,b)
  %721 = fsub fast float %718, %712
  %722 = fsub fast float %719, %713
  %723 = fsub fast float %720, %714
  %724 = fmul fast float %721, %721
  %725 = fmul fast float %722, %722
  %726 = fadd fast float %725, %724
  %727 = fmul fast float %723, %723
  %728 = fadd fast float %726, %727
  %729 = call float @dx.op.unary.f32(i32 24, float %728)  ; Sqrt(value)
  %730 = fmul fast float %718, %675
  %731 = fmul fast float %719, %676
  %732 = fmul fast float %720, %677
  %733 = fadd fast float %730, %681
  %734 = fadd fast float %731, %682
  %735 = fadd fast float %732, %683
  %736 = fptosi float %733 to i32
  %737 = fptosi float %734 to i32
  %738 = fptosi float %735 to i32
  %739 = mul i32 %738, %687
  %740 = add i32 %739, %737
  %741 = mul i32 %740, %685
  %742 = add i32 %736, %672
  %743 = add i32 %742, %741
  %744 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %8, %dx.types.ResourceProperties { i32 10, i32 1033 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<4xF32>
  %745 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %744, i32 %743, i32 undef)  ; BufferLoad(srv,index,wot)
  %746 = extractvalue %dx.types.ResRet.f32 %745, 3
  %747 = fcmp fast ogt float %746, 0.000000e+00
  br i1 %747, label %748, label %787

; <label>:748                                     ; preds = %705
  %749 = extractvalue %dx.types.ResRet.f32 %745, 2
  %750 = extractvalue %dx.types.ResRet.f32 %745, 1
  %751 = extractvalue %dx.types.ResRet.f32 %745, 0
  %752 = sitofp i32 %736 to float
  %753 = sitofp i32 %737 to float
  %754 = sitofp i32 %738 to float
  %755 = fsub fast float %733, %752
  %756 = fsub fast float %734, %753
  %757 = fsub fast float %735, %754
  %758 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 33)  ; CBufferLoadLegacy(handle,regIndex)
  %759 = extractvalue %dx.types.CBufRet.f32 %758, 0
  %760 = extractvalue %dx.types.CBufRet.f32 %758, 1
  %761 = extractvalue %dx.types.CBufRet.f32 %758, 2
  %762 = fmul fast float %759, %751
  %763 = fmul fast float %760, %750
  %764 = fmul fast float %761, %749
  %765 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 34)  ; CBufferLoadLegacy(handle,regIndex)
  %766 = extractvalue %dx.types.CBufRet.f32 %765, 0
  %767 = extractvalue %dx.types.CBufRet.f32 %765, 1
  %768 = extractvalue %dx.types.CBufRet.f32 %765, 2
  %769 = fmul fast float %766, %755
  %770 = fmul fast float %767, %756
  %771 = fmul fast float %768, %757
  %772 = fadd fast float %769, %762
  %773 = fadd fast float %770, %763
  %774 = fadd fast float %771, %764
  %775 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 32)  ; CBufferLoadLegacy(handle,regIndex)
  %776 = extractvalue %dx.types.CBufRet.f32 %775, 0
  %777 = extractvalue %dx.types.CBufRet.f32 %775, 1
  %778 = extractvalue %dx.types.CBufRet.f32 %775, 2
  %779 = fadd fast float %772, %776
  %780 = fadd fast float %773, %777
  %781 = fadd fast float %774, %778
  %782 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %7, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %783 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %13, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %784 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %782, %dx.types.Handle %783, float %779, float %780, float %781, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %785 = extractvalue %dx.types.ResRet.f32 %784, 0
  %786 = fmul fast float %785, %678
  br label %787

; <label>:787                                     ; preds = %748, %705
  %788 = phi float [ %786, %748 ], [ %678, %705 ]
  %789 = fadd float %684, %788
  %790 = fadd fast float %789, %729
  br i1 %530, label %791, label %796

; <label>:791                                     ; preds = %787
  %792 = fdiv fast float %707, %698
  %793 = call float @dx.op.unary.f32(i32 7, float %792)  ; Saturate(value)
  %794 = fmul fast float %793, %697
  %795 = fsub fast float %790, %794
  br label %796

; <label>:796                                     ; preds = %791, %787
  %797 = phi float [ %795, %791 ], [ %790, %787 ]
  %798 = fmul fast float %707, %613
  %799 = call float @dx.op.unary.f32(i32 7, float %798)  ; Saturate(value)
  %800 = fsub fast float 1.000000e+00, %799
  %801 = fmul fast float %707, %457
  %802 = call float @dx.op.binary.f32(i32 35, float %801, float %609)  ; FMax(a,b)
  %803 = call float @dx.op.binary.f32(i32 36, float %802, float %702)  ; FMin(a,b)
  %804 = fdiv fast float %797, %803
  %805 = call float @dx.op.unary.f32(i32 7, float %804)  ; Saturate(value)
  %806 = call float @dx.op.binary.f32(i32 35, float %805, float %800)  ; FMax(a,b)
  br i1 %490, label %807, label %813

; <label>:807                                     ; preds = %796
  %808 = fmul fast float %489, %540
  %809 = fmul fast float %808, %707
  %810 = call float @dx.op.unary.f32(i32 21, float %809)  ; Exp(value)
  %811 = call float @dx.op.unary.f32(i32 7, float %810)  ; Saturate(value)
  %812 = call float @dx.op.binary.f32(i32 35, float %806, float %811)  ; FMax(a,b)
  br label %813

; <label>:813                                     ; preds = %807, %796
  %814 = phi float [ %812, %807 ], [ %806, %796 ]
  %815 = call float @dx.op.binary.f32(i32 36, float %706, float %814)  ; FMin(a,b)
  %816 = call float @dx.op.unary.f32(i32 6, float %797)  ; FAbs(value)
  %817 = call float @dx.op.binary.f32(i32 35, float %816, float 3.906250e-03)  ; FMax(a,b)
  %818 = fadd fast float %817, %707
  %819 = fcmp fast olt float %815, 0x3F847AE140000000
  %820 = fcmp fast ogt float %818, %704
  %821 = or i1 %819, %820
  br i1 %821, label %825, label %822

; <label>:822                                     ; preds = %813
  %823 = add nuw nsw i32 %708, 1
  %824 = icmp ult i32 %823, 64
  br i1 %824, label %705, label %825, !llvm.loop !49

; <label>:825                                     ; preds = %822, %813
  %826 = phi i32 [ %708, %813 ], [ %823, %822 ]
  %827 = uitofp i32 %826 to float
  %828 = fmul fast float %827, 1.562500e-02
  %829 = fsub fast float 1.000000e+00, %828
  %830 = call float @dx.op.binary.f32(i32 36, float %815, float %829)  ; FMin(a,b)
  br label %831

; <label>:831                                     ; preds = %825, %493
  %832 = phi float [ %830, %825 ], [ %494, %493 ]
  %833 = fcmp fast olt float %832, 0x3F847AE140000000
  br i1 %833, label %837, label %834

; <label>:834                                     ; preds = %831
  %835 = add nuw i32 %495, 1
  %836 = icmp ult i32 %835, %427
  br i1 %836, label %493, label %837, !llvm.loop !50

; <label>:837                                     ; preds = %834, %831
  %838 = phi float [ %832, %834 ], [ 0.000000e+00, %831 ]
  br label %839

; <label>:839                                     ; preds = %837, %488, %421
  %840 = phi float [ 1.000000e+00, %421 ], [ 1.000000e+00, %488 ], [ %838, %837 ]
  %841 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 4098, i32 521 })  ; AnnotateHandle(res,props)  resource: RWTexture2D<2xF32>
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %841, i32 %20, i32 %21, i32 undef, float %840, float %67, float %840, float %840, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.groupId.i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadId.i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadIdInGroup.i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind
declare void @dx.op.textureStore.f32(i32, %dx.types.Handle, i32, i32, i32, float, float, float, float, i8) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: noduplicate nounwind
declare void @dx.op.barrier(i32, i32) #3

; Function Attrs: nounwind readnone
declare i32 @dx.op.binary.i32(i32, i32, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }
attributes #3 = { noduplicate nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.entryPoints = !{!28}

!0 = !{!"dxc(private) 1.7.0.0 (private, 00000000)"}
!1 = !{i32 1, i32 6}
!2 = !{i32 1, i32 7}
!3 = !{!"cs", i32 6, i32 6}
!4 = !{!5, !20, !22, !25}
!5 = !{!6, !8, !9, !10, !11, !12, !14, !16, !18, !19}
!6 = !{i32 0, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i32 0, !7}
!7 = !{i32 0, i32 9}
!8 = !{i32 1, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 1, i32 1, i32 2, i32 0, !7}
!9 = !{i32 2, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 2, i32 1, i32 2, i32 0, !7}
!10 = !{i32 3, %"class.Buffer<vector<float, 4> >"* undef, !"", i32 0, i32 3, i32 1, i32 10, i32 0, !7}
!11 = !{i32 4, %"class.Texture3D<vector<float, 4> >"* undef, !"", i32 0, i32 4, i32 1, i32 4, i32 0, !7}
!12 = !{i32 5, %"class.StructuredBuffer<vector<float, 4> >"* undef, !"", i32 0, i32 5, i32 1, i32 12, i32 0, !13}
!13 = !{i32 1, i32 16}
!14 = !{i32 6, %"class.Buffer<unsigned int>"* undef, !"", i32 0, i32 6, i32 1, i32 10, i32 0, !15}
!15 = !{i32 0, i32 5}
!16 = !{i32 7, %"class.StructuredBuffer<unsigned int>"* undef, !"", i32 0, i32 7, i32 1, i32 12, i32 0, !17}
!17 = !{i32 1, i32 4}
!18 = !{i32 8, %"class.StructuredBuffer<vector<float, 4> >"* undef, !"", i32 0, i32 8, i32 1, i32 12, i32 0, !13}
!19 = !{i32 9, %"class.StructuredBuffer<vector<float, 4> >"* undef, !"", i32 0, i32 9, i32 1, i32 12, i32 0, !13}
!20 = !{!21}
!21 = !{i32 0, %"class.RWTexture2D<vector<float, 2> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!22 = !{!23, !24}
!23 = !{i32 0, %hostlayout._RootShaderParameters* undef, !"", i32 0, i32 0, i32 1, i32 664, null}
!24 = !{i32 1, %hostlayout.UniformBufferConstants_View* undef, !"", i32 0, i32 1, i32 1, i32 5388, null}
!25 = !{!26, !27}
!26 = !{i32 0, %struct.SamplerState* undef, !"", i32 1000, i32 2, i32 1, i32 0, null}
!27 = !{i32 1, %struct.SamplerState* undef, !"", i32 0, i32 0, i32 1, i32 0, null}
!28 = !{void ()* @DistanceFieldShadowingCS, !"DistanceFieldShadowingCS", null, !4, !29}
!29 = !{i32 0, i64 16, i32 4, !30, i32 5, !31}
!30 = !{i32 8, i32 8, i32 1}
!31 = !{i32 0}
!32 = !{!33, !33, i64 0}
!33 = !{!"int", !34, i64 0}
!34 = !{!"omnipotent char", !35, i64 0}
!35 = !{!"Simple C/C++ TBAA"}
!36 = !{!37, !39, !40}
!37 = distinct !{!37, !38, !"\01?CullObjectsToTileWithGather@@YAXMIV?$vector@I$01@@MMAIAIAIA_N1@Z: %NumIntersectingObjects"}
!38 = distinct !{!38, !"\01?CullObjectsToTileWithGather@@YAXMIV?$vector@I$01@@MMAIAIAIA_N1@Z"}
!39 = distinct !{!39, !38, !"\01?CullObjectsToTileWithGather@@YAXMIV?$vector@I$01@@MMAIAIAIA_N1@Z: %bTileShouldComputeShadowing"}
!40 = distinct !{!40, !38, !"\01?CullObjectsToTileWithGather@@YAXMIV?$vector@I$01@@MMAIAIAIA_N1@Z: %GroupIndex"}
!41 = distinct !{!41, !"dx.controlflow.hints", i32 1}
!42 = distinct !{!42, !"dx.controlflow.hints", i32 1}
!43 = distinct !{!43, !"dx.controlflow.hints", i32 1}
!44 = distinct !{!44, !45}
!45 = !{!"llvm.loop.unroll.disable"}
!46 = distinct !{!46, !"dx.controlflow.hints", i32 1}
!47 = distinct !{!47, !"dx.controlflow.hints", i32 1}
!48 = distinct !{!48, !"dx.controlflow.hints", i32 1}
!49 = distinct !{!49, !45}
!50 = distinct !{!50, !45}
