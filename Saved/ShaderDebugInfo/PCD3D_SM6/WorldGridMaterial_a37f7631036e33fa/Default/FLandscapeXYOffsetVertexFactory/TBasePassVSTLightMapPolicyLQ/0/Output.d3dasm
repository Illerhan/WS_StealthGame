;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; ATTRIBUTE                0   xyzw        0     NONE   float   xyzw
; ATTRIBUTE                1   x           1     NONE    uint   x   
; SV_InstanceID            0   x           2   INSTID    uint   x   
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD                 0   xy          0     NONE   float   xy  
; TEXCOORD                 3     zw        0     NONE   float     zw
; TEXCOORD                 1   xyzw        1     NONE   float   xyzw
; TEXCOORD                 2   xyzw        2     NONE   float   xyzw
; TEXCOORD                 4   xy          3     NONE   float   xy  
; PRIMITIVE_ID             0   x           4     NONE    uint   x   
; TEXCOORD                 9   xyz         5     NONE   float   xyz 
; VELOCITY_PREV_POS        0   xyzw        6     NONE   float   xyzw
; SV_Position              0   xyzw        7      POS   float   xyzw
;
; shader hash: ab839248f3d6f680920de5c777a224e6
;
; Pipeline Runtime Information: 
;
; Vertex Shader
; OutputPositionPresent=1
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; ATTRIBUTE                0                              
; ATTRIBUTE                1                              
; SV_InstanceID            0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; TEXCOORD                 2                 linear       
; TEXCOORD                 3                 linear       
; TEXCOORD                 4                 linear       
; PRIMITIVE_ID             0        nointerpolation       
; TEXCOORD                 9                 linear       
; VELOCITY_PREV_POS        0                 linear       
; SV_Position              0          noperspective       
;
; Buffer Definitions:
;
; cbuffer UniformBufferConstants_View
; {
;
;   struct hostlayout.UniformBufferConstants_View
;   {
;
;       row_major float4x4 View_TranslatedWorldToClip;; Offset:    0
;       row_major float4x4 View_TranslatedWorldToSubpixelClip;; Offset:   64
;       row_major float4x4 View_RelativeWorldToClip;  ; Offset:  128
;       row_major float4x4 View_ClipToRelativeWorld;  ; Offset:  192
;       row_major float4x4 View_TranslatedWorldToView;; Offset:  256
;       row_major float4x4 View_ViewToTranslatedWorld;; Offset:  320
;       row_major float4x4 View_TranslatedWorldToCameraView;; Offset:  384
;       row_major float4x4 View_CameraViewToTranslatedWorld;; Offset:  448
;       row_major float4x4 View_ViewToClip;           ; Offset:  512
;       row_major float4x4 View_ViewToClipNoAA;       ; Offset:  576
;       row_major float4x4 View_ClipToView;           ; Offset:  640
;       row_major float4x4 View_ClipToTranslatedWorld;; Offset:  704
;       row_major float4x4 View_SVPositionToTranslatedWorld;; Offset:  768
;       row_major float4x4 View_ScreenToRelativeWorld;; Offset:  832
;       row_major float4x4 View_ScreenToTranslatedWorld;; Offset:  896
;       row_major float4x4 View_MobileMultiviewShadowTransform;; Offset:  960
;       float3 View_ViewTilePosition;                 ; Offset: 1024
;       float PrePadding_View_1036;                   ; Offset: 1036
;       float3 View_MatrixTilePosition;               ; Offset: 1040
;       float PrePadding_View_1052;                   ; Offset: 1052
;       float3 View_ViewForward;                      ; Offset: 1056
;       float PrePadding_View_1068;                   ; Offset: 1068
;       float3 View_ViewUp;                           ; Offset: 1072
;       float PrePadding_View_1084;                   ; Offset: 1084
;       float3 View_ViewRight;                        ; Offset: 1088
;       float PrePadding_View_1100;                   ; Offset: 1100
;       float3 View_HMDViewNoRollUp;                  ; Offset: 1104
;       float PrePadding_View_1116;                   ; Offset: 1116
;       float3 View_HMDViewNoRollRight;               ; Offset: 1120
;       float PrePadding_View_1132;                   ; Offset: 1132
;       float4 View_InvDeviceZToWorldZTransform;      ; Offset: 1136
;       float4 View_ScreenPositionScaleBias;          ; Offset: 1152
;       float3 View_RelativeWorldCameraOrigin;        ; Offset: 1168
;       float PrePadding_View_1180;                   ; Offset: 1180
;       float3 View_TranslatedWorldCameraOrigin;      ; Offset: 1184
;       float PrePadding_View_1196;                   ; Offset: 1196
;       float3 View_RelativeWorldViewOrigin;          ; Offset: 1200
;       float PrePadding_View_1212;                   ; Offset: 1212
;       float3 View_RelativePreViewTranslation;       ; Offset: 1216
;       float PrePadding_View_1228;                   ; Offset: 1228
;       row_major float4x4 View_PrevViewToClip;       ; Offset: 1232
;       row_major float4x4 View_PrevClipToView;       ; Offset: 1296
;       row_major float4x4 View_PrevTranslatedWorldToClip;; Offset: 1360
;       row_major float4x4 View_PrevTranslatedWorldToView;; Offset: 1424
;       row_major float4x4 View_PrevViewToTranslatedWorld;; Offset: 1488
;       row_major float4x4 View_PrevTranslatedWorldToCameraView;; Offset: 1552
;       row_major float4x4 View_PrevCameraViewToTranslatedWorld;; Offset: 1616
;       float3 View_PrevTranslatedWorldCameraOrigin;  ; Offset: 1680
;       float PrePadding_View_1692;                   ; Offset: 1692
;       float3 View_PrevRelativeWorldCameraOrigin;    ; Offset: 1696
;       float PrePadding_View_1708;                   ; Offset: 1708
;       float3 View_PrevRelativeWorldViewOrigin;      ; Offset: 1712
;       float PrePadding_View_1724;                   ; Offset: 1724
;       float3 View_RelativePrevPreViewTranslation;   ; Offset: 1728
;       float PrePadding_View_1740;                   ; Offset: 1740
;       row_major float4x4 View_PrevClipToRelativeWorld;; Offset: 1744
;       row_major float4x4 View_PrevScreenToTranslatedWorld;; Offset: 1808
;       row_major float4x4 View_ClipToPrevClip;       ; Offset: 1872
;       row_major float4x4 View_ClipToPrevClipWithAA; ; Offset: 1936
;       float4 View_TemporalAAJitter;                 ; Offset: 2000
;       float4 View_GlobalClippingPlane;              ; Offset: 2016
;       float2 View_FieldOfViewWideAngles;            ; Offset: 2032
;       float2 View_PrevFieldOfViewWideAngles;        ; Offset: 2040
;       float4 View_ViewRectMin;                      ; Offset: 2048
;       float4 View_ViewSizeAndInvSize;               ; Offset: 2064
;       uint4 View_ViewRectMinAndSize;                ; Offset: 2080
;       float4 View_LightProbeSizeRatioAndInvSizeRatio;; Offset: 2096
;       float4 View_BufferSizeAndInvSize;             ; Offset: 2112
;       float4 View_BufferBilinearUVMinMax;           ; Offset: 2128
;       float4 View_ScreenToViewSpace;                ; Offset: 2144
;       float2 View_BufferToSceneTextureScale;        ; Offset: 2160
;       float2 View_ResolutionFractionAndInv;         ; Offset: 2168
;       int View_NumSceneColorMSAASamples;            ; Offset: 2176
;       float View_PreExposure;                       ; Offset: 2180
;       float View_OneOverPreExposure;                ; Offset: 2184
;       float PrePadding_View_2188;                   ; Offset: 2188
;       float4 View_DiffuseOverrideParameter;         ; Offset: 2192
;       float4 View_SpecularOverrideParameter;        ; Offset: 2208
;       float4 View_NormalOverrideParameter;          ; Offset: 2224
;       float2 View_RoughnessOverrideParameter;       ; Offset: 2240
;       float View_PrevFrameGameTime;                 ; Offset: 2248
;       float View_PrevFrameRealTime;                 ; Offset: 2252
;       float View_OutOfBoundsMask;                   ; Offset: 2256
;       float PrePadding_View_2260;                   ; Offset: 2260
;       float PrePadding_View_2264;                   ; Offset: 2264
;       float PrePadding_View_2268;                   ; Offset: 2268
;       float3 View_WorldCameraMovementSinceLastFrame;; Offset: 2272
;       float View_CullingSign;                       ; Offset: 2284
;       float View_NearPlane;                         ; Offset: 2288
;       float View_GameTime;                          ; Offset: 2292
;       float View_RealTime;                          ; Offset: 2296
;       float View_DeltaTime;                         ; Offset: 2300
;       float View_MaterialTextureMipBias;            ; Offset: 2304
;       float View_MaterialTextureDerivativeMultiply; ; Offset: 2308
;       uint View_Random;                             ; Offset: 2312
;       uint View_FrameNumber;                        ; Offset: 2316
;       uint View_StateFrameIndexMod8;                ; Offset: 2320
;       uint View_StateFrameIndex;                    ; Offset: 2324
;       uint View_DebugViewModeMask;                  ; Offset: 2328
;       uint View_WorldIsPaused;                      ; Offset: 2332
;       float View_CameraCut;                         ; Offset: 2336
;       float View_UnlitViewmodeMask;                 ; Offset: 2340
;       float PrePadding_View_2344;                   ; Offset: 2344
;       float PrePadding_View_2348;                   ; Offset: 2348
;       float4 View_DirectionalLightColor;            ; Offset: 2352
;       float3 View_DirectionalLightDirection;        ; Offset: 2368
;       float PrePadding_View_2380;                   ; Offset: 2380
;       float4 View_TranslucencyLightingVolumeMin[2]; ; Offset: 2384
;       float4 View_TranslucencyLightingVolumeInvSize[2];; Offset: 2416
;       float4 View_TemporalAAParams;                 ; Offset: 2448
;       float4 View_CircleDOFParams;                  ; Offset: 2464
;       float View_DepthOfFieldSensorWidth;           ; Offset: 2480
;       float View_DepthOfFieldFocalDistance;         ; Offset: 2484
;       float View_DepthOfFieldScale;                 ; Offset: 2488
;       float View_DepthOfFieldFocalLength;           ; Offset: 2492
;       float View_DepthOfFieldFocalRegion;           ; Offset: 2496
;       float View_DepthOfFieldNearTransitionRegion;  ; Offset: 2500
;       float View_DepthOfFieldFarTransitionRegion;   ; Offset: 2504
;       float View_MotionBlurNormalizedToPixel;       ; Offset: 2508
;       float View_GeneralPurposeTweak;               ; Offset: 2512
;       float View_GeneralPurposeTweak2;              ; Offset: 2516
;       float View_DemosaicVposOffset;                ; Offset: 2520
;       float View_DecalDepthBias;                    ; Offset: 2524
;       float3 View_IndirectLightingColorScale;       ; Offset: 2528
;       float PrePadding_View_2540;                   ; Offset: 2540
;       float3 View_PrecomputedIndirectLightingColorScale;; Offset: 2544
;       float PrePadding_View_2556;                   ; Offset: 2556
;       float3 View_PrecomputedIndirectSpecularColorScale;; Offset: 2560
;       float PrePadding_View_2572;                   ; Offset: 2572
;       float4 View_AtmosphereLightDirection[2];      ; Offset: 2576
;       float4 View_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];; Offset: 2608
;       float4 View_AtmosphereLightIlluminanceOuterSpace[2];; Offset: 2640
;       float4 View_AtmosphereLightDiscLuminance[2];  ; Offset: 2672
;       float4 View_AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];; Offset: 2704
;       float4 View_SkyViewLutSizeAndInvSize;         ; Offset: 2736
;       float3 View_SkyCameraTranslatedWorldOrigin;   ; Offset: 2752
;       float PrePadding_View_2764;                   ; Offset: 2764
;       float4 View_SkyPlanetTranslatedWorldCenterAndViewHeight;; Offset: 2768
;       row_major float4x4 View_SkyViewLutReferential;; Offset: 2784
;       float4 View_SkyAtmosphereSkyLuminanceFactor;  ; Offset: 2848
;       float View_SkyAtmospherePresentInScene;       ; Offset: 2864
;       float View_SkyAtmosphereHeightFogContribution;; Offset: 2868
;       float View_SkyAtmosphereBottomRadiusKm;       ; Offset: 2872
;       float View_SkyAtmosphereTopRadiusKm;          ; Offset: 2876
;       float4 View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;; Offset: 2880
;       float View_SkyAtmosphereAerialPerspectiveStartDepthKm;; Offset: 2896
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;; Offset: 2900
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;; Offset: 2904
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;; Offset: 2908
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;; Offset: 2912
;       float View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;; Offset: 2916
;       float PrePadding_View_2920;                   ; Offset: 2920
;       float PrePadding_View_2924;                   ; Offset: 2924
;       float3 View_NormalCurvatureToRoughnessScaleBias;; Offset: 2928
;       float View_RenderingReflectionCaptureMask;    ; Offset: 2940
;       float View_RealTimeReflectionCapture;         ; Offset: 2944
;       float View_RealTimeReflectionCapturePreExposure;; Offset: 2948
;       float PrePadding_View_2952;                   ; Offset: 2952
;       float PrePadding_View_2956;                   ; Offset: 2956
;       float4 View_AmbientCubemapTint;               ; Offset: 2960
;       float View_AmbientCubemapIntensity;           ; Offset: 2976
;       float View_SkyLightApplyPrecomputedBentNormalShadowingFlag;; Offset: 2980
;       float View_SkyLightAffectReflectionFlag;      ; Offset: 2984
;       float View_SkyLightAffectGlobalIlluminationFlag;; Offset: 2988
;       float4 View_SkyLightColor;                    ; Offset: 2992
;       float4 View_MobileSkyIrradianceEnvironmentMap[8];; Offset: 3008
;       float View_MobilePreviewMode;                 ; Offset: 3136
;       float View_HMDEyePaddingOffset;               ; Offset: 3140
;       float View_ReflectionCubemapMaxMip;           ; Offset: 3144
;       float View_ShowDecalsMask;                    ; Offset: 3148
;       uint View_DistanceFieldAOSpecularOcclusionMode;; Offset: 3152
;       float View_IndirectCapsuleSelfShadowingIntensity;; Offset: 3156
;       float PrePadding_View_3160;                   ; Offset: 3160
;       float PrePadding_View_3164;                   ; Offset: 3164
;       float3 View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;; Offset: 3168
;       int View_StereoPassIndex;                     ; Offset: 3180
;       float4 View_GlobalVolumeTranslatedCenterAndExtent[6];; Offset: 3184
;       float4 View_GlobalVolumeTranslatedWorldToUVAddAndMul[6];; Offset: 3280
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVScale[6];; Offset: 3376
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVBias[6];; Offset: 3472
;       float View_GlobalDistanceFieldMipFactor;      ; Offset: 3568
;       float View_GlobalDistanceFieldMipTransition;  ; Offset: 3572
;       int View_GlobalDistanceFieldClipmapSizeInPages;; Offset: 3576
;       int PrePadding_View_3580;                     ; Offset: 3580
;       float3 View_GlobalDistanceFieldInvPageAtlasSize;; Offset: 3584
;       float PrePadding_View_3596;                   ; Offset: 3596
;       float3 View_GlobalDistanceFieldInvCoverageAtlasSize;; Offset: 3600
;       float View_GlobalVolumeDimension;             ; Offset: 3612
;       float View_GlobalVolumeTexelSize;             ; Offset: 3616
;       float View_MaxGlobalDFAOConeDistance;         ; Offset: 3620
;       uint View_NumGlobalSDFClipmaps;               ; Offset: 3624
;       float View_CoveredExpandSurfaceScale;         ; Offset: 3628
;       float View_NotCoveredExpandSurfaceScale;      ; Offset: 3632
;       float View_NotCoveredMinStepScale;            ; Offset: 3636
;       float View_DitheredTransparencyStepThreshold; ; Offset: 3640
;       float View_DitheredTransparencyTraceThreshold;; Offset: 3644
;       int2 View_CursorPosition;                     ; Offset: 3648
;       float View_bCheckerboardSubsurfaceProfileRendering;; Offset: 3656
;       float PrePadding_View_3660;                   ; Offset: 3660
;       float3 View_VolumetricFogInvGridSize;         ; Offset: 3664
;       float PrePadding_View_3676;                   ; Offset: 3676
;       float3 View_VolumetricFogGridZParams;         ; Offset: 3680
;       float PrePadding_View_3692;                   ; Offset: 3692
;       float2 View_VolumetricFogSVPosToVolumeUV;     ; Offset: 3696
;       float2 View_VolumetricFogScreenUVToHistoryVolumeUV;; Offset: 3704
;       float View_VolumetricFogMaxDistance;          ; Offset: 3712
;       float PrePadding_View_3716;                   ; Offset: 3716
;       float PrePadding_View_3720;                   ; Offset: 3720
;       float PrePadding_View_3724;                   ; Offset: 3724
;       float3 View_VolumetricLightmapWorldToUVScale; ; Offset: 3728
;       float PrePadding_View_3740;                   ; Offset: 3740
;       float3 View_VolumetricLightmapWorldToUVAdd;   ; Offset: 3744
;       float PrePadding_View_3756;                   ; Offset: 3756
;       float3 View_VolumetricLightmapIndirectionTextureSize;; Offset: 3760
;       float View_VolumetricLightmapBrickSize;       ; Offset: 3772
;       float3 View_VolumetricLightmapBrickTexelSize; ; Offset: 3776
;       float View_IndirectLightingCacheShowFlag;     ; Offset: 3788
;       float View_EyeToPixelSpreadAngle;             ; Offset: 3792
;       float PrePadding_View_3796;                   ; Offset: 3796
;       float PrePadding_View_3800;                   ; Offset: 3800
;       float PrePadding_View_3804;                   ; Offset: 3804
;       float4 View_XRPassthroughCameraUVs[2];        ; Offset: 3808
;       float View_GlobalVirtualTextureMipBias;       ; Offset: 3840
;       uint View_VirtualTextureFeedbackShift;        ; Offset: 3844
;       uint View_VirtualTextureFeedbackMask;         ; Offset: 3848
;       uint View_VirtualTextureFeedbackStride;       ; Offset: 3852
;       uint View_VirtualTextureFeedbackJitterOffset; ; Offset: 3856
;       uint View_VirtualTextureFeedbackSampleOffset; ; Offset: 3860
;       uint PrePadding_View_3864;                    ; Offset: 3864
;       uint PrePadding_View_3868;                    ; Offset: 3868
;       float4 View_RuntimeVirtualTextureMipLevel;    ; Offset: 3872
;       float2 View_RuntimeVirtualTexturePackHeight;  ; Offset: 3888
;       float PrePadding_View_3896;                   ; Offset: 3896
;       float PrePadding_View_3900;                   ; Offset: 3900
;       float4 View_RuntimeVirtualTextureDebugParams; ; Offset: 3904
;       float View_OverrideLandscapeLOD;              ; Offset: 3920
;       int View_FarShadowStaticMeshLODBias;          ; Offset: 3924
;       float View_MinRoughness;                      ; Offset: 3928
;       float PrePadding_View_3932;                   ; Offset: 3932
;       float4 View_HairRenderInfo;                   ; Offset: 3936
;       uint View_EnableSkyLight;                     ; Offset: 3952
;       uint View_HairRenderInfoBits;                 ; Offset: 3956
;       uint View_HairComponents;                     ; Offset: 3960
;       float View_bSubsurfacePostprocessEnabled;     ; Offset: 3964
;       float4 View_SSProfilesTextureSizeAndInvSize;  ; Offset: 3968
;       float4 View_SSProfilesPreIntegratedTextureSizeAndInvSize;; Offset: 3984
;       float3 View_PhysicsFieldClipmapCenter;        ; Offset: 4000
;       float View_PhysicsFieldClipmapDistance;       ; Offset: 4012
;       int View_PhysicsFieldClipmapResolution;       ; Offset: 4016
;       int View_PhysicsFieldClipmapExponent;         ; Offset: 4020
;       int View_PhysicsFieldClipmapCount;            ; Offset: 4024
;       int View_PhysicsFieldTargetCount;             ; Offset: 4028
;       int4 View_PhysicsFieldTargets[32];            ; Offset: 4032
;       uint View_InstanceSceneDataSOAStride;         ; Offset: 4544
;       uint View_GPUSceneViewId;                     ; Offset: 4548
;       float View_ViewResolutionFraction;            ; Offset: 4552
;       float View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;; Offset: 4556
;       uint BindlessSampler_View_MaterialTextureBilinearWrapedSampler;; Offset: 4560
;       uint PrePadding_View_4564;                    ; Offset: 4564
;       uint BindlessSampler_View_MaterialTextureBilinearClampedSampler;; Offset: 4568
;       uint PrePadding_View_4572;                    ; Offset: 4572
;       uint BindlessResource_View_VolumetricLightmapIndirectionTexture;; Offset: 4576
;       uint PrePadding_View_4580;                    ; Offset: 4580
;       uint BindlessResource_View_VolumetricLightmapBrickAmbientVector;; Offset: 4584
;       uint PrePadding_View_4588;                    ; Offset: 4588
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients0;; Offset: 4592
;       uint PrePadding_View_4596;                    ; Offset: 4596
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients1;; Offset: 4600
;       uint PrePadding_View_4604;                    ; Offset: 4604
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients2;; Offset: 4608
;       uint PrePadding_View_4612;                    ; Offset: 4612
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients3;; Offset: 4616
;       uint PrePadding_View_4620;                    ; Offset: 4620
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients4;; Offset: 4624
;       uint PrePadding_View_4628;                    ; Offset: 4628
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients5;; Offset: 4632
;       uint PrePadding_View_4636;                    ; Offset: 4636
;       uint BindlessResource_View_SkyBentNormalBrickTexture;; Offset: 4640
;       uint PrePadding_View_4644;                    ; Offset: 4644
;       uint BindlessResource_View_DirectionalLightShadowingBrickTexture;; Offset: 4648
;       uint PrePadding_View_4652;                    ; Offset: 4652
;       uint BindlessSampler_View_VolumetricLightmapBrickAmbientVectorSampler;; Offset: 4656
;       uint PrePadding_View_4660;                    ; Offset: 4660
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler0;; Offset: 4664
;       uint PrePadding_View_4668;                    ; Offset: 4668
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler1;; Offset: 4672
;       uint PrePadding_View_4676;                    ; Offset: 4676
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler2;; Offset: 4680
;       uint PrePadding_View_4684;                    ; Offset: 4684
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler3;; Offset: 4688
;       uint PrePadding_View_4692;                    ; Offset: 4692
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler4;; Offset: 4696
;       uint PrePadding_View_4700;                    ; Offset: 4700
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler5;; Offset: 4704
;       uint PrePadding_View_4708;                    ; Offset: 4708
;       uint BindlessSampler_View_SkyBentNormalTextureSampler;; Offset: 4712
;       uint PrePadding_View_4716;                    ; Offset: 4716
;       uint BindlessSampler_View_DirectionalLightShadowingTextureSampler;; Offset: 4720
;       uint PrePadding_View_4724;                    ; Offset: 4724
;       uint BindlessResource_View_GlobalDistanceFieldPageAtlasTexture;; Offset: 4728
;       uint PrePadding_View_4732;                    ; Offset: 4732
;       uint BindlessResource_View_GlobalDistanceFieldCoverageAtlasTexture;; Offset: 4736
;       uint PrePadding_View_4740;                    ; Offset: 4740
;       uint BindlessResource_View_GlobalDistanceFieldPageTableTexture;; Offset: 4744
;       uint PrePadding_View_4748;                    ; Offset: 4748
;       uint BindlessResource_View_GlobalDistanceFieldMipTexture;; Offset: 4752
;       uint PrePadding_View_4756;                    ; Offset: 4756
;       uint BindlessResource_View_AtmosphereTransmittanceTexture;; Offset: 4760
;       uint PrePadding_View_4764;                    ; Offset: 4764
;       uint BindlessSampler_View_AtmosphereTransmittanceTextureSampler;; Offset: 4768
;       uint PrePadding_View_4772;                    ; Offset: 4772
;       uint BindlessResource_View_AtmosphereIrradianceTexture;; Offset: 4776
;       uint PrePadding_View_4780;                    ; Offset: 4780
;       uint BindlessSampler_View_AtmosphereIrradianceTextureSampler;; Offset: 4784
;       uint PrePadding_View_4788;                    ; Offset: 4788
;       uint BindlessResource_View_AtmosphereInscatterTexture;; Offset: 4792
;       uint PrePadding_View_4796;                    ; Offset: 4796
;       uint BindlessSampler_View_AtmosphereInscatterTextureSampler;; Offset: 4800
;       uint PrePadding_View_4804;                    ; Offset: 4804
;       uint BindlessResource_View_PerlinNoiseGradientTexture;; Offset: 4808
;       uint PrePadding_View_4812;                    ; Offset: 4812
;       uint BindlessSampler_View_PerlinNoiseGradientTextureSampler;; Offset: 4816
;       uint PrePadding_View_4820;                    ; Offset: 4820
;       uint BindlessResource_View_PerlinNoise3DTexture;; Offset: 4824
;       uint PrePadding_View_4828;                    ; Offset: 4828
;       uint BindlessSampler_View_PerlinNoise3DTextureSampler;; Offset: 4832
;       uint PrePadding_View_4836;                    ; Offset: 4836
;       uint BindlessResource_View_SobolSamplingTexture;; Offset: 4840
;       uint PrePadding_View_4844;                    ; Offset: 4844
;       uint BindlessSampler_View_SharedPointWrappedSampler;; Offset: 4848
;       uint PrePadding_View_4852;                    ; Offset: 4852
;       uint BindlessSampler_View_SharedPointClampedSampler;; Offset: 4856
;       uint PrePadding_View_4860;                    ; Offset: 4860
;       uint BindlessSampler_View_SharedBilinearWrappedSampler;; Offset: 4864
;       uint PrePadding_View_4868;                    ; Offset: 4868
;       uint BindlessSampler_View_SharedBilinearClampedSampler;; Offset: 4872
;       uint PrePadding_View_4876;                    ; Offset: 4876
;       uint BindlessSampler_View_SharedBilinearAnisoClampedSampler;; Offset: 4880
;       uint PrePadding_View_4884;                    ; Offset: 4884
;       uint BindlessSampler_View_SharedTrilinearWrappedSampler;; Offset: 4888
;       uint PrePadding_View_4892;                    ; Offset: 4892
;       uint BindlessSampler_View_SharedTrilinearClampedSampler;; Offset: 4896
;       uint PrePadding_View_4900;                    ; Offset: 4900
;       uint BindlessResource_View_PreIntegratedBRDF; ; Offset: 4904
;       uint PrePadding_View_4908;                    ; Offset: 4908
;       uint BindlessSampler_View_PreIntegratedBRDFSampler;; Offset: 4912
;       uint PrePadding_View_4916;                    ; Offset: 4916
;       uint BindlessResource_View_PrimitiveSceneData;; Offset: 4920
;       uint PrePadding_View_4924;                    ; Offset: 4924
;       uint BindlessResource_View_InstanceSceneData; ; Offset: 4928
;       uint PrePadding_View_4932;                    ; Offset: 4932
;       uint BindlessResource_View_InstancePayloadData;; Offset: 4936
;       uint PrePadding_View_4940;                    ; Offset: 4940
;       uint BindlessResource_View_LightmapSceneData; ; Offset: 4944
;       uint PrePadding_View_4948;                    ; Offset: 4948
;       uint BindlessResource_View_SkyIrradianceEnvironmentMap;; Offset: 4952
;       uint PrePadding_View_4956;                    ; Offset: 4956
;       uint BindlessResource_View_TransmittanceLutTexture;; Offset: 4960
;       uint PrePadding_View_4964;                    ; Offset: 4964
;       uint BindlessSampler_View_TransmittanceLutTextureSampler;; Offset: 4968
;       uint PrePadding_View_4972;                    ; Offset: 4972
;       uint BindlessResource_View_SkyViewLutTexture; ; Offset: 4976
;       uint PrePadding_View_4980;                    ; Offset: 4980
;       uint BindlessSampler_View_SkyViewLutTextureSampler;; Offset: 4984
;       uint PrePadding_View_4988;                    ; Offset: 4988
;       uint BindlessResource_View_DistantSkyLightLutTexture;; Offset: 4992
;       uint PrePadding_View_4996;                    ; Offset: 4996
;       uint BindlessSampler_View_DistantSkyLightLutTextureSampler;; Offset: 5000
;       uint PrePadding_View_5004;                    ; Offset: 5004
;       uint BindlessResource_View_CameraAerialPerspectiveVolume;; Offset: 5008
;       uint PrePadding_View_5012;                    ; Offset: 5012
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeSampler;; Offset: 5016
;       uint PrePadding_View_5020;                    ; Offset: 5020
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeMieOnly;; Offset: 5024
;       uint PrePadding_View_5028;                    ; Offset: 5028
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeMieOnlySampler;; Offset: 5032
;       uint PrePadding_View_5036;                    ; Offset: 5036
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeRayOnly;; Offset: 5040
;       uint PrePadding_View_5044;                    ; Offset: 5044
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeRayOnlySampler;; Offset: 5048
;       uint PrePadding_View_5052;                    ; Offset: 5052
;       uint BindlessResource_View_HairScatteringLUTTexture;; Offset: 5056
;       uint PrePadding_View_5060;                    ; Offset: 5060
;       uint BindlessSampler_View_HairScatteringLUTSampler;; Offset: 5064
;       uint PrePadding_View_5068;                    ; Offset: 5068
;       uint BindlessResource_View_LTCMatTexture;     ; Offset: 5072
;       uint PrePadding_View_5076;                    ; Offset: 5076
;       uint BindlessSampler_View_LTCMatSampler;      ; Offset: 5080
;       uint PrePadding_View_5084;                    ; Offset: 5084
;       uint BindlessResource_View_LTCAmpTexture;     ; Offset: 5088
;       uint PrePadding_View_5092;                    ; Offset: 5092
;       uint BindlessSampler_View_LTCAmpSampler;      ; Offset: 5096
;       uint PrePadding_View_5100;                    ; Offset: 5100
;       uint View_bShadingEnergyConservation;         ; Offset: 5104
;       uint View_bShadingEnergyPreservation;         ; Offset: 5108
;       uint BindlessResource_View_ShadingEnergyGGXSpecTexture;; Offset: 5112
;       uint PrePadding_View_5116;                    ; Offset: 5116
;       uint BindlessResource_View_ShadingEnergyGGXGlassTexture;; Offset: 5120
;       uint PrePadding_View_5124;                    ; Offset: 5124
;       uint BindlessResource_View_ShadingEnergyClothSpecTexture;; Offset: 5128
;       uint PrePadding_View_5132;                    ; Offset: 5132
;       uint BindlessResource_View_ShadingEnergyDiffuseTexture;; Offset: 5136
;       uint PrePadding_View_5140;                    ; Offset: 5140
;       uint BindlessSampler_View_ShadingEnergySampler;; Offset: 5144
;       uint PrePadding_View_5148;                    ; Offset: 5148
;       uint BindlessResource_View_SSProfilesTexture; ; Offset: 5152
;       uint PrePadding_View_5156;                    ; Offset: 5156
;       uint BindlessSampler_View_SSProfilesSampler;  ; Offset: 5160
;       uint PrePadding_View_5164;                    ; Offset: 5164
;       uint BindlessSampler_View_SSProfilesTransmissionSampler;; Offset: 5168
;       uint PrePadding_View_5172;                    ; Offset: 5172
;       uint BindlessResource_View_SSProfilesPreIntegratedTexture;; Offset: 5176
;       uint PrePadding_View_5180;                    ; Offset: 5180
;       uint BindlessSampler_View_SSProfilesPreIntegratedSampler;; Offset: 5184
;       uint PrePadding_View_5188;                    ; Offset: 5188
;       uint BindlessResource_View_WaterIndirection;  ; Offset: 5192
;       uint PrePadding_View_5196;                    ; Offset: 5196
;       uint BindlessResource_View_WaterData;         ; Offset: 5200
;       uint PrePadding_View_5204;                    ; Offset: 5204
;       uint PrePadding_View_5208;                    ; Offset: 5208
;       uint PrePadding_View_5212;                    ; Offset: 5212
;       float4 View_RectLightAtlasSizeAndInvSize;     ; Offset: 5216
;       float View_RectLightAtlasMaxMipLevel;         ; Offset: 5232
;       float PrePadding_View_5236;                   ; Offset: 5236
;       uint BindlessResource_View_RectLightAtlasTexture;; Offset: 5240
;       uint PrePadding_View_5244;                    ; Offset: 5244
;       uint BindlessSampler_View_RectLightAtlasSampler;; Offset: 5248
;       uint PrePadding_View_5252;                    ; Offset: 5252
;       uint PrePadding_View_5256;                    ; Offset: 5256
;       uint PrePadding_View_5260;                    ; Offset: 5260
;       float4 View_IESAtlasSizeAndInvSize;           ; Offset: 5264
;       uint BindlessResource_View_IESAtlasTexture;   ; Offset: 5280
;       uint PrePadding_View_5284;                    ; Offset: 5284
;       uint BindlessSampler_View_IESAtlasSampler;    ; Offset: 5288
;       uint PrePadding_View_5292;                    ; Offset: 5292
;       uint BindlessSampler_View_LandscapeWeightmapSampler;; Offset: 5296
;       uint PrePadding_View_5300;                    ; Offset: 5300
;       uint BindlessResource_View_LandscapeIndirection;; Offset: 5304
;       uint PrePadding_View_5308;                    ; Offset: 5308
;       uint BindlessResource_View_LandscapePerComponentData;; Offset: 5312
;       uint PrePadding_View_5316;                    ; Offset: 5316
;       uint BindlessResource_View_VTFeedbackBuffer;  ; Offset: 5320
;       uint PrePadding_View_5324;                    ; Offset: 5324
;       uint BindlessResource_View_EditorVisualizeLevelInstanceIds;; Offset: 5328
;       uint PrePadding_View_5332;                    ; Offset: 5332
;       uint BindlessResource_View_EditorSelectedHitProxyIds;; Offset: 5336
;       uint PrePadding_View_5340;                    ; Offset: 5340
;       uint BindlessResource_View_PhysicsFieldClipmapBuffer;; Offset: 5344
;       uint PrePadding_View_5348;                    ; Offset: 5348
;       uint PrePadding_View_5352;                    ; Offset: 5352
;       uint PrePadding_View_5356;                    ; Offset: 5356
;       float3 View_TLASRelativePreViewTranslation;   ; Offset: 5360
;       float PrePadding_View_5372;                   ; Offset: 5372
;       float3 View_TLASViewTilePosition;             ; Offset: 5376
;   
;   } UniformBufferConstants_View;                    ; Offset:    0 Size:  5388
;
; }
;
; cbuffer UniformBufferConstants_LandscapeContinuousLODParameters
; {
;
;   struct UniformBufferConstants_LandscapeContinuousLODParameters
;   {
;
;       int LandscapeContinuousLODParameters_LandscapeIndex;; Offset:    0
;       int PrePadding_LandscapeContinuousLODParameters_4;; Offset:    4
;       int2 LandscapeContinuousLODParameters_Min;    ; Offset:    8
;       int2 LandscapeContinuousLODParameters_Size;   ; Offset:   16
;       uint BindlessResource_LandscapeContinuousLODParameters_SectionLODBias;; Offset:   24
;   
;   } UniformBufferConstants_LandscapeContinuousLODParameters;; Offset:    0 Size:    28
;
; }
;
; cbuffer UniformBufferConstants_LandscapeParameters
; {
;
;   struct hostlayout.UniformBufferConstants_LandscapeParameters
;   {
;
;       int LandscapeParameters_ComponentBaseX;       ; Offset:    0
;       int LandscapeParameters_ComponentBaseY;       ; Offset:    4
;       int LandscapeParameters_SubsectionSizeVerts;  ; Offset:    8
;       int LandscapeParameters_NumSubsections;       ; Offset:   12
;       int LandscapeParameters_LastLOD;              ; Offset:   16
;       uint LandscapeParameters_VirtualTexturePerPixelHeight;; Offset:   20
;       uint PrePadding_LandscapeParameters_24;       ; Offset:   24
;       uint PrePadding_LandscapeParameters_28;       ; Offset:   28
;       float4 LandscapeParameters_HeightmapTextureSize;; Offset:   32
;       float4 LandscapeParameters_HeightmapUVScaleBias;; Offset:   48
;       float4 LandscapeParameters_WeightmapUVScaleBias;; Offset:   64
;       float4 LandscapeParameters_LandscapeLightmapScaleBias;; Offset:   80
;       float4 LandscapeParameters_SubsectionSizeVertsLayerUVPan;; Offset:   96
;       float4 LandscapeParameters_SubsectionOffsetParams;; Offset:  112
;       float4 LandscapeParameters_LightmapSubsectionOffsetParams;; Offset:  128
;       row_major float4x4 LandscapeParameters_LocalToWorldNoScaling;; Offset:  144
;       uint BindlessResource_LandscapeParameters_HeightmapTexture;; Offset:  208
;       uint PrePadding_LandscapeParameters_212;      ; Offset:  212
;       uint BindlessSampler_LandscapeParameters_HeightmapTextureSampler;; Offset:  216
;       uint PrePadding_LandscapeParameters_220;      ; Offset:  220
;       uint BindlessResource_LandscapeParameters_NormalmapTexture;; Offset:  224
;       uint PrePadding_LandscapeParameters_228;      ; Offset:  228
;       uint BindlessSampler_LandscapeParameters_NormalmapTextureSampler;; Offset:  232
;       uint PrePadding_LandscapeParameters_236;      ; Offset:  236
;       uint BindlessResource_LandscapeParameters_XYOffsetmapTexture;; Offset:  240
;       uint PrePadding_LandscapeParameters_244;      ; Offset:  244
;       uint BindlessSampler_LandscapeParameters_XYOffsetmapTextureSampler;; Offset:  248
;   
;   } UniformBufferConstants_LandscapeParameters;     ; Offset:    0 Size:   252
;
; }
;
; Resource bind info for View_PrimitiveSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for View_InstanceSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for View_LightmapSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for InstanceCulling_InstanceIdsBuffer
; {
;
;   uint $Element;                                    ; Offset:    0 Size:     4
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; UniformBufferConstants_View       cbuffer      NA          NA     CB0            cb0     1
; UniformBufferConstants_LandscapeContinuousLODParameters   cbuffer      NA          NA     CB1            cb1     1
; UniformBufferConstants_LandscapeParameters   cbuffer      NA          NA     CB2            cb2     1
; LandscapeParameters_HeightmapTextureSampler   sampler      NA          NA      S0             s0     1
; LandscapeParameters_XYOffsetmapTextureSampler   sampler      NA          NA      S1             s1     1
; View_PrimitiveSceneData           texture  struct         r/o      T0             t0     1
; View_InstanceSceneData            texture  struct         r/o      T1             t1     1
; View_LightmapSceneData            texture  struct         r/o      T2             t2     1
; View_LandscapeIndirection         texture     u32         buf      T3             t3     1
; View_LandscapePerComponentData    texture     f32         buf      T4             t4     1
; InstanceCulling_InstanceIdsBuffer   texture  struct         r/o      T5             t5     1
; LandscapeContinuousLODParameters_SectionLODBias   texture     f32         buf      T6             t6     1
; LandscapeParameters_HeightmapTexture   texture     f32          2d      T7             t7     1
; LandscapeParameters_XYOffsetmapTexture   texture     f32          2d      T8             t8     1
;
;
; ViewId state:
;
; Number of inputs: 9, outputs: 32
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 0, 1, 2, 3 }
;   output 1 depends on inputs: { 0, 1, 2, 3 }
;   output 2 depends on inputs: { 0, 1, 2, 3, 4, 8 }
;   output 3 depends on inputs: { 0, 1, 2, 3, 4, 8 }
;   output 4 depends on inputs: { 0, 1, 2, 3 }
;   output 5 depends on inputs: { 0, 1, 2, 3 }
;   output 6 depends on inputs: { 0, 1, 2, 3 }
;   output 7 depends on inputs: { 0, 1, 2, 3 }
;   output 16 depends on inputs: { 4, 8 }
;   output 20 depends on inputs: { 0, 1, 2, 3, 4, 8 }
;   output 21 depends on inputs: { 0, 1, 2, 3, 4, 8 }
;   output 22 depends on inputs: { 0, 1, 2, 3, 4, 8 }
;   output 24 depends on inputs: { 0, 1, 2, 3, 4, 8 }
;   output 25 depends on inputs: { 0, 1, 2, 3, 4, 8 }
;   output 26 depends on inputs: { 0, 1, 2, 3, 4, 8 }
;   output 27 depends on inputs: { 0, 1, 2, 3, 4, 8 }
;   output 28 depends on inputs: { 0, 1, 2, 3, 4, 8 }
;   output 29 depends on inputs: { 0, 1, 2, 3, 4, 8 }
;   output 30 depends on inputs: { 0, 1, 2, 3, 4, 8 }
;   output 31 depends on inputs: { 0, 1, 2, 3, 4, 8 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%"class.StructuredBuffer<vector<float, 4> >" = type { <4 x float> }
%"class.Buffer<unsigned int>" = type { i32 }
%"class.Buffer<float>" = type { float }
%"class.StructuredBuffer<unsigned int>" = type { i32 }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%hostlayout.UniformBufferConstants_View = type { [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <4 x float>, <4 x float>, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <4 x float>, <4 x float>, <2 x float>, <2 x float>, <4 x float>, <4 x float>, <4 x i32>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, <2 x float>, i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i32, float, float, float, float, <4 x float>, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <4 x float>, float, float, float, float, float, float, float, float, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <3 x float>, float, <4 x float>, [4 x <4 x float>], <4 x float>, float, float, float, float, <4 x float>, float, float, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, <4 x float>, float, float, float, float, <4 x float>, [8 x <4 x float>], float, float, float, float, i32, float, float, float, <3 x float>, i32, [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], float, float, i32, i32, <3 x float>, float, <3 x float>, float, float, float, i32, float, float, float, float, float, <2 x i32>, float, float, <3 x float>, float, <3 x float>, float, <2 x float>, <2 x float>, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, float, float, float, float, [2 x <4 x float>], float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <2 x float>, float, float, <4 x float>, float, i32, float, float, <4 x float>, i32, i32, i32, float, <4 x float>, <4 x float>, <3 x float>, float, i32, i32, i32, i32, [32 x <4 x i32>], i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, float, float, i32, i32, i32, i32, i32, i32, <4 x float>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <3 x float>, float, <3 x float> }
%UniformBufferConstants_LandscapeContinuousLODParameters = type { i32, i32, <2 x i32>, <2 x i32>, i32 }
%hostlayout.UniformBufferConstants_LandscapeParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, [4 x <4 x float>], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.SamplerState = type { i32 }

@NeighborOffset.i.i.i.0.hca = internal unnamed_addr constant [4 x i32] [i32 0, i32 -1, i32 1, i32 0]
@NeighborOffset.i.i.i.1.hca = internal unnamed_addr constant [4 x i32] [i32 -1, i32 0, i32 0, i32 1]

define void @Main() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 8, i32 8, i32 0, i8 0 }, i32 8, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 7, i32 7, i32 0, i8 0 }, i32 7, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 6, i32 6, i32 0, i8 0 }, i32 6, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 5, i32 5, i32 0, i8 0 }, i32 5, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 4, i32 4, i32 0, i8 0 }, i32 4, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %6 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 3, i32 3, i32 0, i8 0 }, i32 3, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %7 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 0 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %8 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 0 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %9 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind zeroinitializer, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %10 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 3 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %11 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 3 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %12 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 2 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %13 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 2 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %14 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %15 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %12, %dx.types.ResourceProperties { i32 13, i32 252 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %16 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %13, %dx.types.ResourceProperties { i32 13, i32 28 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %17 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %14, %dx.types.ResourceProperties { i32 13, i32 5388 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %18 = call i32 @dx.op.loadInput.i32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %19 = call i32 @dx.op.loadInput.i32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %20 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef), !dx.precise !34  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %21 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef), !dx.precise !34  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %22 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef), !dx.precise !34  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %23 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 3, i32 undef), !dx.precise !34  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %24 = alloca [4 x float], align 4
  %25 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %26 = extractvalue %dx.types.CBufRet.f32 %25, 0
  %27 = extractvalue %dx.types.CBufRet.f32 %25, 1
  %28 = extractvalue %dx.types.CBufRet.f32 %25, 2
  %29 = extractvalue %dx.types.CBufRet.f32 %25, 3
  %30 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %31 = extractvalue %dx.types.CBufRet.f32 %30, 0
  %32 = extractvalue %dx.types.CBufRet.f32 %30, 1
  %33 = extractvalue %dx.types.CBufRet.f32 %30, 2
  %34 = extractvalue %dx.types.CBufRet.f32 %30, 3
  %35 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %36 = extractvalue %dx.types.CBufRet.f32 %35, 0
  %37 = extractvalue %dx.types.CBufRet.f32 %35, 1
  %38 = extractvalue %dx.types.CBufRet.f32 %35, 2
  %39 = extractvalue %dx.types.CBufRet.f32 %35, 3
  %40 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %41 = extractvalue %dx.types.CBufRet.f32 %40, 0
  %42 = extractvalue %dx.types.CBufRet.f32 %40, 1
  %43 = extractvalue %dx.types.CBufRet.f32 %40, 2
  %44 = extractvalue %dx.types.CBufRet.f32 %40, 3
  %45 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 64)  ; CBufferLoadLegacy(handle,regIndex)
  %46 = extractvalue %dx.types.CBufRet.f32 %45, 0
  %47 = extractvalue %dx.types.CBufRet.f32 %45, 1
  %48 = extractvalue %dx.types.CBufRet.f32 %45, 2
  %49 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 76)  ; CBufferLoadLegacy(handle,regIndex)
  %50 = extractvalue %dx.types.CBufRet.f32 %49, 0
  %51 = extractvalue %dx.types.CBufRet.f32 %49, 1
  %52 = extractvalue %dx.types.CBufRet.f32 %49, 2
  %53 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 85)  ; CBufferLoadLegacy(handle,regIndex)
  %54 = extractvalue %dx.types.CBufRet.f32 %53, 0
  %55 = extractvalue %dx.types.CBufRet.f32 %53, 1
  %56 = extractvalue %dx.types.CBufRet.f32 %53, 2
  %57 = extractvalue %dx.types.CBufRet.f32 %53, 3
  %58 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 86)  ; CBufferLoadLegacy(handle,regIndex)
  %59 = extractvalue %dx.types.CBufRet.f32 %58, 0
  %60 = extractvalue %dx.types.CBufRet.f32 %58, 1
  %61 = extractvalue %dx.types.CBufRet.f32 %58, 2
  %62 = extractvalue %dx.types.CBufRet.f32 %58, 3
  %63 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 87)  ; CBufferLoadLegacy(handle,regIndex)
  %64 = extractvalue %dx.types.CBufRet.f32 %63, 0
  %65 = extractvalue %dx.types.CBufRet.f32 %63, 1
  %66 = extractvalue %dx.types.CBufRet.f32 %63, 2
  %67 = extractvalue %dx.types.CBufRet.f32 %63, 3
  %68 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 88)  ; CBufferLoadLegacy(handle,regIndex)
  %69 = extractvalue %dx.types.CBufRet.f32 %68, 0
  %70 = extractvalue %dx.types.CBufRet.f32 %68, 1
  %71 = extractvalue %dx.types.CBufRet.f32 %68, 2
  %72 = extractvalue %dx.types.CBufRet.f32 %68, 3
  %73 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 108)  ; CBufferLoadLegacy(handle,regIndex)
  %74 = extractvalue %dx.types.CBufRet.f32 %73, 0
  %75 = extractvalue %dx.types.CBufRet.f32 %73, 1
  %76 = extractvalue %dx.types.CBufRet.f32 %73, 2
  %77 = icmp slt i32 %19, 0
  br i1 %77, label %78, label %86

; <label>:78                                      ; preds = %0
  %79 = and i32 %19, 2147483647
  %80 = mul i32 %79, 41
  %81 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %9, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %82 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %81, i32 %80, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %83 = extractvalue %dx.types.ResRet.f32 %82, 1
  %84 = bitcast float %83 to i32
  %85 = add i32 %84, %18
  br label %92

; <label>:86                                      ; preds = %0
  %87 = add i32 %19, %18
  %88 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %4, %dx.types.ResourceProperties { i32 12, i32 4 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=4>
  %89 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %88, i32 %87, i32 0, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %90 = extractvalue %dx.types.ResRet.i32 %89, 0
  %91 = and i32 %90, 268435455
  br label %92

; <label>:92                                      ; preds = %86, %78
  %93 = phi i32 [ %85, %78 ], [ %91, %86 ]
  %94 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 284)  ; CBufferLoadLegacy(handle,regIndex)
  %95 = extractvalue %dx.types.CBufRet.i32 %94, 0
  %96 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %8, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %97 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %96, i32 %93, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %98 = extractvalue %dx.types.ResRet.f32 %97, 0
  %99 = bitcast float %98 to i32
  %100 = and i32 %99, 1048575
  %101 = icmp eq i32 %100, 1048575
  %102 = mul nuw nsw i32 %100, 41
  br i1 %101, label %211, label %103, !dx.controlflow.hints !54

; <label>:103                                     ; preds = %92
  %104 = add nuw nsw i32 %102, 1
  %105 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %9, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %106 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %105, i32 %104, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %107 = extractvalue %dx.types.ResRet.f32 %106, 0
  %108 = extractvalue %dx.types.ResRet.f32 %106, 1
  %109 = extractvalue %dx.types.ResRet.f32 %106, 2
  %110 = add i32 %95, %93
  %111 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %96, i32 %110, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %112 = extractvalue %dx.types.ResRet.f32 %111, 0
  %113 = extractvalue %dx.types.ResRet.f32 %111, 1
  %114 = extractvalue %dx.types.ResRet.f32 %111, 2
  %115 = extractvalue %dx.types.ResRet.f32 %111, 3
  %116 = bitcast float %112 to i32
  %117 = bitcast float %113 to i32
  %118 = bitcast float %114 to i32
  %119 = bitcast float %115 to i32
  %120 = shl i32 %95, 1
  %121 = add i32 %120, %93
  %122 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %96, i32 %121, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %123 = extractvalue %dx.types.ResRet.f32 %122, 0
  %124 = extractvalue %dx.types.ResRet.f32 %122, 1
  %125 = extractvalue %dx.types.ResRet.f32 %122, 2
  %126 = and i32 %116, 65535
  %127 = uitofp i32 %126 to float
  %128 = lshr i32 %116, 16
  %129 = uitofp i32 %128 to float
  %130 = and i32 %117, 32767
  %131 = uitofp i32 %130 to float
  %132 = fadd float %127, -3.276800e+04
  %133 = fadd float %129, -3.276800e+04
  %134 = fmul float %132, 0x3F00002000000000
  %135 = fmul float %133, 0x3F00002000000000
  %136 = fadd float %131, -1.638400e+04
  %137 = fmul float %136, 0x3F06A0F8E0000000
  %138 = and i32 %117, 32768
  %139 = icmp ne i32 %138, 0
  %140 = fadd float %134, %135
  %141 = fsub float %134, %135
  %142 = call float @dx.op.unary.f32(i32 6, float %140), !dx.precise !34  ; FAbs(value)
  %143 = call float @dx.op.unary.f32(i32 6, float %141), !dx.precise !34  ; FAbs(value)
  %144 = call float @dx.op.dot2.f32(i32 54, float 1.000000e+00, float 1.000000e+00, float %142, float %143), !dx.precise !34  ; Dot2(ax,ay,bx,by)
  %145 = fsub float 2.000000e+00, %144
  %146 = call float @dx.op.dot3.f32(i32 55, float %140, float %141, float %145, float %140, float %141, float %145), !dx.precise !34  ; Dot3(ax,ay,az,bx,by,bz)
  %147 = call float @dx.op.unary.f32(i32 25, float %146), !dx.precise !34  ; Rsqrt(value)
  %148 = fmul float %140, %147
  %149 = fmul float %141, %147
  %150 = fmul float %145, %147
  %151 = fadd float %150, 1.000000e+00
  %152 = fdiv float 1.000000e+00, %151
  %153 = fmul float %148, %149
  %154 = fmul float %152, %153
  %155 = fsub float -0.000000e+00, %154
  %156 = fmul float %148, %148
  %157 = fmul float %152, %156
  %158 = fsub float 1.000000e+00, %157
  %159 = fmul float %149, %149
  %160 = fmul float %152, %159
  %161 = fsub float 1.000000e+00, %160
  %162 = fmul float %137, %137
  %163 = fsub float 1.000000e+00, %162
  %164 = call float @dx.op.unary.f32(i32 24, float %163), !dx.precise !34  ; Sqrt(value)
  %165 = select i1 %139, float %137, float %164
  %166 = select i1 %139, float %164, float %137
  %167 = fmul float %165, %158
  %168 = fmul float %165, %155
  %169 = fmul float %148, %165
  %170 = fmul float %166, %155
  %171 = fmul float %166, %161
  %172 = fmul float %149, %166
  %173 = fsub float -0.000000e+00, %172
  %174 = fadd float %170, %167
  %175 = fadd float %168, %171
  %176 = fsub float %173, %169
  %177 = fmul float %149, %176
  %178 = fmul float %150, %175
  %179 = fsub float %177, %178
  %180 = fmul float %150, %174
  %181 = fmul float %148, %176
  %182 = fsub float %180, %181
  %183 = fmul float %148, %175
  %184 = fmul float %149, %174
  %185 = fsub float %183, %184
  %186 = lshr i32 %119, 16
  %187 = shl i32 %186, 23
  %188 = add i32 %187, -125829120
  %189 = bitcast i32 %188 to float
  %190 = lshr i32 %118, 16
  %191 = and i32 %118, 65535
  %192 = and i32 %119, 65535
  %193 = uitofp i32 %191 to float
  %194 = uitofp i32 %190 to float
  %195 = uitofp i32 %192 to float
  %196 = fadd float %193, -3.276800e+04
  %197 = fadd float %194, -3.276800e+04
  %198 = fadd float %195, -3.276800e+04
  %199 = fmul float %196, %189
  %200 = fmul float %197, %189
  %201 = fmul float %198, %189
  %202 = fmul float %199, %174
  %203 = fmul float %199, %175
  %204 = fmul float %199, %176
  %205 = fmul float %200, %179
  %206 = fmul float %200, %182
  %207 = fmul float %200, %185
  %208 = fmul float %201, %148
  %209 = fmul float %201, %149
  %210 = fmul float %201, %150
  br label %211

; <label>:211                                     ; preds = %103, %92
  %212 = phi float [ %107, %103 ], [ 0.000000e+00, %92 ]
  %213 = phi float [ %108, %103 ], [ 0.000000e+00, %92 ]
  %214 = phi float [ %109, %103 ], [ 0.000000e+00, %92 ]
  %215 = phi float [ %202, %103 ], [ 0.000000e+00, %92 ]
  %216 = phi float [ %203, %103 ], [ 0.000000e+00, %92 ]
  %217 = phi float [ %204, %103 ], [ 0.000000e+00, %92 ]
  %218 = phi float [ %205, %103 ], [ 0.000000e+00, %92 ]
  %219 = phi float [ %206, %103 ], [ 0.000000e+00, %92 ]
  %220 = phi float [ %207, %103 ], [ 0.000000e+00, %92 ]
  %221 = phi float [ %208, %103 ], [ 0.000000e+00, %92 ]
  %222 = phi float [ %209, %103 ], [ 0.000000e+00, %92 ]
  %223 = phi float [ %210, %103 ], [ 0.000000e+00, %92 ]
  %224 = phi float [ %123, %103 ], [ 0.000000e+00, %92 ]
  %225 = phi float [ %124, %103 ], [ 0.000000e+00, %92 ]
  %226 = phi float [ %125, %103 ], [ 0.000000e+00, %92 ]
  %227 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %9, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %228 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %227, i32 %102, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %229 = extractvalue %dx.types.ResRet.f32 %228, 0
  %230 = add nuw nsw i32 %102, 20
  %231 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %227, i32 %230, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %232 = extractvalue %dx.types.ResRet.f32 %231, 3
  %233 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %15, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %234 = extractvalue %dx.types.CBufRet.i32 %233, 1
  %235 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %16, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %236 = extractvalue %dx.types.CBufRet.i32 %235, 3
  %237 = sub nsw i32 %234, %236
  %238 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %16, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %239 = extractvalue %dx.types.CBufRet.i32 %238, 0
  %240 = mul nsw i32 %237, %239
  %241 = extractvalue %dx.types.CBufRet.i32 %233, 0
  %242 = extractvalue %dx.types.CBufRet.i32 %235, 2
  %243 = sub nsw i32 %241, %242
  %244 = add nsw i32 %243, %240
  %245 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %15, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %246 = extractvalue %dx.types.CBufRet.i32 %245, 0
  %247 = sitofp i32 %246 to float
  %248 = extractvalue %dx.types.CBufRet.i32 %235, 0
  %249 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %6, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %250 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %249, i32 %248, i32 undef)  ; BufferLoad(srv,index,wot)
  %251 = extractvalue %dx.types.ResRet.i32 %250, 0
  %252 = add i32 %251, %244
  %253 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 245)  ; CBufferLoadLegacy(handle,regIndex)
  %254 = extractvalue %dx.types.CBufRet.f32 %253, 0
  %255 = fcmp oge float %254, 0.000000e+00
  %256 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %5, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %257 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %256, i32 %252, i32 undef)  ; BufferLoad(srv,index,wot)
  %258 = extractvalue %dx.types.ResRet.f32 %257, 0
  %259 = select i1 %255, float %254, float %258
  %260 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 245)  ; CBufferLoadLegacy(handle,regIndex)
  %261 = extractvalue %dx.types.CBufRet.i32 %260, 1
  %262 = sitofp i32 %261 to float
  %263 = fadd float %259, %262
  %264 = call float @dx.op.binary.f32(i32 36, float %263, float %247), !dx.precise !34  ; FMin(a,b)
  %265 = call float @dx.op.unary.f32(i32 27, float %264), !dx.precise !34  ; Round_ni(value)
  %266 = fptoui float %265 to i32
  %267 = extractvalue %dx.types.CBufRet.i32 %233, 2
  %268 = and i32 %266, 31
  %269 = ashr i32 %267, %268
  %270 = add nsw i32 %269, -1
  %271 = sitofp i32 %270 to float
  %272 = fdiv float 1.000000e+00, %271
  %273 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %274 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %273, i32 %244, i32 undef)  ; BufferLoad(srv,index,wot)
  %275 = fmul float %20, %272
  %276 = fmul float %21, %272
  %277 = fadd float %22, %275
  %278 = fadd float %23, %276
  %279 = extractvalue %dx.types.CBufRet.i32 %233, 3
  %280 = sitofp i32 %279 to float
  %281 = fdiv float %277, %280
  %282 = fdiv float %278, %280
  %283 = fsub float 1.000000e+00, %281
  %284 = fmul float %282, 2.000000e+00
  %285 = fmul float %283, 2.000000e+00
  %286 = fmul float %284, %264
  %287 = fmul float %285, %264
  %288 = fsub float 1.000000e+00, %284
  %289 = fsub float 1.000000e+00, %285
  br label %290

; <label>:290                                     ; preds = %348, %211
  %291 = phi i32 [ -1, %211 ], [ %352, %348 ]
  %292 = phi i32 [ 0, %211 ], [ %350, %348 ]
  %293 = phi i32 [ 0, %211 ], [ %346, %348 ]
  %294 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %15, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %295 = extractvalue %dx.types.CBufRet.i32 %294, 0
  %296 = extractvalue %dx.types.CBufRet.i32 %294, 1
  %297 = add i32 %295, %292
  %298 = add i32 %296, %291
  %299 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %16, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %300 = extractvalue %dx.types.CBufRet.i32 %299, 2
  %301 = extractvalue %dx.types.CBufRet.i32 %299, 3
  %302 = call i32 @dx.op.binary.i32(i32 37, i32 %300, i32 %297)  ; IMax(a,b)
  %303 = call i32 @dx.op.binary.i32(i32 37, i32 %301, i32 %298)  ; IMax(a,b)
  %304 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %16, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %305 = extractvalue %dx.types.CBufRet.i32 %304, 0
  %306 = extractvalue %dx.types.CBufRet.i32 %304, 1
  %307 = add i32 %300, -1
  %308 = add i32 %307, %305
  %309 = add i32 %301, -1
  %310 = add i32 %309, %306
  %311 = call i32 @dx.op.binary.i32(i32 38, i32 %308, i32 %302)  ; IMin(a,b)
  %312 = call i32 @dx.op.binary.i32(i32 38, i32 %310, i32 %303)  ; IMin(a,b)
  %313 = sub nsw i32 %312, %301
  %314 = mul nsw i32 %313, %305
  %315 = sub i32 %311, %300
  %316 = add nsw i32 %315, %314
  %317 = extractvalue %dx.types.CBufRet.i32 %299, 0
  %318 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %6, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %319 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %318, i32 %317, i32 undef)  ; BufferLoad(srv,index,wot)
  %320 = extractvalue %dx.types.ResRet.i32 %319, 0
  %321 = add i32 %316, %320
  %322 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 245)  ; CBufferLoadLegacy(handle,regIndex)
  %323 = extractvalue %dx.types.CBufRet.f32 %322, 0
  %324 = fcmp oge float %323, 0.000000e+00
  %325 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %5, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %326 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %325, i32 %321, i32 undef)  ; BufferLoad(srv,index,wot)
  %327 = extractvalue %dx.types.ResRet.f32 %326, 0
  %328 = select i1 %324, float %323, float %327
  %329 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %15, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %330 = extractvalue %dx.types.CBufRet.i32 %329, 0
  %331 = sitofp i32 %330 to float
  %332 = add i32 %320, %244
  %333 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %325, i32 %332, i32 undef)  ; BufferLoad(srv,index,wot)
  %334 = extractvalue %dx.types.ResRet.f32 %333, 0
  %335 = select i1 %324, float %323, float %334
  %336 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 245)  ; CBufferLoadLegacy(handle,regIndex)
  %337 = extractvalue %dx.types.CBufRet.i32 %336, 1
  %338 = sitofp i32 %337 to float
  %339 = fadd float %335, %338
  %340 = call float @dx.op.binary.f32(i32 36, float %339, float %331), !dx.precise !34  ; FMin(a,b)
  %341 = call float @dx.op.binary.f32(i32 35, float %328, float %340), !dx.precise !34  ; FMax(a,b)
  %342 = getelementptr inbounds [4 x float], [4 x float]* %24, i32 0, i32 %293
  %343 = fadd float %341, %338
  %344 = select i1 %324, float %323, float %343
  %345 = call float @dx.op.binary.f32(i32 36, float %344, float %331), !dx.precise !34  ; FMin(a,b)
  store float %345, float* %342, align 4, !tbaa !55, !noalias !59
  %346 = add nuw nsw i32 %293, 1
  %347 = icmp eq i32 %346, 4
  br i1 %347, label %353, label %348

; <label>:348                                     ; preds = %290
  %349 = getelementptr [4 x i32], [4 x i32]* @NeighborOffset.i.i.i.0.hca, i32 0, i32 %346
  %350 = load i32, i32* %349, align 4
  %351 = getelementptr [4 x i32], [4 x i32]* @NeighborOffset.i.i.i.1.hca, i32 0, i32 %346
  %352 = load i32, i32* %351, align 4
  br label %290

; <label>:353                                     ; preds = %290
  %354 = bitcast float %229 to i32
  %355 = bitcast float %232 to i32
  %356 = uitofp i32 %266 to float
  %357 = extractvalue %dx.types.ResRet.f32 %274, 0
  %358 = fsub float 1.000000e+00, %282
  %359 = fmul float %281, 2.000000e+00
  %360 = fmul float %358, 2.000000e+00
  %361 = fmul float %359, %264
  %362 = fmul float %360, %264
  %363 = fsub float 1.000000e+00, %359
  %364 = fsub float 1.000000e+00, %360
  %365 = getelementptr inbounds [4 x float], [4 x float]* %24, i32 0, i32 0
  %366 = load float, float* %365, align 4, !tbaa !55, !noalias !59
  %367 = getelementptr inbounds [4 x float], [4 x float]* %24, i32 0, i32 1
  %368 = load float, float* %367, align 4, !tbaa !55, !noalias !59
  %369 = getelementptr inbounds [4 x float], [4 x float]* %24, i32 0, i32 2
  %370 = load float, float* %369, align 4, !tbaa !55, !noalias !59
  %371 = getelementptr inbounds [4 x float], [4 x float]* %24, i32 0, i32 3
  %372 = load float, float* %371, align 4, !tbaa !55, !noalias !59
  %373 = fmul float %288, %366
  %374 = fmul float %363, %368
  %375 = fmul float %289, %370
  %376 = fmul float %364, %372
  %377 = fadd float %286, %373
  %378 = fadd float %361, %374
  %379 = fadd float %287, %375
  %380 = fadd float %362, %376
  %381 = fadd float %281, %282
  %382 = fcmp ogt float %381, 1.000000e+00
  %383 = fcmp olt float %281, %282
  %384 = select i1 %383, float %380, float %379
  %385 = select i1 %383, float %378, float %377
  %386 = select i1 %382, float %384, float %385
  %387 = call float @dx.op.unary.f32(i32 27, float %386), !dx.precise !34  ; Round_ni(value)
  %388 = fsub float %386, %387
  %389 = fsub float %387, %356
  %390 = fsub float -0.000000e+00, %389
  %391 = call float @dx.op.unary.f32(i32 21, float %390), !dx.precise !34  ; Exp(value)
  %392 = fmul float %20, %391
  %393 = fmul float %21, %391
  %394 = call float @dx.op.unary.f32(i32 27, float %392), !dx.precise !34  ; Round_ni(value)
  %395 = call float @dx.op.unary.f32(i32 27, float %393), !dx.precise !34  ; Round_ni(value)
  %396 = fsub float -0.000000e+00, %387
  %397 = call float @dx.op.unary.f32(i32 21, float %396), !dx.precise !34  ; Exp(value)
  %398 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %399 = extractvalue %dx.types.CBufRet.f32 %398, 0
  %400 = fmul float %397, %399
  %401 = fadd float %400, -1.000000e+00
  %402 = fmul float %399, 5.000000e-01
  %403 = fmul float %397, %402
  %404 = call float @dx.op.binary.f32(i32 35, float %403, float 2.000000e+00), !dx.precise !34  ; FMax(a,b)
  %405 = fadd float %404, -1.000000e+00
  %406 = extractvalue %dx.types.CBufRet.f32 %398, 1
  %407 = fmul float %401, %406
  %408 = fmul float %405, %406
  %409 = fdiv float %394, %407
  %410 = fdiv float %395, %407
  %411 = fmul float %394, 5.000000e-01
  %412 = fmul float %395, 5.000000e-01
  %413 = call float @dx.op.unary.f32(i32 27, float %411), !dx.precise !34  ; Round_ni(value)
  %414 = call float @dx.op.unary.f32(i32 27, float %412), !dx.precise !34  ; Round_ni(value)
  %415 = fdiv float %413, %408
  %416 = fdiv float %414, %408
  %417 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %418 = extractvalue %dx.types.CBufRet.f32 %417, 0
  %419 = extractvalue %dx.types.CBufRet.f32 %417, 1
  %420 = fmul float %409, %418
  %421 = fmul float %410, %419
  %422 = extractvalue %dx.types.CBufRet.f32 %417, 2
  %423 = extractvalue %dx.types.CBufRet.f32 %417, 3
  %424 = fadd float %420, %422
  %425 = fadd float %421, %423
  %426 = fmul float %418, 5.000000e-01
  %427 = fmul float %419, 5.000000e-01
  %428 = fadd float %424, %426
  %429 = fadd float %425, %427
  %430 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %431 = extractvalue %dx.types.CBufRet.f32 %430, 0
  %432 = extractvalue %dx.types.CBufRet.f32 %430, 1
  %433 = fmul float %22, %431
  %434 = fmul float %23, %432
  %435 = fadd float %428, %433
  %436 = fadd float %429, %434
  %437 = fsub float %387, %357
  %438 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %439 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %11, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %440 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %438, %dx.types.Handle %439, float %435, float %436, float undef, float undef, i32 0, i32 0, i32 undef, float %437)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %441 = extractvalue %dx.types.ResRet.f32 %440, 0
  %442 = extractvalue %dx.types.ResRet.f32 %440, 1
  %443 = fmul float %441, 2.550000e+02
  %444 = fmul float %443, 2.560000e+02
  %445 = fmul float %442, 2.550000e+02
  %446 = fadd float %445, %444
  %447 = fadd float %446, -3.276800e+04
  %448 = fmul float %447, 7.812500e-03
  %449 = fmul float %415, %418
  %450 = fmul float %416, %419
  %451 = fadd float %449, %422
  %452 = fadd float %450, %423
  %453 = fadd float %451, %426
  %454 = fadd float %452, %427
  %455 = fadd float %453, %433
  %456 = fadd float %454, %434
  %457 = fadd float %387, 1.000000e+00
  %458 = fsub float %457, %357
  %459 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %438, %dx.types.Handle %439, float %455, float %456, float undef, float undef, i32 0, i32 0, i32 undef, float %458)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %460 = extractvalue %dx.types.ResRet.f32 %459, 0
  %461 = extractvalue %dx.types.ResRet.f32 %459, 1
  %462 = fmul float %460, 2.550000e+02
  %463 = fmul float %462, 2.560000e+02
  %464 = fmul float %461, 2.550000e+02
  %465 = fadd float %464, %463
  %466 = fadd float %465, -3.276800e+04
  %467 = fmul float %466, 7.812500e-03
  %468 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %469 = extractvalue %dx.types.CBufRet.f32 %468, 0
  %470 = extractvalue %dx.types.CBufRet.f32 %468, 1
  %471 = fmul float %409, %469
  %472 = fmul float %410, %470
  %473 = extractvalue %dx.types.CBufRet.f32 %468, 2
  %474 = extractvalue %dx.types.CBufRet.f32 %468, 3
  %475 = fadd float %471, %473
  %476 = fadd float %472, %474
  %477 = extractvalue %dx.types.CBufRet.f32 %430, 2
  %478 = fmul float %22, %477
  %479 = fmul float %23, %477
  %480 = fadd float %475, %478
  %481 = fadd float %476, %479
  %482 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %483 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %10, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %484 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %482, %dx.types.Handle %483, float %480, float %481, float undef, float undef, i32 0, i32 0, i32 undef, float %387)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %485 = extractvalue %dx.types.ResRet.f32 %484, 0
  %486 = extractvalue %dx.types.ResRet.f32 %484, 1
  %487 = extractvalue %dx.types.ResRet.f32 %484, 2
  %488 = extractvalue %dx.types.ResRet.f32 %484, 3
  %489 = fmul float %415, %469
  %490 = fmul float %416, %470
  %491 = fadd float %489, %473
  %492 = fadd float %490, %474
  %493 = fadd float %491, %478
  %494 = fadd float %492, %479
  %495 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %482, %dx.types.Handle %483, float %493, float %494, float undef, float undef, i32 0, i32 0, i32 undef, float %457)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %496 = extractvalue %dx.types.ResRet.f32 %495, 0
  %497 = extractvalue %dx.types.ResRet.f32 %495, 1
  %498 = extractvalue %dx.types.ResRet.f32 %495, 2
  %499 = extractvalue %dx.types.ResRet.f32 %495, 3
  %500 = fmul float %485, 2.550000e+02
  %501 = fmul float %500, 2.560000e+02
  %502 = fmul float %486, 2.550000e+02
  %503 = fadd float %502, %501
  %504 = fadd float %503, -3.276800e+04
  %505 = fmul float %504, 3.906250e-03
  %506 = fmul float %487, 2.550000e+02
  %507 = fmul float %506, 2.560000e+02
  %508 = fmul float %488, 2.550000e+02
  %509 = fadd float %508, %507
  %510 = fadd float %509, -3.276800e+04
  %511 = fmul float %510, 3.906250e-03
  %512 = fmul float %496, 2.550000e+02
  %513 = fmul float %512, 2.560000e+02
  %514 = fmul float %497, 2.550000e+02
  %515 = fadd float %514, %513
  %516 = fadd float %515, -3.276800e+04
  %517 = fmul float %516, 3.906250e-03
  %518 = fmul float %498, 2.550000e+02
  %519 = fmul float %518, 2.560000e+02
  %520 = fmul float %499, 2.550000e+02
  %521 = fadd float %520, %519
  %522 = fadd float %521, -3.276800e+04
  %523 = fmul float %522, 3.906250e-03
  %524 = fadd float %409, %505
  %525 = fadd float %410, %511
  %526 = fadd float %415, %517
  %527 = fadd float %416, %523
  %528 = fsub float %526, %524
  %529 = fsub float %527, %525
  %530 = fsub float %467, %448
  %531 = fmul float %388, %528
  %532 = fmul float %388, %529
  %533 = fmul float %388, %530
  %534 = fadd float %524, %531
  %535 = fadd float %525, %532
  %536 = fadd float %448, %533
  %537 = extractvalue %dx.types.CBufRet.f32 %430, 3
  %538 = fmul float %22, %537
  %539 = fmul float %23, %537
  %540 = fadd float %538, %534
  %541 = fadd float %539, %535
  %542 = fadd float %536, 0.000000e+00
  %543 = fmul float %215, %540
  %544 = fmul float %216, %540
  %545 = fmul float %217, %540
  %546 = fmul float %218, %541
  %547 = fmul float %219, %541
  %548 = fmul float %220, %541
  %549 = fadd float %543, %546
  %550 = fadd float %544, %547
  %551 = fadd float %545, %548
  %552 = fmul float %221, %542
  %553 = fmul float %222, %542
  %554 = fmul float %223, %542
  %555 = fadd float %552, %549
  %556 = fadd float %553, %550
  %557 = fadd float %554, %551
  %558 = fadd float %50, %224
  %559 = fadd float %51, %225
  %560 = fadd float %52, %226
  %561 = fsub float %212, %46
  %562 = fsub float %213, %47
  %563 = fsub float %214, %48
  %564 = fmul float %561, 2.097152e+06
  %565 = fmul float %562, 2.097152e+06
  %566 = fmul float %563, 2.097152e+06
  %567 = fadd float %564, %558
  %568 = fadd float %565, %559
  %569 = fadd float %566, %560
  %570 = fadd float %567, %555
  %571 = fadd float %568, %556
  %572 = fadd float %569, %557
  %573 = extractvalue %dx.types.CBufRet.f32 %398, 2
  %574 = extractvalue %dx.types.CBufRet.f32 %398, 3
  %575 = fadd fast float %538, %573
  %576 = fadd fast float %575, %534
  %577 = fadd fast float %539, %574
  %578 = fadd fast float %577, %535
  %579 = fadd float %570, 0.000000e+00
  %580 = fadd float %571, 0.000000e+00
  %581 = fadd float %572, 0.000000e+00
  %582 = fmul float %26, %579
  %583 = call float @dx.op.tertiary.f32(i32 46, float %580, float %31, float %582), !dx.precise !34  ; FMad(a,b,c)
  %584 = call float @dx.op.tertiary.f32(i32 46, float %581, float %36, float %583), !dx.precise !34  ; FMad(a,b,c)
  %585 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %41, float %584), !dx.precise !34  ; FMad(a,b,c)
  %586 = fmul float %27, %579
  %587 = call float @dx.op.tertiary.f32(i32 46, float %580, float %32, float %586), !dx.precise !34  ; FMad(a,b,c)
  %588 = call float @dx.op.tertiary.f32(i32 46, float %581, float %37, float %587), !dx.precise !34  ; FMad(a,b,c)
  %589 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %42, float %588), !dx.precise !34  ; FMad(a,b,c)
  %590 = fmul float %28, %579
  %591 = call float @dx.op.tertiary.f32(i32 46, float %580, float %33, float %590), !dx.precise !34  ; FMad(a,b,c)
  %592 = call float @dx.op.tertiary.f32(i32 46, float %581, float %38, float %591), !dx.precise !34  ; FMad(a,b,c)
  %593 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %43, float %592), !dx.precise !34  ; FMad(a,b,c)
  %594 = fmul float %29, %579
  %595 = call float @dx.op.tertiary.f32(i32 46, float %580, float %34, float %594), !dx.precise !34  ; FMad(a,b,c)
  %596 = call float @dx.op.tertiary.f32(i32 46, float %581, float %39, float %595), !dx.precise !34  ; FMad(a,b,c)
  %597 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %44, float %596), !dx.precise !34  ; FMad(a,b,c)
  call void @dx.op.storeOutput.f32(i32 5, i32 8, i32 0, i8 0, float %585)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 8, i32 0, i8 1, float %589)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 8, i32 0, i8 2, float %593)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 8, i32 0, i8 3, float %597)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 6, i32 0, i8 0, float %570)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 6, i32 0, i8 1, float %571)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 6, i32 0, i8 2, float %572)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  %598 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %599 = extractvalue %dx.types.CBufRet.f32 %598, 0
  %600 = extractvalue %dx.types.CBufRet.f32 %598, 1
  %601 = fmul fast float %599, %534
  %602 = fmul fast float %600, %535
  %603 = extractvalue %dx.types.CBufRet.f32 %598, 2
  %604 = extractvalue %dx.types.CBufRet.f32 %598, 3
  %605 = fadd fast float %601, %603
  %606 = fadd fast float %602, %604
  %607 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %608 = extractvalue %dx.types.CBufRet.f32 %607, 2
  %609 = fmul fast float %608, %22
  %610 = fmul fast float %608, %23
  %611 = fadd fast float %605, %609
  %612 = fadd fast float %606, %610
  %613 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %614 = extractvalue %dx.types.CBufRet.f32 %613, 0
  %615 = extractvalue %dx.types.CBufRet.f32 %613, 1
  %616 = fmul fast float %614, %534
  %617 = fmul fast float %615, %535
  %618 = extractvalue %dx.types.CBufRet.f32 %613, 2
  %619 = extractvalue %dx.types.CBufRet.f32 %613, 3
  %620 = fadd fast float %616, %618
  %621 = fadd fast float %617, %619
  %622 = fmul fast float %614, 5.000000e-01
  %623 = fmul fast float %615, 5.000000e-01
  %624 = fadd fast float %620, %622
  %625 = fadd fast float %621, %623
  %626 = extractvalue %dx.types.CBufRet.f32 %607, 0
  %627 = extractvalue %dx.types.CBufRet.f32 %607, 1
  %628 = fmul fast float %626, %22
  %629 = fmul fast float %627, %23
  %630 = fadd fast float %624, %628
  %631 = fadd fast float %625, %629
  %632 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %633 = extractvalue %dx.types.CBufRet.f32 %632, 0
  %634 = extractvalue %dx.types.CBufRet.f32 %632, 1
  %635 = fmul fast float %633, %534
  %636 = fmul fast float %634, %535
  %637 = extractvalue %dx.types.CBufRet.f32 %632, 2
  %638 = extractvalue %dx.types.CBufRet.f32 %632, 3
  %639 = fadd fast float %635, %638
  %640 = fadd fast float %636, %637
  %641 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %642 = extractvalue %dx.types.CBufRet.f32 %641, 0
  %643 = extractvalue %dx.types.CBufRet.f32 %641, 1
  %644 = fmul fast float %642, %22
  %645 = fmul fast float %643, %23
  %646 = fadd fast float %639, %644
  %647 = fadd fast float %640, %645
  %648 = mul i32 %355, 15
  %649 = add i32 %648, 2
  %650 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %7, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %651 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %650, i32 %649, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %652 = extractvalue %dx.types.ResRet.f32 %651, 0
  %653 = extractvalue %dx.types.ResRet.f32 %651, 1
  %654 = fmul fast float %652, %646
  %655 = fmul fast float %653, %647
  %656 = extractvalue %dx.types.ResRet.f32 %651, 2
  %657 = extractvalue %dx.types.ResRet.f32 %651, 3
  %658 = fadd fast float %656, %654
  %659 = fadd fast float %657, %655
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %576)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %578)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %611)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %612)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %630)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float %631)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 2, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 3, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 0, float %658)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 1, float %659)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 0, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 1, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.i32(i32 5, i32 5, i32 0, i8 0, i32 %100)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  %660 = and i32 %354, 32
  %661 = icmp eq i32 %660, 0
  br i1 %661, label %709, label %662, !dx.controlflow.hints !62

; <label>:662                                     ; preds = %353
  %663 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %664 = extractvalue %dx.types.CBufRet.f32 %663, 3
  %665 = fmul float %22, %664
  %666 = fmul float %23, %664
  %667 = fadd float %534, %665
  %668 = fadd float %535, %666
  %669 = fmul float %215, %667
  %670 = fmul float %216, %667
  %671 = fmul float %217, %667
  %672 = fmul float %218, %668
  %673 = fmul float %219, %668
  %674 = fmul float %220, %668
  %675 = fadd float %669, %672
  %676 = fadd float %670, %673
  %677 = fadd float %671, %674
  %678 = fadd float %552, %675
  %679 = fadd float %553, %676
  %680 = fadd float %554, %677
  %681 = fadd float %224, %678
  %682 = fadd float %225, %679
  %683 = fadd float %226, %680
  %684 = fadd float %74, %681
  %685 = fadd float %75, %682
  %686 = fadd float %76, %683
  %687 = fadd float %564, %684
  %688 = fadd float %565, %685
  %689 = fadd float %566, %686
  %690 = fadd float %687, 0.000000e+00
  %691 = fadd float %688, 0.000000e+00
  %692 = fadd float %689, 0.000000e+00
  %693 = fmul float %54, %690
  %694 = call float @dx.op.tertiary.f32(i32 46, float %691, float %59, float %693), !dx.precise !34  ; FMad(a,b,c)
  %695 = call float @dx.op.tertiary.f32(i32 46, float %692, float %64, float %694), !dx.precise !34  ; FMad(a,b,c)
  %696 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %69, float %695), !dx.precise !34  ; FMad(a,b,c)
  %697 = fmul float %55, %690
  %698 = call float @dx.op.tertiary.f32(i32 46, float %691, float %60, float %697), !dx.precise !34  ; FMad(a,b,c)
  %699 = call float @dx.op.tertiary.f32(i32 46, float %692, float %65, float %698), !dx.precise !34  ; FMad(a,b,c)
  %700 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %70, float %699), !dx.precise !34  ; FMad(a,b,c)
  %701 = fmul float %56, %690
  %702 = call float @dx.op.tertiary.f32(i32 46, float %691, float %61, float %701), !dx.precise !34  ; FMad(a,b,c)
  %703 = call float @dx.op.tertiary.f32(i32 46, float %692, float %66, float %702), !dx.precise !34  ; FMad(a,b,c)
  %704 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %71, float %703), !dx.precise !34  ; FMad(a,b,c)
  %705 = fmul float %57, %690
  %706 = call float @dx.op.tertiary.f32(i32 46, float %691, float %62, float %705), !dx.precise !34  ; FMad(a,b,c)
  %707 = call float @dx.op.tertiary.f32(i32 46, float %692, float %67, float %706), !dx.precise !34  ; FMad(a,b,c)
  %708 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %72, float %707), !dx.precise !34  ; FMad(a,b,c)
  br label %709

; <label>:709                                     ; preds = %662, %353
  %710 = phi float [ %696, %662 ], [ 0.000000e+00, %353 ]
  %711 = phi float [ %700, %662 ], [ 0.000000e+00, %353 ]
  %712 = phi float [ %704, %662 ], [ 0.000000e+00, %353 ]
  %713 = phi float [ %708, %662 ], [ 1.000000e+00, %353 ]
  call void @dx.op.storeOutput.f32(i32 5, i32 7, i32 0, i8 0, float %710)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 7, i32 0, i8 1, float %711)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 7, i32 0, i8 2, float %712)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 7, i32 0, i8 3, float %713)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.loadInput.i32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind
declare void @dx.op.storeOutput.i32(i32, i32, i32, i8, i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot2.f32(i32, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: nounwind readnone
declare i32 @dx.op.binary.i32(i32, i32, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.viewIdState = !{!26}
!dx.entryPoints = !{!27}

!0 = !{!"dxc(private) 1.7.0.0 (private, 00000000)"}
!1 = !{i32 1, i32 6}
!2 = !{i32 1, i32 7}
!3 = !{!"vs", i32 6, i32 6}
!4 = !{!5, null, !19, !23}
!5 = !{!6, !8, !9, !10, !12, !14, !16, !17, !18}
!6 = !{i32 0, %"class.StructuredBuffer<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 12, i32 0, !7}
!7 = !{i32 1, i32 16}
!8 = !{i32 1, %"class.StructuredBuffer<vector<float, 4> >"* undef, !"", i32 0, i32 1, i32 1, i32 12, i32 0, !7}
!9 = !{i32 2, %"class.StructuredBuffer<vector<float, 4> >"* undef, !"", i32 0, i32 2, i32 1, i32 12, i32 0, !7}
!10 = !{i32 3, %"class.Buffer<unsigned int>"* undef, !"", i32 0, i32 3, i32 1, i32 10, i32 0, !11}
!11 = !{i32 0, i32 5}
!12 = !{i32 4, %"class.Buffer<float>"* undef, !"", i32 0, i32 4, i32 1, i32 10, i32 0, !13}
!13 = !{i32 0, i32 9}
!14 = !{i32 5, %"class.StructuredBuffer<unsigned int>"* undef, !"", i32 0, i32 5, i32 1, i32 12, i32 0, !15}
!15 = !{i32 1, i32 4}
!16 = !{i32 6, %"class.Buffer<float>"* undef, !"", i32 0, i32 6, i32 1, i32 10, i32 0, !13}
!17 = !{i32 7, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 7, i32 1, i32 2, i32 0, !13}
!18 = !{i32 8, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 8, i32 1, i32 2, i32 0, !13}
!19 = !{!20, !21, !22}
!20 = !{i32 0, %hostlayout.UniformBufferConstants_View* undef, !"", i32 0, i32 0, i32 1, i32 5388, null}
!21 = !{i32 1, %UniformBufferConstants_LandscapeContinuousLODParameters* undef, !"", i32 0, i32 1, i32 1, i32 28, null}
!22 = !{i32 2, %hostlayout.UniformBufferConstants_LandscapeParameters* undef, !"", i32 0, i32 2, i32 1, i32 252, null}
!23 = !{!24, !25}
!24 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 0, i32 1, i32 0, null}
!25 = !{i32 1, %struct.SamplerState* undef, !"", i32 0, i32 1, i32 1, i32 0, null}
!26 = !{[11 x i32] [i32 9, i32 32, i32 -9436929, i32 -9436929, i32 -9436929, i32 -9436929, i32 -9371636, i32 0, i32 0, i32 0, i32 -9371636]}
!27 = !{void ()* @Main, !"Main", !28, !4, !53}
!28 = !{!29, !37, null}
!29 = !{!30, !33, !36}
!30 = !{i32 0, !"ATTRIBUTE", i8 9, i8 0, !31, i8 0, i32 1, i8 4, i32 0, i8 0, !32}
!31 = !{i32 0}
!32 = !{i32 3, i32 15}
!33 = !{i32 1, !"ATTRIBUTE", i8 5, i8 0, !34, i8 0, i32 1, i8 1, i32 1, i8 0, !35}
!34 = !{i32 1}
!35 = !{i32 3, i32 1}
!36 = !{i32 2, !"SV_InstanceID", i8 5, i8 2, !31, i8 0, i32 1, i8 1, i32 2, i8 0, !35}
!37 = !{!38, !40, !41, !43, !45, !47, !48, !51, !52}
!38 = !{i32 0, !"TEXCOORD", i8 9, i8 0, !31, i8 2, i32 1, i8 2, i32 0, i8 0, !39}
!39 = !{i32 3, i32 3}
!40 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !34, i8 2, i32 1, i8 4, i32 1, i8 0, !32}
!41 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !42, i8 2, i32 1, i8 4, i32 2, i8 0, !32}
!42 = !{i32 2}
!43 = !{i32 3, !"TEXCOORD", i8 9, i8 0, !44, i8 2, i32 1, i8 2, i32 0, i8 2, !39}
!44 = !{i32 3}
!45 = !{i32 4, !"TEXCOORD", i8 9, i8 0, !46, i8 2, i32 1, i8 2, i32 3, i8 0, !39}
!46 = !{i32 4}
!47 = !{i32 5, !"PRIMITIVE_ID", i8 5, i8 0, !31, i8 1, i32 1, i8 1, i32 4, i8 0, !35}
!48 = !{i32 6, !"TEXCOORD", i8 9, i8 0, !49, i8 2, i32 1, i8 3, i32 5, i8 0, !50}
!49 = !{i32 9}
!50 = !{i32 3, i32 7}
!51 = !{i32 7, !"VELOCITY_PREV_POS", i8 9, i8 0, !31, i8 2, i32 1, i8 4, i32 6, i8 0, !32}
!52 = !{i32 8, !"SV_Position", i8 9, i8 3, !31, i8 4, i32 1, i8 4, i32 7, i8 0, !32}
!53 = !{i32 0, i64 16, i32 5, !31}
!54 = distinct !{!54, !"dx.controlflow.hints", i32 1}
!55 = !{!56, !56, i64 0}
!56 = !{!"float", !57, i64 0}
!57 = !{!"omnipotent char", !58, i64 0}
!58 = !{!"Simple C/C++ TBAA"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"\01?GetVertexFactoryIntermediates@@YA?AUFVertexFactoryIntermediates@@UFVertexFactoryInput@@@Z: %agg.result"}
!61 = distinct !{!61, !"\01?GetVertexFactoryIntermediates@@YA?AUFVertexFactoryIntermediates@@UFVertexFactoryInput@@@Z"}
!62 = distinct !{!62, !"dx.controlflow.hints", i32 2}
