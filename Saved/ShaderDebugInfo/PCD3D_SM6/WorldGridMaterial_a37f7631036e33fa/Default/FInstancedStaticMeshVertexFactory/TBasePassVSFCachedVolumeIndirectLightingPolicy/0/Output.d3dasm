;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; ATTRIBUTE                0   xyzw        0     NONE   float   xyz 
; ATTRIBUTE               13   x           1     NONE    uint   x   
; SV_InstanceID            0   x           2   INSTID    uint   x   
; SV_VertexID              0   x           3   VERTID    uint   x   
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD10_centroid      0   xyzw        0     NONE   float   xyzw
; TEXCOORD11_centroid      0   xyzw        1     NONE   float   xyzw
; COLOR                    1   xyzw        2     NONE   float   xyzw
; TEXCOORD                 0   xyzw        3     NONE   float   xyzw
; PRIMITIVE_ID             0   x           4     NONE    uint   x   
; TEXCOORD                 9   xyz         5     NONE   float   xyz 
; VELOCITY_PREV_POS        0   xyzw        6     NONE   float   xyzw
; SV_Position              0   xyzw        7      POS   float   xyzw
;
; shader hash: d7e8fd2940971b5cfb2b6575c2424da1
;
; Pipeline Runtime Information: 
;
; Vertex Shader
; OutputPositionPresent=1
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; ATTRIBUTE                0                              
; ATTRIBUTE               13                              
; SV_InstanceID            0                              
; SV_VertexID              0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD10_centroid      0                 linear       
; TEXCOORD11_centroid      0                 linear       
; COLOR                    1        nointerpolation       
; TEXCOORD                 0                 linear       
; PRIMITIVE_ID             0        nointerpolation       
; TEXCOORD                 9                 linear       
; VELOCITY_PREV_POS        0                 linear       
; SV_Position              0          noperspective       
;
; Buffer Definitions:
;
; cbuffer $Globals
; {
;
;   struct $Globals
;   {
;
;       float4 DepthOfFieldParams;                    ; Offset:    0
;       uint bSceneLightingChannelsValid;             ; Offset:   16
;       float4 InstancingViewZCompareZero;            ; Offset:   32
;       float4 InstancingViewZCompareOne;             ; Offset:   48
;       float4 InstancingViewZConstant;               ; Offset:   64
;       float4 InstancingTranslatedWorldViewOriginZero;; Offset:   80
;       float4 InstancingTranslatedWorldViewOriginOne;; Offset:   96
;       float4 InstancingFadeOutParams;               ; Offset:  112
;   
;   } $Globals;                                       ; Offset:    0 Size:   128
;
; }
;
; cbuffer UniformBufferConstants_View
; {
;
;   struct hostlayout.UniformBufferConstants_View
;   {
;
;       row_major float4x4 View_TranslatedWorldToClip;; Offset:    0
;       row_major float4x4 View_TranslatedWorldToSubpixelClip;; Offset:   64
;       row_major float4x4 View_RelativeWorldToClip;  ; Offset:  128
;       row_major float4x4 View_ClipToRelativeWorld;  ; Offset:  192
;       row_major float4x4 View_TranslatedWorldToView;; Offset:  256
;       row_major float4x4 View_ViewToTranslatedWorld;; Offset:  320
;       row_major float4x4 View_TranslatedWorldToCameraView;; Offset:  384
;       row_major float4x4 View_CameraViewToTranslatedWorld;; Offset:  448
;       row_major float4x4 View_ViewToClip;           ; Offset:  512
;       row_major float4x4 View_ViewToClipNoAA;       ; Offset:  576
;       row_major float4x4 View_ClipToView;           ; Offset:  640
;       row_major float4x4 View_ClipToTranslatedWorld;; Offset:  704
;       row_major float4x4 View_SVPositionToTranslatedWorld;; Offset:  768
;       row_major float4x4 View_ScreenToRelativeWorld;; Offset:  832
;       row_major float4x4 View_ScreenToTranslatedWorld;; Offset:  896
;       row_major float4x4 View_MobileMultiviewShadowTransform;; Offset:  960
;       float3 View_ViewTilePosition;                 ; Offset: 1024
;       float PrePadding_View_1036;                   ; Offset: 1036
;       float3 View_MatrixTilePosition;               ; Offset: 1040
;       float PrePadding_View_1052;                   ; Offset: 1052
;       float3 View_ViewForward;                      ; Offset: 1056
;       float PrePadding_View_1068;                   ; Offset: 1068
;       float3 View_ViewUp;                           ; Offset: 1072
;       float PrePadding_View_1084;                   ; Offset: 1084
;       float3 View_ViewRight;                        ; Offset: 1088
;       float PrePadding_View_1100;                   ; Offset: 1100
;       float3 View_HMDViewNoRollUp;                  ; Offset: 1104
;       float PrePadding_View_1116;                   ; Offset: 1116
;       float3 View_HMDViewNoRollRight;               ; Offset: 1120
;       float PrePadding_View_1132;                   ; Offset: 1132
;       float4 View_InvDeviceZToWorldZTransform;      ; Offset: 1136
;       float4 View_ScreenPositionScaleBias;          ; Offset: 1152
;       float3 View_RelativeWorldCameraOrigin;        ; Offset: 1168
;       float PrePadding_View_1180;                   ; Offset: 1180
;       float3 View_TranslatedWorldCameraOrigin;      ; Offset: 1184
;       float PrePadding_View_1196;                   ; Offset: 1196
;       float3 View_RelativeWorldViewOrigin;          ; Offset: 1200
;       float PrePadding_View_1212;                   ; Offset: 1212
;       float3 View_RelativePreViewTranslation;       ; Offset: 1216
;       float PrePadding_View_1228;                   ; Offset: 1228
;       row_major float4x4 View_PrevViewToClip;       ; Offset: 1232
;       row_major float4x4 View_PrevClipToView;       ; Offset: 1296
;       row_major float4x4 View_PrevTranslatedWorldToClip;; Offset: 1360
;       row_major float4x4 View_PrevTranslatedWorldToView;; Offset: 1424
;       row_major float4x4 View_PrevViewToTranslatedWorld;; Offset: 1488
;       row_major float4x4 View_PrevTranslatedWorldToCameraView;; Offset: 1552
;       row_major float4x4 View_PrevCameraViewToTranslatedWorld;; Offset: 1616
;       float3 View_PrevTranslatedWorldCameraOrigin;  ; Offset: 1680
;       float PrePadding_View_1692;                   ; Offset: 1692
;       float3 View_PrevRelativeWorldCameraOrigin;    ; Offset: 1696
;       float PrePadding_View_1708;                   ; Offset: 1708
;       float3 View_PrevRelativeWorldViewOrigin;      ; Offset: 1712
;       float PrePadding_View_1724;                   ; Offset: 1724
;       float3 View_RelativePrevPreViewTranslation;   ; Offset: 1728
;       float PrePadding_View_1740;                   ; Offset: 1740
;       row_major float4x4 View_PrevClipToRelativeWorld;; Offset: 1744
;       row_major float4x4 View_PrevScreenToTranslatedWorld;; Offset: 1808
;       row_major float4x4 View_ClipToPrevClip;       ; Offset: 1872
;       row_major float4x4 View_ClipToPrevClipWithAA; ; Offset: 1936
;       float4 View_TemporalAAJitter;                 ; Offset: 2000
;       float4 View_GlobalClippingPlane;              ; Offset: 2016
;       float2 View_FieldOfViewWideAngles;            ; Offset: 2032
;       float2 View_PrevFieldOfViewWideAngles;        ; Offset: 2040
;       float4 View_ViewRectMin;                      ; Offset: 2048
;       float4 View_ViewSizeAndInvSize;               ; Offset: 2064
;       uint4 View_ViewRectMinAndSize;                ; Offset: 2080
;       float4 View_LightProbeSizeRatioAndInvSizeRatio;; Offset: 2096
;       float4 View_BufferSizeAndInvSize;             ; Offset: 2112
;       float4 View_BufferBilinearUVMinMax;           ; Offset: 2128
;       float4 View_ScreenToViewSpace;                ; Offset: 2144
;       float2 View_BufferToSceneTextureScale;        ; Offset: 2160
;       float2 View_ResolutionFractionAndInv;         ; Offset: 2168
;       int View_NumSceneColorMSAASamples;            ; Offset: 2176
;       float View_PreExposure;                       ; Offset: 2180
;       float View_OneOverPreExposure;                ; Offset: 2184
;       float PrePadding_View_2188;                   ; Offset: 2188
;       float4 View_DiffuseOverrideParameter;         ; Offset: 2192
;       float4 View_SpecularOverrideParameter;        ; Offset: 2208
;       float4 View_NormalOverrideParameter;          ; Offset: 2224
;       float2 View_RoughnessOverrideParameter;       ; Offset: 2240
;       float View_PrevFrameGameTime;                 ; Offset: 2248
;       float View_PrevFrameRealTime;                 ; Offset: 2252
;       float View_OutOfBoundsMask;                   ; Offset: 2256
;       float PrePadding_View_2260;                   ; Offset: 2260
;       float PrePadding_View_2264;                   ; Offset: 2264
;       float PrePadding_View_2268;                   ; Offset: 2268
;       float3 View_WorldCameraMovementSinceLastFrame;; Offset: 2272
;       float View_CullingSign;                       ; Offset: 2284
;       float View_NearPlane;                         ; Offset: 2288
;       float View_GameTime;                          ; Offset: 2292
;       float View_RealTime;                          ; Offset: 2296
;       float View_DeltaTime;                         ; Offset: 2300
;       float View_MaterialTextureMipBias;            ; Offset: 2304
;       float View_MaterialTextureDerivativeMultiply; ; Offset: 2308
;       uint View_Random;                             ; Offset: 2312
;       uint View_FrameNumber;                        ; Offset: 2316
;       uint View_StateFrameIndexMod8;                ; Offset: 2320
;       uint View_StateFrameIndex;                    ; Offset: 2324
;       uint View_DebugViewModeMask;                  ; Offset: 2328
;       uint View_WorldIsPaused;                      ; Offset: 2332
;       float View_CameraCut;                         ; Offset: 2336
;       float View_UnlitViewmodeMask;                 ; Offset: 2340
;       float PrePadding_View_2344;                   ; Offset: 2344
;       float PrePadding_View_2348;                   ; Offset: 2348
;       float4 View_DirectionalLightColor;            ; Offset: 2352
;       float3 View_DirectionalLightDirection;        ; Offset: 2368
;       float PrePadding_View_2380;                   ; Offset: 2380
;       float4 View_TranslucencyLightingVolumeMin[2]; ; Offset: 2384
;       float4 View_TranslucencyLightingVolumeInvSize[2];; Offset: 2416
;       float4 View_TemporalAAParams;                 ; Offset: 2448
;       float4 View_CircleDOFParams;                  ; Offset: 2464
;       float View_DepthOfFieldSensorWidth;           ; Offset: 2480
;       float View_DepthOfFieldFocalDistance;         ; Offset: 2484
;       float View_DepthOfFieldScale;                 ; Offset: 2488
;       float View_DepthOfFieldFocalLength;           ; Offset: 2492
;       float View_DepthOfFieldFocalRegion;           ; Offset: 2496
;       float View_DepthOfFieldNearTransitionRegion;  ; Offset: 2500
;       float View_DepthOfFieldFarTransitionRegion;   ; Offset: 2504
;       float View_MotionBlurNormalizedToPixel;       ; Offset: 2508
;       float View_GeneralPurposeTweak;               ; Offset: 2512
;       float View_GeneralPurposeTweak2;              ; Offset: 2516
;       float View_DemosaicVposOffset;                ; Offset: 2520
;       float View_DecalDepthBias;                    ; Offset: 2524
;       float3 View_IndirectLightingColorScale;       ; Offset: 2528
;       float PrePadding_View_2540;                   ; Offset: 2540
;       float3 View_PrecomputedIndirectLightingColorScale;; Offset: 2544
;       float PrePadding_View_2556;                   ; Offset: 2556
;       float3 View_PrecomputedIndirectSpecularColorScale;; Offset: 2560
;       float PrePadding_View_2572;                   ; Offset: 2572
;       float4 View_AtmosphereLightDirection[2];      ; Offset: 2576
;       float4 View_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];; Offset: 2608
;       float4 View_AtmosphereLightIlluminanceOuterSpace[2];; Offset: 2640
;       float4 View_AtmosphereLightDiscLuminance[2];  ; Offset: 2672
;       float4 View_AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];; Offset: 2704
;       float4 View_SkyViewLutSizeAndInvSize;         ; Offset: 2736
;       float3 View_SkyCameraTranslatedWorldOrigin;   ; Offset: 2752
;       float PrePadding_View_2764;                   ; Offset: 2764
;       float4 View_SkyPlanetTranslatedWorldCenterAndViewHeight;; Offset: 2768
;       row_major float4x4 View_SkyViewLutReferential;; Offset: 2784
;       float4 View_SkyAtmosphereSkyLuminanceFactor;  ; Offset: 2848
;       float View_SkyAtmospherePresentInScene;       ; Offset: 2864
;       float View_SkyAtmosphereHeightFogContribution;; Offset: 2868
;       float View_SkyAtmosphereBottomRadiusKm;       ; Offset: 2872
;       float View_SkyAtmosphereTopRadiusKm;          ; Offset: 2876
;       float4 View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;; Offset: 2880
;       float View_SkyAtmosphereAerialPerspectiveStartDepthKm;; Offset: 2896
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;; Offset: 2900
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;; Offset: 2904
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;; Offset: 2908
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;; Offset: 2912
;       float View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;; Offset: 2916
;       float PrePadding_View_2920;                   ; Offset: 2920
;       float PrePadding_View_2924;                   ; Offset: 2924
;       float3 View_NormalCurvatureToRoughnessScaleBias;; Offset: 2928
;       float View_RenderingReflectionCaptureMask;    ; Offset: 2940
;       float View_RealTimeReflectionCapture;         ; Offset: 2944
;       float View_RealTimeReflectionCapturePreExposure;; Offset: 2948
;       float PrePadding_View_2952;                   ; Offset: 2952
;       float PrePadding_View_2956;                   ; Offset: 2956
;       float4 View_AmbientCubemapTint;               ; Offset: 2960
;       float View_AmbientCubemapIntensity;           ; Offset: 2976
;       float View_SkyLightApplyPrecomputedBentNormalShadowingFlag;; Offset: 2980
;       float View_SkyLightAffectReflectionFlag;      ; Offset: 2984
;       float View_SkyLightAffectGlobalIlluminationFlag;; Offset: 2988
;       float4 View_SkyLightColor;                    ; Offset: 2992
;       float4 View_MobileSkyIrradianceEnvironmentMap[8];; Offset: 3008
;       float View_MobilePreviewMode;                 ; Offset: 3136
;       float View_HMDEyePaddingOffset;               ; Offset: 3140
;       float View_ReflectionCubemapMaxMip;           ; Offset: 3144
;       float View_ShowDecalsMask;                    ; Offset: 3148
;       uint View_DistanceFieldAOSpecularOcclusionMode;; Offset: 3152
;       float View_IndirectCapsuleSelfShadowingIntensity;; Offset: 3156
;       float PrePadding_View_3160;                   ; Offset: 3160
;       float PrePadding_View_3164;                   ; Offset: 3164
;       float3 View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;; Offset: 3168
;       int View_StereoPassIndex;                     ; Offset: 3180
;       float4 View_GlobalVolumeTranslatedCenterAndExtent[6];; Offset: 3184
;       float4 View_GlobalVolumeTranslatedWorldToUVAddAndMul[6];; Offset: 3280
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVScale[6];; Offset: 3376
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVBias[6];; Offset: 3472
;       float View_GlobalDistanceFieldMipFactor;      ; Offset: 3568
;       float View_GlobalDistanceFieldMipTransition;  ; Offset: 3572
;       int View_GlobalDistanceFieldClipmapSizeInPages;; Offset: 3576
;       int PrePadding_View_3580;                     ; Offset: 3580
;       float3 View_GlobalDistanceFieldInvPageAtlasSize;; Offset: 3584
;       float PrePadding_View_3596;                   ; Offset: 3596
;       float3 View_GlobalDistanceFieldInvCoverageAtlasSize;; Offset: 3600
;       float View_GlobalVolumeDimension;             ; Offset: 3612
;       float View_GlobalVolumeTexelSize;             ; Offset: 3616
;       float View_MaxGlobalDFAOConeDistance;         ; Offset: 3620
;       uint View_NumGlobalSDFClipmaps;               ; Offset: 3624
;       float View_CoveredExpandSurfaceScale;         ; Offset: 3628
;       float View_NotCoveredExpandSurfaceScale;      ; Offset: 3632
;       float View_NotCoveredMinStepScale;            ; Offset: 3636
;       float View_DitheredTransparencyStepThreshold; ; Offset: 3640
;       float View_DitheredTransparencyTraceThreshold;; Offset: 3644
;       int2 View_CursorPosition;                     ; Offset: 3648
;       float View_bCheckerboardSubsurfaceProfileRendering;; Offset: 3656
;       float PrePadding_View_3660;                   ; Offset: 3660
;       float3 View_VolumetricFogInvGridSize;         ; Offset: 3664
;       float PrePadding_View_3676;                   ; Offset: 3676
;       float3 View_VolumetricFogGridZParams;         ; Offset: 3680
;       float PrePadding_View_3692;                   ; Offset: 3692
;       float2 View_VolumetricFogSVPosToVolumeUV;     ; Offset: 3696
;       float2 View_VolumetricFogScreenUVToHistoryVolumeUV;; Offset: 3704
;       float View_VolumetricFogMaxDistance;          ; Offset: 3712
;       float PrePadding_View_3716;                   ; Offset: 3716
;       float PrePadding_View_3720;                   ; Offset: 3720
;       float PrePadding_View_3724;                   ; Offset: 3724
;       float3 View_VolumetricLightmapWorldToUVScale; ; Offset: 3728
;       float PrePadding_View_3740;                   ; Offset: 3740
;       float3 View_VolumetricLightmapWorldToUVAdd;   ; Offset: 3744
;       float PrePadding_View_3756;                   ; Offset: 3756
;       float3 View_VolumetricLightmapIndirectionTextureSize;; Offset: 3760
;       float View_VolumetricLightmapBrickSize;       ; Offset: 3772
;       float3 View_VolumetricLightmapBrickTexelSize; ; Offset: 3776
;       float View_IndirectLightingCacheShowFlag;     ; Offset: 3788
;       float View_EyeToPixelSpreadAngle;             ; Offset: 3792
;       float PrePadding_View_3796;                   ; Offset: 3796
;       float PrePadding_View_3800;                   ; Offset: 3800
;       float PrePadding_View_3804;                   ; Offset: 3804
;       float4 View_XRPassthroughCameraUVs[2];        ; Offset: 3808
;       float View_GlobalVirtualTextureMipBias;       ; Offset: 3840
;       uint View_VirtualTextureFeedbackShift;        ; Offset: 3844
;       uint View_VirtualTextureFeedbackMask;         ; Offset: 3848
;       uint View_VirtualTextureFeedbackStride;       ; Offset: 3852
;       uint View_VirtualTextureFeedbackJitterOffset; ; Offset: 3856
;       uint View_VirtualTextureFeedbackSampleOffset; ; Offset: 3860
;       uint PrePadding_View_3864;                    ; Offset: 3864
;       uint PrePadding_View_3868;                    ; Offset: 3868
;       float4 View_RuntimeVirtualTextureMipLevel;    ; Offset: 3872
;       float2 View_RuntimeVirtualTexturePackHeight;  ; Offset: 3888
;       float PrePadding_View_3896;                   ; Offset: 3896
;       float PrePadding_View_3900;                   ; Offset: 3900
;       float4 View_RuntimeVirtualTextureDebugParams; ; Offset: 3904
;       float View_OverrideLandscapeLOD;              ; Offset: 3920
;       int View_FarShadowStaticMeshLODBias;          ; Offset: 3924
;       float View_MinRoughness;                      ; Offset: 3928
;       float PrePadding_View_3932;                   ; Offset: 3932
;       float4 View_HairRenderInfo;                   ; Offset: 3936
;       uint View_EnableSkyLight;                     ; Offset: 3952
;       uint View_HairRenderInfoBits;                 ; Offset: 3956
;       uint View_HairComponents;                     ; Offset: 3960
;       float View_bSubsurfacePostprocessEnabled;     ; Offset: 3964
;       float4 View_SSProfilesTextureSizeAndInvSize;  ; Offset: 3968
;       float4 View_SSProfilesPreIntegratedTextureSizeAndInvSize;; Offset: 3984
;       float3 View_PhysicsFieldClipmapCenter;        ; Offset: 4000
;       float View_PhysicsFieldClipmapDistance;       ; Offset: 4012
;       int View_PhysicsFieldClipmapResolution;       ; Offset: 4016
;       int View_PhysicsFieldClipmapExponent;         ; Offset: 4020
;       int View_PhysicsFieldClipmapCount;            ; Offset: 4024
;       int View_PhysicsFieldTargetCount;             ; Offset: 4028
;       int4 View_PhysicsFieldTargets[32];            ; Offset: 4032
;       uint View_InstanceSceneDataSOAStride;         ; Offset: 4544
;       uint View_GPUSceneViewId;                     ; Offset: 4548
;       float View_ViewResolutionFraction;            ; Offset: 4552
;       float View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;; Offset: 4556
;       uint BindlessSampler_View_MaterialTextureBilinearWrapedSampler;; Offset: 4560
;       uint PrePadding_View_4564;                    ; Offset: 4564
;       uint BindlessSampler_View_MaterialTextureBilinearClampedSampler;; Offset: 4568
;       uint PrePadding_View_4572;                    ; Offset: 4572
;       uint BindlessResource_View_VolumetricLightmapIndirectionTexture;; Offset: 4576
;       uint PrePadding_View_4580;                    ; Offset: 4580
;       uint BindlessResource_View_VolumetricLightmapBrickAmbientVector;; Offset: 4584
;       uint PrePadding_View_4588;                    ; Offset: 4588
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients0;; Offset: 4592
;       uint PrePadding_View_4596;                    ; Offset: 4596
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients1;; Offset: 4600
;       uint PrePadding_View_4604;                    ; Offset: 4604
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients2;; Offset: 4608
;       uint PrePadding_View_4612;                    ; Offset: 4612
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients3;; Offset: 4616
;       uint PrePadding_View_4620;                    ; Offset: 4620
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients4;; Offset: 4624
;       uint PrePadding_View_4628;                    ; Offset: 4628
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients5;; Offset: 4632
;       uint PrePadding_View_4636;                    ; Offset: 4636
;       uint BindlessResource_View_SkyBentNormalBrickTexture;; Offset: 4640
;       uint PrePadding_View_4644;                    ; Offset: 4644
;       uint BindlessResource_View_DirectionalLightShadowingBrickTexture;; Offset: 4648
;       uint PrePadding_View_4652;                    ; Offset: 4652
;       uint BindlessSampler_View_VolumetricLightmapBrickAmbientVectorSampler;; Offset: 4656
;       uint PrePadding_View_4660;                    ; Offset: 4660
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler0;; Offset: 4664
;       uint PrePadding_View_4668;                    ; Offset: 4668
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler1;; Offset: 4672
;       uint PrePadding_View_4676;                    ; Offset: 4676
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler2;; Offset: 4680
;       uint PrePadding_View_4684;                    ; Offset: 4684
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler3;; Offset: 4688
;       uint PrePadding_View_4692;                    ; Offset: 4692
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler4;; Offset: 4696
;       uint PrePadding_View_4700;                    ; Offset: 4700
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler5;; Offset: 4704
;       uint PrePadding_View_4708;                    ; Offset: 4708
;       uint BindlessSampler_View_SkyBentNormalTextureSampler;; Offset: 4712
;       uint PrePadding_View_4716;                    ; Offset: 4716
;       uint BindlessSampler_View_DirectionalLightShadowingTextureSampler;; Offset: 4720
;       uint PrePadding_View_4724;                    ; Offset: 4724
;       uint BindlessResource_View_GlobalDistanceFieldPageAtlasTexture;; Offset: 4728
;       uint PrePadding_View_4732;                    ; Offset: 4732
;       uint BindlessResource_View_GlobalDistanceFieldCoverageAtlasTexture;; Offset: 4736
;       uint PrePadding_View_4740;                    ; Offset: 4740
;       uint BindlessResource_View_GlobalDistanceFieldPageTableTexture;; Offset: 4744
;       uint PrePadding_View_4748;                    ; Offset: 4748
;       uint BindlessResource_View_GlobalDistanceFieldMipTexture;; Offset: 4752
;       uint PrePadding_View_4756;                    ; Offset: 4756
;       uint BindlessResource_View_AtmosphereTransmittanceTexture;; Offset: 4760
;       uint PrePadding_View_4764;                    ; Offset: 4764
;       uint BindlessSampler_View_AtmosphereTransmittanceTextureSampler;; Offset: 4768
;       uint PrePadding_View_4772;                    ; Offset: 4772
;       uint BindlessResource_View_AtmosphereIrradianceTexture;; Offset: 4776
;       uint PrePadding_View_4780;                    ; Offset: 4780
;       uint BindlessSampler_View_AtmosphereIrradianceTextureSampler;; Offset: 4784
;       uint PrePadding_View_4788;                    ; Offset: 4788
;       uint BindlessResource_View_AtmosphereInscatterTexture;; Offset: 4792
;       uint PrePadding_View_4796;                    ; Offset: 4796
;       uint BindlessSampler_View_AtmosphereInscatterTextureSampler;; Offset: 4800
;       uint PrePadding_View_4804;                    ; Offset: 4804
;       uint BindlessResource_View_PerlinNoiseGradientTexture;; Offset: 4808
;       uint PrePadding_View_4812;                    ; Offset: 4812
;       uint BindlessSampler_View_PerlinNoiseGradientTextureSampler;; Offset: 4816
;       uint PrePadding_View_4820;                    ; Offset: 4820
;       uint BindlessResource_View_PerlinNoise3DTexture;; Offset: 4824
;       uint PrePadding_View_4828;                    ; Offset: 4828
;       uint BindlessSampler_View_PerlinNoise3DTextureSampler;; Offset: 4832
;       uint PrePadding_View_4836;                    ; Offset: 4836
;       uint BindlessResource_View_SobolSamplingTexture;; Offset: 4840
;       uint PrePadding_View_4844;                    ; Offset: 4844
;       uint BindlessSampler_View_SharedPointWrappedSampler;; Offset: 4848
;       uint PrePadding_View_4852;                    ; Offset: 4852
;       uint BindlessSampler_View_SharedPointClampedSampler;; Offset: 4856
;       uint PrePadding_View_4860;                    ; Offset: 4860
;       uint BindlessSampler_View_SharedBilinearWrappedSampler;; Offset: 4864
;       uint PrePadding_View_4868;                    ; Offset: 4868
;       uint BindlessSampler_View_SharedBilinearClampedSampler;; Offset: 4872
;       uint PrePadding_View_4876;                    ; Offset: 4876
;       uint BindlessSampler_View_SharedBilinearAnisoClampedSampler;; Offset: 4880
;       uint PrePadding_View_4884;                    ; Offset: 4884
;       uint BindlessSampler_View_SharedTrilinearWrappedSampler;; Offset: 4888
;       uint PrePadding_View_4892;                    ; Offset: 4892
;       uint BindlessSampler_View_SharedTrilinearClampedSampler;; Offset: 4896
;       uint PrePadding_View_4900;                    ; Offset: 4900
;       uint BindlessResource_View_PreIntegratedBRDF; ; Offset: 4904
;       uint PrePadding_View_4908;                    ; Offset: 4908
;       uint BindlessSampler_View_PreIntegratedBRDFSampler;; Offset: 4912
;       uint PrePadding_View_4916;                    ; Offset: 4916
;       uint BindlessResource_View_PrimitiveSceneData;; Offset: 4920
;       uint PrePadding_View_4924;                    ; Offset: 4924
;       uint BindlessResource_View_InstanceSceneData; ; Offset: 4928
;       uint PrePadding_View_4932;                    ; Offset: 4932
;       uint BindlessResource_View_InstancePayloadData;; Offset: 4936
;       uint PrePadding_View_4940;                    ; Offset: 4940
;       uint BindlessResource_View_LightmapSceneData; ; Offset: 4944
;       uint PrePadding_View_4948;                    ; Offset: 4948
;       uint BindlessResource_View_SkyIrradianceEnvironmentMap;; Offset: 4952
;       uint PrePadding_View_4956;                    ; Offset: 4956
;       uint BindlessResource_View_TransmittanceLutTexture;; Offset: 4960
;       uint PrePadding_View_4964;                    ; Offset: 4964
;       uint BindlessSampler_View_TransmittanceLutTextureSampler;; Offset: 4968
;       uint PrePadding_View_4972;                    ; Offset: 4972
;       uint BindlessResource_View_SkyViewLutTexture; ; Offset: 4976
;       uint PrePadding_View_4980;                    ; Offset: 4980
;       uint BindlessSampler_View_SkyViewLutTextureSampler;; Offset: 4984
;       uint PrePadding_View_4988;                    ; Offset: 4988
;       uint BindlessResource_View_DistantSkyLightLutTexture;; Offset: 4992
;       uint PrePadding_View_4996;                    ; Offset: 4996
;       uint BindlessSampler_View_DistantSkyLightLutTextureSampler;; Offset: 5000
;       uint PrePadding_View_5004;                    ; Offset: 5004
;       uint BindlessResource_View_CameraAerialPerspectiveVolume;; Offset: 5008
;       uint PrePadding_View_5012;                    ; Offset: 5012
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeSampler;; Offset: 5016
;       uint PrePadding_View_5020;                    ; Offset: 5020
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeMieOnly;; Offset: 5024
;       uint PrePadding_View_5028;                    ; Offset: 5028
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeMieOnlySampler;; Offset: 5032
;       uint PrePadding_View_5036;                    ; Offset: 5036
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeRayOnly;; Offset: 5040
;       uint PrePadding_View_5044;                    ; Offset: 5044
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeRayOnlySampler;; Offset: 5048
;       uint PrePadding_View_5052;                    ; Offset: 5052
;       uint BindlessResource_View_HairScatteringLUTTexture;; Offset: 5056
;       uint PrePadding_View_5060;                    ; Offset: 5060
;       uint BindlessSampler_View_HairScatteringLUTSampler;; Offset: 5064
;       uint PrePadding_View_5068;                    ; Offset: 5068
;       uint BindlessResource_View_LTCMatTexture;     ; Offset: 5072
;       uint PrePadding_View_5076;                    ; Offset: 5076
;       uint BindlessSampler_View_LTCMatSampler;      ; Offset: 5080
;       uint PrePadding_View_5084;                    ; Offset: 5084
;       uint BindlessResource_View_LTCAmpTexture;     ; Offset: 5088
;       uint PrePadding_View_5092;                    ; Offset: 5092
;       uint BindlessSampler_View_LTCAmpSampler;      ; Offset: 5096
;       uint PrePadding_View_5100;                    ; Offset: 5100
;       uint View_bShadingEnergyConservation;         ; Offset: 5104
;       uint View_bShadingEnergyPreservation;         ; Offset: 5108
;       uint BindlessResource_View_ShadingEnergyGGXSpecTexture;; Offset: 5112
;       uint PrePadding_View_5116;                    ; Offset: 5116
;       uint BindlessResource_View_ShadingEnergyGGXGlassTexture;; Offset: 5120
;       uint PrePadding_View_5124;                    ; Offset: 5124
;       uint BindlessResource_View_ShadingEnergyClothSpecTexture;; Offset: 5128
;       uint PrePadding_View_5132;                    ; Offset: 5132
;       uint BindlessResource_View_ShadingEnergyDiffuseTexture;; Offset: 5136
;       uint PrePadding_View_5140;                    ; Offset: 5140
;       uint BindlessSampler_View_ShadingEnergySampler;; Offset: 5144
;       uint PrePadding_View_5148;                    ; Offset: 5148
;       uint BindlessResource_View_SSProfilesTexture; ; Offset: 5152
;       uint PrePadding_View_5156;                    ; Offset: 5156
;       uint BindlessSampler_View_SSProfilesSampler;  ; Offset: 5160
;       uint PrePadding_View_5164;                    ; Offset: 5164
;       uint BindlessSampler_View_SSProfilesTransmissionSampler;; Offset: 5168
;       uint PrePadding_View_5172;                    ; Offset: 5172
;       uint BindlessResource_View_SSProfilesPreIntegratedTexture;; Offset: 5176
;       uint PrePadding_View_5180;                    ; Offset: 5180
;       uint BindlessSampler_View_SSProfilesPreIntegratedSampler;; Offset: 5184
;       uint PrePadding_View_5188;                    ; Offset: 5188
;       uint BindlessResource_View_WaterIndirection;  ; Offset: 5192
;       uint PrePadding_View_5196;                    ; Offset: 5196
;       uint BindlessResource_View_WaterData;         ; Offset: 5200
;       uint PrePadding_View_5204;                    ; Offset: 5204
;       uint PrePadding_View_5208;                    ; Offset: 5208
;       uint PrePadding_View_5212;                    ; Offset: 5212
;       float4 View_RectLightAtlasSizeAndInvSize;     ; Offset: 5216
;       float View_RectLightAtlasMaxMipLevel;         ; Offset: 5232
;       float PrePadding_View_5236;                   ; Offset: 5236
;       uint BindlessResource_View_RectLightAtlasTexture;; Offset: 5240
;       uint PrePadding_View_5244;                    ; Offset: 5244
;       uint BindlessSampler_View_RectLightAtlasSampler;; Offset: 5248
;       uint PrePadding_View_5252;                    ; Offset: 5252
;       uint PrePadding_View_5256;                    ; Offset: 5256
;       uint PrePadding_View_5260;                    ; Offset: 5260
;       float4 View_IESAtlasSizeAndInvSize;           ; Offset: 5264
;       uint BindlessResource_View_IESAtlasTexture;   ; Offset: 5280
;       uint PrePadding_View_5284;                    ; Offset: 5284
;       uint BindlessSampler_View_IESAtlasSampler;    ; Offset: 5288
;       uint PrePadding_View_5292;                    ; Offset: 5292
;       uint BindlessSampler_View_LandscapeWeightmapSampler;; Offset: 5296
;       uint PrePadding_View_5300;                    ; Offset: 5300
;       uint BindlessResource_View_LandscapeIndirection;; Offset: 5304
;       uint PrePadding_View_5308;                    ; Offset: 5308
;       uint BindlessResource_View_LandscapePerComponentData;; Offset: 5312
;       uint PrePadding_View_5316;                    ; Offset: 5316
;       uint BindlessResource_View_VTFeedbackBuffer;  ; Offset: 5320
;       uint PrePadding_View_5324;                    ; Offset: 5324
;       uint BindlessResource_View_EditorVisualizeLevelInstanceIds;; Offset: 5328
;       uint PrePadding_View_5332;                    ; Offset: 5332
;       uint BindlessResource_View_EditorSelectedHitProxyIds;; Offset: 5336
;       uint PrePadding_View_5340;                    ; Offset: 5340
;       uint BindlessResource_View_PhysicsFieldClipmapBuffer;; Offset: 5344
;       uint PrePadding_View_5348;                    ; Offset: 5348
;       uint PrePadding_View_5352;                    ; Offset: 5352
;       uint PrePadding_View_5356;                    ; Offset: 5356
;       float3 View_TLASRelativePreViewTranslation;   ; Offset: 5360
;       float PrePadding_View_5372;                   ; Offset: 5372
;       float3 View_TLASViewTilePosition;             ; Offset: 5376
;   
;   } UniformBufferConstants_View;                    ; Offset:    0 Size:  5388
;
; }
;
; cbuffer UniformBufferConstants_LocalVF
; {
;
;   struct UniformBufferConstants_LocalVF
;   {
;
;       int4 LocalVF_VertexFetch_Parameters;          ; Offset:    0
;       int LocalVF_PreSkinBaseVertexIndex;           ; Offset:   16
;       uint LocalVF_LODLightmapDataIndex;            ; Offset:   20
;       uint BindlessResource_LocalVF_VertexFetch_TexCoordBuffer;; Offset:   24
;       uint PrePadding_LocalVF_28;                   ; Offset:   28
;       uint BindlessResource_LocalVF_VertexFetch_PositionBuffer;; Offset:   32
;       uint PrePadding_LocalVF_36;                   ; Offset:   36
;       uint BindlessResource_LocalVF_VertexFetch_PreSkinPositionBuffer;; Offset:   40
;       uint PrePadding_LocalVF_44;                   ; Offset:   44
;       uint BindlessResource_LocalVF_VertexFetch_PackedTangentsBuffer;; Offset:   48
;       uint PrePadding_LocalVF_52;                   ; Offset:   52
;       uint BindlessResource_LocalVF_VertexFetch_ColorComponentsBuffer;; Offset:   56
;   
;   } UniformBufferConstants_LocalVF;                 ; Offset:    0 Size:    60
;
; }
;
; Resource bind info for View_PrimitiveSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for View_InstanceSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for View_InstancePayloadData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for InstanceCulling_InstanceIdsBuffer
; {
;
;   uint $Element;                                    ; Offset:    0 Size:     4
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; $Globals                          cbuffer      NA          NA     CB0            cb0     1
; UniformBufferConstants_View       cbuffer      NA          NA     CB1            cb1     1
; UniformBufferConstants_LocalVF    cbuffer      NA          NA     CB2            cb2     1
; View_PrimitiveSceneData           texture  struct         r/o      T0             t0     1
; View_InstanceSceneData            texture  struct         r/o      T1             t1     1
; View_InstancePayloadData          texture  struct         r/o      T2             t2     1
; InstanceCulling_InstanceIdsBuffer   texture  struct         r/o      T3             t3     1
; LocalVF_VertexFetch_TexCoordBuffer   texture     f32         buf      T4             t4     1
; LocalVF_VertexFetch_PackedTangentsBuffer   texture     f32         buf      T5             t5     1
;
;
; ViewId state:
;
; Number of inputs: 13, outputs: 32
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 4, 8, 12 }
;   output 1 depends on inputs: { 4, 8, 12 }
;   output 2 depends on inputs: { 4, 8, 12 }
;   output 4 depends on inputs: { 4, 8, 12 }
;   output 5 depends on inputs: { 4, 8, 12 }
;   output 6 depends on inputs: { 4, 8, 12 }
;   output 7 depends on inputs: { 4, 8, 12 }
;   output 8 depends on inputs: { 4, 8 }
;   output 9 depends on inputs: { 4, 8 }
;   output 10 depends on inputs: { 4, 8 }
;   output 12 depends on inputs: { 12 }
;   output 13 depends on inputs: { 12 }
;   output 16 depends on inputs: { 4, 8 }
;   output 20 depends on inputs: { 0, 1, 2, 4, 8 }
;   output 21 depends on inputs: { 0, 1, 2, 4, 8 }
;   output 22 depends on inputs: { 0, 1, 2, 4, 8 }
;   output 24 depends on inputs: { 0, 1, 2, 4, 8 }
;   output 25 depends on inputs: { 0, 1, 2, 4, 8 }
;   output 26 depends on inputs: { 0, 1, 2, 4, 8 }
;   output 27 depends on inputs: { 0, 1, 2, 4, 8 }
;   output 28 depends on inputs: { 0, 1, 2, 4, 8 }
;   output 29 depends on inputs: { 0, 1, 2, 4, 8 }
;   output 30 depends on inputs: { 0, 1, 2, 4, 8 }
;   output 31 depends on inputs: { 0, 1, 2, 4, 8 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%"class.StructuredBuffer<vector<float, 4> >" = type { <4 x float> }
%"class.StructuredBuffer<unsigned int>" = type { i32 }
%"class.Buffer<vector<float, 2> >" = type { <2 x float> }
%"class.Buffer<vector<float, 4> >" = type { <4 x float> }
%"$Globals" = type { <4 x float>, i32, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float> }
%hostlayout.UniformBufferConstants_View = type { [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <4 x float>, <4 x float>, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <4 x float>, <4 x float>, <2 x float>, <2 x float>, <4 x float>, <4 x float>, <4 x i32>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, <2 x float>, i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i32, float, float, float, float, <4 x float>, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <4 x float>, float, float, float, float, float, float, float, float, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <3 x float>, float, <4 x float>, [4 x <4 x float>], <4 x float>, float, float, float, float, <4 x float>, float, float, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, <4 x float>, float, float, float, float, <4 x float>, [8 x <4 x float>], float, float, float, float, i32, float, float, float, <3 x float>, i32, [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], float, float, i32, i32, <3 x float>, float, <3 x float>, float, float, float, i32, float, float, float, float, float, <2 x i32>, float, float, <3 x float>, float, <3 x float>, float, <2 x float>, <2 x float>, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, float, float, float, float, [2 x <4 x float>], float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <2 x float>, float, float, <4 x float>, float, i32, float, float, <4 x float>, i32, i32, i32, float, <4 x float>, <4 x float>, <3 x float>, float, i32, i32, i32, i32, [32 x <4 x i32>], i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, float, float, i32, i32, i32, i32, i32, i32, <4 x float>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <3 x float>, float, <3 x float> }
%UniformBufferConstants_LocalVF = type { <4 x i32>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

define void @Main() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 5, i32 5, i32 0, i8 0 }, i32 5, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 4, i32 4, i32 0, i8 0 }, i32 4, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 3, i32 3, i32 0, i8 0 }, i32 3, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 0 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 0 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %6 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind zeroinitializer, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %7 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 2 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %8 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 2 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %9 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %10 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %7, %dx.types.ResourceProperties { i32 13, i32 60 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %11 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %8, %dx.types.ResourceProperties { i32 13, i32 5388 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %12 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %9, %dx.types.ResourceProperties { i32 13, i32 128 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %13 = call i32 @dx.op.loadInput.i32(i32 4, i32 3, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %14 = call i32 @dx.op.loadInput.i32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %15 = call i32 @dx.op.loadInput.i32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %16 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef), !dx.precise !36  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %17 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef), !dx.precise !36  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %18 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef), !dx.precise !36  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %19 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %11, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %20 = extractvalue %dx.types.CBufRet.f32 %19, 0
  %21 = extractvalue %dx.types.CBufRet.f32 %19, 1
  %22 = extractvalue %dx.types.CBufRet.f32 %19, 2
  %23 = extractvalue %dx.types.CBufRet.f32 %19, 3
  %24 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %11, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %25 = extractvalue %dx.types.CBufRet.f32 %24, 0
  %26 = extractvalue %dx.types.CBufRet.f32 %24, 1
  %27 = extractvalue %dx.types.CBufRet.f32 %24, 2
  %28 = extractvalue %dx.types.CBufRet.f32 %24, 3
  %29 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %11, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %30 = extractvalue %dx.types.CBufRet.f32 %29, 0
  %31 = extractvalue %dx.types.CBufRet.f32 %29, 1
  %32 = extractvalue %dx.types.CBufRet.f32 %29, 2
  %33 = extractvalue %dx.types.CBufRet.f32 %29, 3
  %34 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %11, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %35 = extractvalue %dx.types.CBufRet.f32 %34, 0
  %36 = extractvalue %dx.types.CBufRet.f32 %34, 1
  %37 = extractvalue %dx.types.CBufRet.f32 %34, 2
  %38 = extractvalue %dx.types.CBufRet.f32 %34, 3
  %39 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %11, i32 64)  ; CBufferLoadLegacy(handle,regIndex)
  %40 = extractvalue %dx.types.CBufRet.f32 %39, 0
  %41 = extractvalue %dx.types.CBufRet.f32 %39, 1
  %42 = extractvalue %dx.types.CBufRet.f32 %39, 2
  %43 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %11, i32 76)  ; CBufferLoadLegacy(handle,regIndex)
  %44 = extractvalue %dx.types.CBufRet.f32 %43, 0
  %45 = extractvalue %dx.types.CBufRet.f32 %43, 1
  %46 = extractvalue %dx.types.CBufRet.f32 %43, 2
  %47 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %11, i32 85)  ; CBufferLoadLegacy(handle,regIndex)
  %48 = extractvalue %dx.types.CBufRet.f32 %47, 0
  %49 = extractvalue %dx.types.CBufRet.f32 %47, 1
  %50 = extractvalue %dx.types.CBufRet.f32 %47, 2
  %51 = extractvalue %dx.types.CBufRet.f32 %47, 3
  %52 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %11, i32 86)  ; CBufferLoadLegacy(handle,regIndex)
  %53 = extractvalue %dx.types.CBufRet.f32 %52, 0
  %54 = extractvalue %dx.types.CBufRet.f32 %52, 1
  %55 = extractvalue %dx.types.CBufRet.f32 %52, 2
  %56 = extractvalue %dx.types.CBufRet.f32 %52, 3
  %57 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %11, i32 87)  ; CBufferLoadLegacy(handle,regIndex)
  %58 = extractvalue %dx.types.CBufRet.f32 %57, 0
  %59 = extractvalue %dx.types.CBufRet.f32 %57, 1
  %60 = extractvalue %dx.types.CBufRet.f32 %57, 2
  %61 = extractvalue %dx.types.CBufRet.f32 %57, 3
  %62 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %11, i32 88)  ; CBufferLoadLegacy(handle,regIndex)
  %63 = extractvalue %dx.types.CBufRet.f32 %62, 0
  %64 = extractvalue %dx.types.CBufRet.f32 %62, 1
  %65 = extractvalue %dx.types.CBufRet.f32 %62, 2
  %66 = extractvalue %dx.types.CBufRet.f32 %62, 3
  %67 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %11, i32 108)  ; CBufferLoadLegacy(handle,regIndex)
  %68 = extractvalue %dx.types.CBufRet.f32 %67, 0
  %69 = extractvalue %dx.types.CBufRet.f32 %67, 1
  %70 = extractvalue %dx.types.CBufRet.f32 %67, 2
  %71 = icmp slt i32 %15, 0
  br i1 %71, label %72, label %80

; <label>:72                                      ; preds = %0
  %73 = and i32 %15, 2147483647
  %74 = mul i32 %73, 41
  %75 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %6, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %76 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %75, i32 %74, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %77 = extractvalue %dx.types.ResRet.f32 %76, 1
  %78 = bitcast float %77 to i32
  %79 = add i32 %78, %14
  br label %86

; <label>:80                                      ; preds = %0
  %81 = add i32 %15, %14
  %82 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 12, i32 4 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=4>
  %83 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %82, i32 %81, i32 0, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %84 = extractvalue %dx.types.ResRet.i32 %83, 0
  %85 = and i32 %84, 268435455
  br label %86

; <label>:86                                      ; preds = %80, %72
  %87 = phi i32 [ %79, %72 ], [ %85, %80 ]
  %88 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %11, i32 284)  ; CBufferLoadLegacy(handle,regIndex)
  %89 = extractvalue %dx.types.CBufRet.i32 %88, 0
  %90 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %5, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %91 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %90, i32 %87, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %92 = extractvalue %dx.types.ResRet.f32 %91, 0
  %93 = bitcast float %92 to i32
  %94 = and i32 %93, 1048575
  %95 = lshr i32 %93, 20
  %96 = icmp eq i32 %94, 1048575
  %97 = mul nuw nsw i32 %94, 41
  br i1 %96, label %441, label %98, !dx.controlflow.hints !44

; <label>:98                                      ; preds = %86
  %99 = extractvalue %dx.types.ResRet.f32 %91, 1
  %100 = bitcast float %99 to i32
  %101 = and i32 %100, 16777215
  %102 = add nuw nsw i32 %97, 26
  %103 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %6, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %104 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %103, i32 %102, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %105 = extractvalue %dx.types.ResRet.f32 %104, 3
  %106 = bitcast float %105 to i32
  %107 = add nuw nsw i32 %97, 27
  %108 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %103, i32 %107, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %109 = extractvalue %dx.types.ResRet.f32 %108, 3
  %110 = bitcast float %109 to i32
  %111 = mul i32 %110, %101
  %112 = add i32 %111, %106
  %113 = and i32 %95, 64
  %114 = icmp ne i32 %113, 0
  %115 = and i32 %95, 8
  %116 = icmp ne i32 %115, 0
  %117 = and i32 %95, 128
  %118 = select i1 %114, i32 %112, i32 -1
  %119 = and i32 %95, 160
  %120 = icmp ne i32 %119, 0
  %121 = zext i1 %120 to i32
  %122 = select i1 %114, i32 2, i32 %121
  %123 = add i32 %112, %122
  %124 = select i1 %116, i32 %123, i32 -1
  %125 = extractvalue %dx.types.ResRet.f32 %91, 3
  %126 = add nuw nsw i32 %97, 1
  %127 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %103, i32 %126, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %128 = extractvalue %dx.types.ResRet.f32 %127, 0
  %129 = extractvalue %dx.types.ResRet.f32 %127, 1
  %130 = extractvalue %dx.types.ResRet.f32 %127, 2
  %131 = add nuw nsw i32 %97, 14
  %132 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %103, i32 %131, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %133 = extractvalue %dx.types.ResRet.f32 %132, 0
  %134 = extractvalue %dx.types.ResRet.f32 %132, 1
  %135 = extractvalue %dx.types.ResRet.f32 %132, 2
  %136 = extractvalue %dx.types.ResRet.f32 %132, 3
  %137 = add nuw nsw i32 %97, 15
  %138 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %103, i32 %137, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %139 = extractvalue %dx.types.ResRet.f32 %138, 0
  %140 = extractvalue %dx.types.ResRet.f32 %138, 1
  %141 = extractvalue %dx.types.ResRet.f32 %138, 2
  %142 = extractvalue %dx.types.ResRet.f32 %138, 3
  %143 = add nuw nsw i32 %97, 16
  %144 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %103, i32 %143, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %145 = extractvalue %dx.types.ResRet.f32 %144, 0
  %146 = extractvalue %dx.types.ResRet.f32 %144, 1
  %147 = extractvalue %dx.types.ResRet.f32 %144, 2
  %148 = extractvalue %dx.types.ResRet.f32 %144, 3
  %149 = extractvalue %dx.types.ResRet.f32 %104, 0
  %150 = extractvalue %dx.types.ResRet.f32 %104, 1
  %151 = extractvalue %dx.types.ResRet.f32 %104, 2
  %152 = add i32 %89, %87
  %153 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %90, i32 %152, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %154 = extractvalue %dx.types.ResRet.f32 %153, 0
  %155 = extractvalue %dx.types.ResRet.f32 %153, 1
  %156 = extractvalue %dx.types.ResRet.f32 %153, 2
  %157 = extractvalue %dx.types.ResRet.f32 %153, 3
  %158 = bitcast float %154 to i32
  %159 = bitcast float %155 to i32
  %160 = bitcast float %156 to i32
  %161 = bitcast float %157 to i32
  %162 = shl i32 %89, 1
  %163 = add i32 %162, %87
  %164 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %90, i32 %163, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %165 = extractvalue %dx.types.ResRet.f32 %164, 0
  %166 = extractvalue %dx.types.ResRet.f32 %164, 1
  %167 = extractvalue %dx.types.ResRet.f32 %164, 2
  %168 = and i32 %158, 65535
  %169 = uitofp i32 %168 to float
  %170 = lshr i32 %158, 16
  %171 = uitofp i32 %170 to float
  %172 = and i32 %159, 32767
  %173 = uitofp i32 %172 to float
  %174 = fadd float %169, -3.276800e+04
  %175 = fadd float %171, -3.276800e+04
  %176 = fmul float %174, 0x3F00002000000000
  %177 = fmul float %175, 0x3F00002000000000
  %178 = fadd float %173, -1.638400e+04
  %179 = fmul float %178, 0x3F06A0F8E0000000
  %180 = and i32 %159, 32768
  %181 = icmp ne i32 %180, 0
  %182 = fadd float %176, %177
  %183 = fsub float %176, %177
  %184 = call float @dx.op.unary.f32(i32 6, float %182), !dx.precise !36  ; FAbs(value)
  %185 = call float @dx.op.unary.f32(i32 6, float %183), !dx.precise !36  ; FAbs(value)
  %186 = call float @dx.op.dot2.f32(i32 54, float 1.000000e+00, float 1.000000e+00, float %184, float %185), !dx.precise !36  ; Dot2(ax,ay,bx,by)
  %187 = fsub float 2.000000e+00, %186
  %188 = call float @dx.op.dot3.f32(i32 55, float %182, float %183, float %187, float %182, float %183, float %187), !dx.precise !36  ; Dot3(ax,ay,az,bx,by,bz)
  %189 = call float @dx.op.unary.f32(i32 25, float %188), !dx.precise !36  ; Rsqrt(value)
  %190 = fmul float %182, %189
  %191 = fmul float %183, %189
  %192 = fmul float %187, %189
  %193 = fadd float %192, 1.000000e+00
  %194 = fdiv float 1.000000e+00, %193
  %195 = fmul float %190, %191
  %196 = fmul float %194, %195
  %197 = fsub float -0.000000e+00, %196
  %198 = fmul float %190, %190
  %199 = fmul float %194, %198
  %200 = fsub float 1.000000e+00, %199
  %201 = fmul float %191, %191
  %202 = fmul float %194, %201
  %203 = fsub float 1.000000e+00, %202
  %204 = fmul float %179, %179
  %205 = fsub float 1.000000e+00, %204
  %206 = call float @dx.op.unary.f32(i32 24, float %205), !dx.precise !36  ; Sqrt(value)
  %207 = select i1 %181, float %179, float %206
  %208 = select i1 %181, float %206, float %179
  %209 = fmul float %207, %200
  %210 = fmul float %207, %197
  %211 = fmul float %190, %207
  %212 = fmul float %208, %197
  %213 = fmul float %208, %203
  %214 = fmul float %191, %208
  %215 = fsub float -0.000000e+00, %214
  %216 = fadd float %212, %209
  %217 = fadd float %210, %213
  %218 = fsub float %215, %211
  %219 = fmul float %191, %218
  %220 = fmul float %192, %217
  %221 = fsub float %219, %220
  %222 = fmul float %192, %216
  %223 = fmul float %190, %218
  %224 = fsub float %222, %223
  %225 = fmul float %190, %217
  %226 = fmul float %191, %216
  %227 = fsub float %225, %226
  %228 = lshr i32 %161, 16
  %229 = shl i32 %228, 23
  %230 = add i32 %229, -125829120
  %231 = bitcast i32 %230 to float
  %232 = lshr i32 %160, 16
  %233 = and i32 %160, 65535
  %234 = and i32 %161, 65535
  %235 = uitofp i32 %233 to float
  %236 = uitofp i32 %232 to float
  %237 = uitofp i32 %234 to float
  %238 = fadd float %235, -3.276800e+04
  %239 = fadd float %236, -3.276800e+04
  %240 = fadd float %237, -3.276800e+04
  %241 = fmul float %238, %231
  %242 = fmul float %239, %231
  %243 = fmul float %240, %231
  %244 = fmul float %241, %216
  %245 = fmul float %241, %217
  %246 = fmul float %241, %218
  %247 = fmul float %241, 0.000000e+00
  %248 = fmul float %242, %221
  %249 = fmul float %242, %224
  %250 = fmul float %242, %227
  %251 = fmul float %242, 0.000000e+00
  %252 = fmul float %243, %190
  %253 = fmul float %243, %191
  %254 = fmul float %243, %192
  %255 = fmul float %243, 0.000000e+00
  %256 = call float @dx.op.unary.f32(i32 6, float %241)  ; FAbs(value)
  %257 = call float @dx.op.unary.f32(i32 6, float %242)  ; FAbs(value)
  %258 = call float @dx.op.unary.f32(i32 6, float %243)  ; FAbs(value)
  %259 = fdiv fast float 1.000000e+00, %256
  %260 = fdiv fast float 1.000000e+00, %257
  %261 = fdiv fast float 1.000000e+00, %258
  %262 = and i32 %95, 1
  %263 = icmp ne i32 %262, 0
  %264 = select i1 %263, float -1.000000e+00, float 1.000000e+00
  %265 = icmp eq i32 %112, -1
  %266 = icmp eq i32 %117, 0
  %267 = or i1 %266, %265
  br i1 %267, label %275, label %268, !dx.controlflow.hints !45

; <label>:268                                     ; preds = %98
  %269 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %4, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %270 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %269, i32 %112, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %271 = extractvalue %dx.types.ResRet.f32 %270, 1
  %272 = bitcast float %271 to i32
  %273 = icmp ugt i32 %272, 16777215
  %274 = zext i1 %273 to i32
  br label %275

; <label>:275                                     ; preds = %268, %98
  %276 = phi i32 [ %274, %268 ], [ 0, %98 ]
  %277 = icmp eq i32 %118, -1
  br i1 %277, label %286, label %278, !dx.controlflow.hints !46

; <label>:278                                     ; preds = %275
  %279 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %4, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %280 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %279, i32 %118, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %281 = extractvalue %dx.types.ResRet.f32 %280, 2
  %282 = extractvalue %dx.types.ResRet.f32 %280, 3
  %283 = add i32 %118, 1
  %284 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %279, i32 %283, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %285 = extractvalue %dx.types.ResRet.f32 %284, 0
  br label %286

; <label>:286                                     ; preds = %278, %275
  %287 = phi float [ %281, %278 ], [ %149, %275 ]
  %288 = phi float [ %282, %278 ], [ %150, %275 ]
  %289 = phi float [ %285, %278 ], [ %151, %275 ]
  %290 = icmp eq i32 %124, -1
  br i1 %290, label %392, label %291, !dx.controlflow.hints !47

; <label>:291                                     ; preds = %286
  %292 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %4, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %293 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %292, i32 %124, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %294 = extractvalue %dx.types.ResRet.f32 %293, 0
  %295 = extractvalue %dx.types.ResRet.f32 %293, 1
  %296 = extractvalue %dx.types.ResRet.f32 %293, 2
  %297 = extractvalue %dx.types.ResRet.f32 %293, 3
  %298 = bitcast float %294 to i32
  %299 = bitcast float %295 to i32
  %300 = bitcast float %296 to i32
  %301 = bitcast float %297 to i32
  %302 = add i32 %124, 1
  %303 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %292, i32 %302, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %304 = extractvalue %dx.types.ResRet.f32 %303, 0
  %305 = extractvalue %dx.types.ResRet.f32 %303, 1
  %306 = extractvalue %dx.types.ResRet.f32 %303, 2
  %307 = and i32 %298, 65535
  %308 = uitofp i32 %307 to float
  %309 = lshr i32 %298, 16
  %310 = uitofp i32 %309 to float
  %311 = and i32 %299, 32767
  %312 = uitofp i32 %311 to float
  %313 = fadd float %308, -3.276800e+04
  %314 = fadd float %310, -3.276800e+04
  %315 = fmul float %313, 0x3F00002000000000
  %316 = fmul float %314, 0x3F00002000000000
  %317 = fadd float %312, -1.638400e+04
  %318 = fmul float %317, 0x3F06A0F8E0000000
  %319 = and i32 %299, 32768
  %320 = icmp ne i32 %319, 0
  %321 = fadd float %315, %316
  %322 = fsub float %315, %316
  %323 = call float @dx.op.unary.f32(i32 6, float %321), !dx.precise !36  ; FAbs(value)
  %324 = call float @dx.op.unary.f32(i32 6, float %322), !dx.precise !36  ; FAbs(value)
  %325 = call float @dx.op.dot2.f32(i32 54, float 1.000000e+00, float 1.000000e+00, float %323, float %324), !dx.precise !36  ; Dot2(ax,ay,bx,by)
  %326 = fsub float 2.000000e+00, %325
  %327 = call float @dx.op.dot3.f32(i32 55, float %321, float %322, float %326, float %321, float %322, float %326), !dx.precise !36  ; Dot3(ax,ay,az,bx,by,bz)
  %328 = call float @dx.op.unary.f32(i32 25, float %327), !dx.precise !36  ; Rsqrt(value)
  %329 = fmul float %321, %328
  %330 = fmul float %322, %328
  %331 = fmul float %326, %328
  %332 = fadd float %331, 1.000000e+00
  %333 = fdiv float 1.000000e+00, %332
  %334 = fmul float %329, %330
  %335 = fmul float %333, %334
  %336 = fsub float -0.000000e+00, %335
  %337 = fmul float %329, %329
  %338 = fmul float %333, %337
  %339 = fsub float 1.000000e+00, %338
  %340 = fmul float %330, %330
  %341 = fmul float %333, %340
  %342 = fsub float 1.000000e+00, %341
  %343 = fmul float %318, %318
  %344 = fsub float 1.000000e+00, %343
  %345 = call float @dx.op.unary.f32(i32 24, float %344), !dx.precise !36  ; Sqrt(value)
  %346 = select i1 %320, float %318, float %345
  %347 = select i1 %320, float %345, float %318
  %348 = fmul float %346, %339
  %349 = fmul float %346, %336
  %350 = fmul float %329, %346
  %351 = fmul float %347, %336
  %352 = fmul float %347, %342
  %353 = fmul float %330, %347
  %354 = fsub float -0.000000e+00, %353
  %355 = fadd float %351, %348
  %356 = fadd float %349, %352
  %357 = fsub float %354, %350
  %358 = fmul float %330, %357
  %359 = fmul float %331, %356
  %360 = fsub float %358, %359
  %361 = fmul float %331, %355
  %362 = fmul float %329, %357
  %363 = fsub float %361, %362
  %364 = fmul float %329, %356
  %365 = fmul float %330, %355
  %366 = fsub float %364, %365
  %367 = lshr i32 %301, 16
  %368 = shl i32 %367, 23
  %369 = add i32 %368, -125829120
  %370 = bitcast i32 %369 to float
  %371 = lshr i32 %300, 16
  %372 = and i32 %300, 65535
  %373 = and i32 %301, 65535
  %374 = uitofp i32 %372 to float
  %375 = uitofp i32 %371 to float
  %376 = uitofp i32 %373 to float
  %377 = fadd float %374, -3.276800e+04
  %378 = fadd float %375, -3.276800e+04
  %379 = fadd float %376, -3.276800e+04
  %380 = fmul float %377, %370
  %381 = fmul float %378, %370
  %382 = fmul float %379, %370
  %383 = fmul float %380, %355
  %384 = fmul float %380, %356
  %385 = fmul float %380, %357
  %386 = fmul float %381, %360
  %387 = fmul float %381, %363
  %388 = fmul float %381, %366
  %389 = fmul float %382, %329
  %390 = fmul float %382, %330
  %391 = fmul float %382, %331
  br label %441

; <label>:392                                     ; preds = %286
  %393 = fmul float %133, %244
  %394 = call float @dx.op.tertiary.f32(i32 46, float %245, float %134, float %393), !dx.precise !36  ; FMad(a,b,c)
  %395 = call float @dx.op.tertiary.f32(i32 46, float %246, float %135, float %394), !dx.precise !36  ; FMad(a,b,c)
  %396 = call float @dx.op.tertiary.f32(i32 46, float %247, float %136, float %395), !dx.precise !36  ; FMad(a,b,c)
  %397 = fmul float %139, %244
  %398 = call float @dx.op.tertiary.f32(i32 46, float %245, float %140, float %397), !dx.precise !36  ; FMad(a,b,c)
  %399 = call float @dx.op.tertiary.f32(i32 46, float %246, float %141, float %398), !dx.precise !36  ; FMad(a,b,c)
  %400 = call float @dx.op.tertiary.f32(i32 46, float %247, float %142, float %399), !dx.precise !36  ; FMad(a,b,c)
  %401 = fmul float %145, %244
  %402 = call float @dx.op.tertiary.f32(i32 46, float %245, float %146, float %401), !dx.precise !36  ; FMad(a,b,c)
  %403 = call float @dx.op.tertiary.f32(i32 46, float %246, float %147, float %402), !dx.precise !36  ; FMad(a,b,c)
  %404 = call float @dx.op.tertiary.f32(i32 46, float %247, float %148, float %403), !dx.precise !36  ; FMad(a,b,c)
  %405 = fmul float %133, %248
  %406 = call float @dx.op.tertiary.f32(i32 46, float %249, float %134, float %405), !dx.precise !36  ; FMad(a,b,c)
  %407 = call float @dx.op.tertiary.f32(i32 46, float %250, float %135, float %406), !dx.precise !36  ; FMad(a,b,c)
  %408 = call float @dx.op.tertiary.f32(i32 46, float %251, float %136, float %407), !dx.precise !36  ; FMad(a,b,c)
  %409 = fmul float %139, %248
  %410 = call float @dx.op.tertiary.f32(i32 46, float %249, float %140, float %409), !dx.precise !36  ; FMad(a,b,c)
  %411 = call float @dx.op.tertiary.f32(i32 46, float %250, float %141, float %410), !dx.precise !36  ; FMad(a,b,c)
  %412 = call float @dx.op.tertiary.f32(i32 46, float %251, float %142, float %411), !dx.precise !36  ; FMad(a,b,c)
  %413 = fmul float %145, %248
  %414 = call float @dx.op.tertiary.f32(i32 46, float %249, float %146, float %413), !dx.precise !36  ; FMad(a,b,c)
  %415 = call float @dx.op.tertiary.f32(i32 46, float %250, float %147, float %414), !dx.precise !36  ; FMad(a,b,c)
  %416 = call float @dx.op.tertiary.f32(i32 46, float %251, float %148, float %415), !dx.precise !36  ; FMad(a,b,c)
  %417 = fmul float %133, %252
  %418 = call float @dx.op.tertiary.f32(i32 46, float %253, float %134, float %417), !dx.precise !36  ; FMad(a,b,c)
  %419 = call float @dx.op.tertiary.f32(i32 46, float %254, float %135, float %418), !dx.precise !36  ; FMad(a,b,c)
  %420 = call float @dx.op.tertiary.f32(i32 46, float %255, float %136, float %419), !dx.precise !36  ; FMad(a,b,c)
  %421 = fmul float %139, %252
  %422 = call float @dx.op.tertiary.f32(i32 46, float %253, float %140, float %421), !dx.precise !36  ; FMad(a,b,c)
  %423 = call float @dx.op.tertiary.f32(i32 46, float %254, float %141, float %422), !dx.precise !36  ; FMad(a,b,c)
  %424 = call float @dx.op.tertiary.f32(i32 46, float %255, float %142, float %423), !dx.precise !36  ; FMad(a,b,c)
  %425 = fmul float %145, %252
  %426 = call float @dx.op.tertiary.f32(i32 46, float %253, float %146, float %425), !dx.precise !36  ; FMad(a,b,c)
  %427 = call float @dx.op.tertiary.f32(i32 46, float %254, float %147, float %426), !dx.precise !36  ; FMad(a,b,c)
  %428 = call float @dx.op.tertiary.f32(i32 46, float %255, float %148, float %427), !dx.precise !36  ; FMad(a,b,c)
  %429 = fmul float %133, %165
  %430 = call float @dx.op.tertiary.f32(i32 46, float %166, float %134, float %429), !dx.precise !36  ; FMad(a,b,c)
  %431 = call float @dx.op.tertiary.f32(i32 46, float %167, float %135, float %430), !dx.precise !36  ; FMad(a,b,c)
  %432 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %136, float %431), !dx.precise !36  ; FMad(a,b,c)
  %433 = fmul float %139, %165
  %434 = call float @dx.op.tertiary.f32(i32 46, float %166, float %140, float %433), !dx.precise !36  ; FMad(a,b,c)
  %435 = call float @dx.op.tertiary.f32(i32 46, float %167, float %141, float %434), !dx.precise !36  ; FMad(a,b,c)
  %436 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %142, float %435), !dx.precise !36  ; FMad(a,b,c)
  %437 = fmul float %145, %165
  %438 = call float @dx.op.tertiary.f32(i32 46, float %166, float %146, float %437), !dx.precise !36  ; FMad(a,b,c)
  %439 = call float @dx.op.tertiary.f32(i32 46, float %167, float %147, float %438), !dx.precise !36  ; FMad(a,b,c)
  %440 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %148, float %439), !dx.precise !36  ; FMad(a,b,c)
  br label %441

; <label>:441                                     ; preds = %392, %291, %86
  %442 = phi float [ %259, %392 ], [ %259, %291 ], [ 0.000000e+00, %86 ]
  %443 = phi float [ %260, %392 ], [ %260, %291 ], [ 0.000000e+00, %86 ]
  %444 = phi float [ %261, %392 ], [ %261, %291 ], [ 0.000000e+00, %86 ]
  %445 = phi float [ %264, %392 ], [ %264, %291 ], [ 0.000000e+00, %86 ]
  %446 = phi float [ %287, %392 ], [ %287, %291 ], [ 0.000000e+00, %86 ]
  %447 = phi float [ %288, %392 ], [ %288, %291 ], [ 0.000000e+00, %86 ]
  %448 = phi float [ %289, %392 ], [ %289, %291 ], [ 0.000000e+00, %86 ]
  %449 = phi float [ %125, %392 ], [ %125, %291 ], [ 0.000000e+00, %86 ]
  %450 = phi float [ %128, %392 ], [ %128, %291 ], [ 0.000000e+00, %86 ]
  %451 = phi float [ %129, %392 ], [ %129, %291 ], [ 0.000000e+00, %86 ]
  %452 = phi float [ %130, %392 ], [ %130, %291 ], [ 0.000000e+00, %86 ]
  %453 = phi float [ %244, %392 ], [ %244, %291 ], [ 0.000000e+00, %86 ]
  %454 = phi float [ %245, %392 ], [ %245, %291 ], [ 0.000000e+00, %86 ]
  %455 = phi float [ %246, %392 ], [ %246, %291 ], [ 0.000000e+00, %86 ]
  %456 = phi float [ %248, %392 ], [ %248, %291 ], [ 0.000000e+00, %86 ]
  %457 = phi float [ %249, %392 ], [ %249, %291 ], [ 0.000000e+00, %86 ]
  %458 = phi float [ %250, %392 ], [ %250, %291 ], [ 0.000000e+00, %86 ]
  %459 = phi float [ %252, %392 ], [ %252, %291 ], [ 0.000000e+00, %86 ]
  %460 = phi float [ %253, %392 ], [ %253, %291 ], [ 0.000000e+00, %86 ]
  %461 = phi float [ %254, %392 ], [ %254, %291 ], [ 0.000000e+00, %86 ]
  %462 = phi float [ %165, %392 ], [ %165, %291 ], [ 0.000000e+00, %86 ]
  %463 = phi float [ %166, %392 ], [ %166, %291 ], [ 0.000000e+00, %86 ]
  %464 = phi float [ %167, %392 ], [ %167, %291 ], [ 0.000000e+00, %86 ]
  %465 = phi float [ %396, %392 ], [ %383, %291 ], [ 0.000000e+00, %86 ]
  %466 = phi float [ %400, %392 ], [ %384, %291 ], [ 0.000000e+00, %86 ]
  %467 = phi float [ %404, %392 ], [ %385, %291 ], [ 0.000000e+00, %86 ]
  %468 = phi float [ %408, %392 ], [ %386, %291 ], [ 0.000000e+00, %86 ]
  %469 = phi float [ %412, %392 ], [ %387, %291 ], [ 0.000000e+00, %86 ]
  %470 = phi float [ %416, %392 ], [ %388, %291 ], [ 0.000000e+00, %86 ]
  %471 = phi float [ %420, %392 ], [ %389, %291 ], [ 0.000000e+00, %86 ]
  %472 = phi float [ %424, %392 ], [ %390, %291 ], [ 0.000000e+00, %86 ]
  %473 = phi float [ %428, %392 ], [ %391, %291 ], [ 0.000000e+00, %86 ]
  %474 = phi float [ %432, %392 ], [ %304, %291 ], [ 0.000000e+00, %86 ]
  %475 = phi float [ %436, %392 ], [ %305, %291 ], [ 0.000000e+00, %86 ]
  %476 = phi float [ %440, %392 ], [ %306, %291 ], [ 0.000000e+00, %86 ]
  %477 = phi i32 [ %276, %392 ], [ %276, %291 ], [ 0, %86 ]
  %478 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %6, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %479 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %478, i32 %97, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %480 = extractvalue %dx.types.ResRet.f32 %479, 0
  %481 = bitcast float %480 to i32
  %482 = icmp ne i32 %477, 0
  %483 = select i1 %482, float 1.000000e+00, float 0.000000e+00
  %484 = fmul float %446, %453
  %485 = fmul float %446, %454
  %486 = fmul float %446, %455
  %487 = fmul float %447, %456
  %488 = fmul float %447, %457
  %489 = fmul float %447, %458
  %490 = fadd float %484, %487
  %491 = fadd float %485, %488
  %492 = fadd float %486, %489
  %493 = fmul float %448, %459
  %494 = fmul float %448, %460
  %495 = fmul float %448, %461
  %496 = fadd float %490, %493
  %497 = fadd float %491, %494
  %498 = fadd float %492, %495
  %499 = fadd float %44, %462
  %500 = fadd float %45, %463
  %501 = fadd float %46, %464
  %502 = fsub float %450, %40
  %503 = fsub float %451, %41
  %504 = fsub float %452, %42
  %505 = fmul float %502, 2.097152e+06
  %506 = fmul float %503, 2.097152e+06
  %507 = fmul float %504, 2.097152e+06
  %508 = fadd float %505, %499
  %509 = fadd float %506, %500
  %510 = fadd float %507, %501
  %511 = fadd float %496, %508
  %512 = fadd float %497, %509
  %513 = fadd float %498, %510
  %514 = fmul fast float %511, %511
  %515 = fmul fast float %512, %512
  %516 = fadd fast float %515, %514
  %517 = fmul fast float %513, %513
  %518 = fadd fast float %516, %517
  %519 = call float @dx.op.unary.f32(i32 24, float %518)  ; Sqrt(value)
  %520 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %12, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %521 = extractvalue %dx.types.CBufRet.f32 %520, 0
  %522 = fsub fast float %519, %521
  %523 = extractvalue %dx.types.CBufRet.f32 %520, 1
  %524 = fmul fast float %522, %523
  %525 = call float @dx.op.unary.f32(i32 7, float %524)  ; Saturate(value)
  %526 = fsub fast float 1.000000e+00, %525
  %527 = extractvalue %dx.types.CBufRet.f32 %520, 2
  %528 = extractvalue %dx.types.CBufRet.f32 %520, 3
  %529 = fsub float %527, %528
  %530 = fmul float %483, %529
  %531 = fadd float %528, %530
  %532 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %12, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %533 = extractvalue %dx.types.CBufRet.f32 %532, 3
  %534 = fmul float %449, %533
  %535 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %12, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %536 = extractvalue %dx.types.CBufRet.f32 %535, 0
  %537 = extractvalue %dx.types.CBufRet.f32 %535, 1
  %538 = extractvalue %dx.types.CBufRet.f32 %535, 2
  %539 = fsub float %511, %536
  %540 = fsub float %512, %537
  %541 = fsub float %513, %538
  %542 = fmul float %539, %539
  %543 = fmul float %540, %540
  %544 = fadd float %542, %543
  %545 = fmul float %541, %541
  %546 = fadd float %545, %544
  %547 = call float @dx.op.unary.f32(i32 24, float %546), !dx.precise !36  ; Sqrt(value)
  %548 = fadd float %547, %534
  %549 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %12, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %550 = extractvalue %dx.types.CBufRet.f32 %549, 0
  %551 = extractvalue %dx.types.CBufRet.f32 %549, 1
  %552 = extractvalue %dx.types.CBufRet.f32 %549, 2
  %553 = fsub float %511, %550
  %554 = fsub float %512, %551
  %555 = fsub float %513, %552
  %556 = fmul float %553, %553
  %557 = fmul float %554, %554
  %558 = fadd float %556, %557
  %559 = fmul float %555, %555
  %560 = fadd float %559, %558
  %561 = call float @dx.op.unary.f32(i32 24, float %560), !dx.precise !36  ; Sqrt(value)
  %562 = fadd float %534, %561
  %563 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %12, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %564 = extractvalue %dx.types.CBufRet.f32 %563, 0
  %565 = extractvalue %dx.types.CBufRet.f32 %563, 1
  %566 = extractvalue %dx.types.CBufRet.f32 %563, 2
  %567 = extractvalue %dx.types.CBufRet.f32 %532, 0
  %568 = extractvalue %dx.types.CBufRet.f32 %532, 1
  %569 = extractvalue %dx.types.CBufRet.f32 %532, 2
  %570 = fcmp ogt float %548, %567
  %571 = fcmp ogt float %548, %568
  %572 = fcmp ogt float %548, %569
  %573 = uitofp i1 %570 to float
  %574 = uitofp i1 %571 to float
  %575 = uitofp i1 %572 to float
  %576 = call float @dx.op.dot3.f32(i32 55, float %573, float %574, float %575, float %564, float %565, float %566), !dx.precise !36  ; Dot3(ax,ay,az,bx,by,bz)
  %577 = extractvalue %dx.types.CBufRet.f32 %535, 3
  %578 = fmul float %576, %577
  %579 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %12, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %580 = extractvalue %dx.types.CBufRet.f32 %579, 0
  %581 = extractvalue %dx.types.CBufRet.f32 %579, 1
  %582 = extractvalue %dx.types.CBufRet.f32 %579, 2
  %583 = fcmp ogt float %562, %580
  %584 = fcmp ogt float %562, %581
  %585 = fcmp ogt float %562, %582
  %586 = uitofp i1 %583 to float
  %587 = uitofp i1 %584 to float
  %588 = uitofp i1 %585 to float
  %589 = call float @dx.op.dot3.f32(i32 55, float %586, float %587, float %588, float %564, float %565, float %566), !dx.precise !36  ; Dot3(ax,ay,az,bx,by,bz)
  %590 = extractvalue %dx.types.CBufRet.f32 %549, 3
  %591 = fmul float %589, %590
  %592 = fadd float %578, %591
  %593 = call float @dx.op.unary.f32(i32 6, float %592), !dx.precise !36  ; FAbs(value)
  %594 = fcmp olt float %593, 0x3FEFF7CEE0000000
  %595 = uitofp i1 %594 to float
  %596 = fmul float %531, %595
  %597 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %10, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %598 = extractvalue %dx.types.CBufRet.i32 %597, 3
  %599 = add i32 %598, %13
  %600 = shl i32 %599, 1
  %601 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 10, i32 1033 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<4xF32>
  %602 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %601, i32 %600, i32 undef)  ; BufferLoad(srv,index,wot)
  %603 = extractvalue %dx.types.ResRet.f32 %602, 0
  %604 = extractvalue %dx.types.ResRet.f32 %602, 1
  %605 = extractvalue %dx.types.ResRet.f32 %602, 2
  %606 = or i32 %600, 1
  %607 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %601, i32 %606, i32 undef)  ; BufferLoad(srv,index,wot)
  %608 = extractvalue %dx.types.ResRet.f32 %607, 0
  %609 = extractvalue %dx.types.ResRet.f32 %607, 1
  %610 = extractvalue %dx.types.ResRet.f32 %607, 2
  %611 = extractvalue %dx.types.ResRet.f32 %607, 3
  %612 = fmul fast float %609, %605
  %613 = fmul fast float %610, %604
  %614 = fsub fast float %612, %613
  %615 = fmul fast float %610, %603
  %616 = fmul fast float %608, %605
  %617 = fsub fast float %615, %616
  %618 = fmul fast float %608, %604
  %619 = fmul fast float %609, %603
  %620 = fsub fast float %618, %619
  %621 = fmul fast float %614, %611
  %622 = fmul fast float %617, %611
  %623 = fmul fast float %620, %611
  %624 = fmul fast float %622, %610
  %625 = fmul fast float %623, %609
  %626 = fsub fast float %624, %625
  %627 = fmul fast float %623, %608
  %628 = fmul fast float %621, %610
  %629 = fsub fast float %627, %628
  %630 = fmul fast float %621, %609
  %631 = fmul fast float %622, %608
  %632 = fsub fast float %630, %631
  %633 = fmul fast float %626, %611
  %634 = fmul fast float %629, %611
  %635 = fmul fast float %632, %611
  %636 = fmul fast float %453, %442
  %637 = fmul fast float %454, %442
  %638 = fmul fast float %455, %442
  %639 = fmul fast float %456, %443
  %640 = fmul fast float %457, %443
  %641 = fmul fast float %458, %443
  %642 = fmul fast float %459, %444
  %643 = fmul fast float %460, %444
  %644 = fmul fast float %461, %444
  %645 = fmul fast float %633, %636
  %646 = call float @dx.op.tertiary.f32(i32 46, float %634, float %639, float %645)  ; FMad(a,b,c)
  %647 = call float @dx.op.tertiary.f32(i32 46, float %635, float %642, float %646)  ; FMad(a,b,c)
  %648 = fmul fast float %633, %637
  %649 = call float @dx.op.tertiary.f32(i32 46, float %634, float %640, float %648)  ; FMad(a,b,c)
  %650 = call float @dx.op.tertiary.f32(i32 46, float %635, float %643, float %649)  ; FMad(a,b,c)
  %651 = fmul fast float %633, %638
  %652 = call float @dx.op.tertiary.f32(i32 46, float %634, float %641, float %651)  ; FMad(a,b,c)
  %653 = call float @dx.op.tertiary.f32(i32 46, float %635, float %644, float %652)  ; FMad(a,b,c)
  %654 = fmul fast float %608, %636
  %655 = call float @dx.op.tertiary.f32(i32 46, float %609, float %639, float %654)  ; FMad(a,b,c)
  %656 = call float @dx.op.tertiary.f32(i32 46, float %610, float %642, float %655)  ; FMad(a,b,c)
  %657 = fmul fast float %608, %637
  %658 = call float @dx.op.tertiary.f32(i32 46, float %609, float %640, float %657)  ; FMad(a,b,c)
  %659 = call float @dx.op.tertiary.f32(i32 46, float %610, float %643, float %658)  ; FMad(a,b,c)
  %660 = fmul fast float %608, %638
  %661 = call float @dx.op.tertiary.f32(i32 46, float %609, float %641, float %660)  ; FMad(a,b,c)
  %662 = call float @dx.op.tertiary.f32(i32 46, float %610, float %644, float %661)  ; FMad(a,b,c)
  %663 = fmul fast float %611, %445
  %664 = fmul float %16, %453
  %665 = fmul float %16, %454
  %666 = fmul float %16, %455
  %667 = fmul float %17, %456
  %668 = fmul float %17, %457
  %669 = fmul float %17, %458
  %670 = fadd float %664, %667
  %671 = fadd float %665, %668
  %672 = fadd float %666, %669
  %673 = fmul float %18, %459
  %674 = fmul float %18, %460
  %675 = fmul float %18, %461
  %676 = fadd float %670, %673
  %677 = fadd float %671, %674
  %678 = fadd float %672, %675
  %679 = fadd float %676, %508
  %680 = fadd float %677, %509
  %681 = fadd float %678, %510
  %682 = fmul float %679, %596
  %683 = fmul float %680, %596
  %684 = fmul float %681, %596
  %685 = extractvalue %dx.types.CBufRet.i32 %597, 1
  %686 = add i32 %685, -1
  %687 = call i32 @dx.op.binary.i32(i32 40, i32 0, i32 %686)  ; UMin(a,b)
  %688 = mul i32 %599, %685
  %689 = add i32 %688, %687
  %690 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 10, i32 521 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<2xF32>
  %691 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %690, i32 %689, i32 undef)  ; BufferLoad(srv,index,wot)
  %692 = extractvalue %dx.types.ResRet.f32 %691, 0
  %693 = extractvalue %dx.types.ResRet.f32 %691, 1
  %694 = fadd float %682, 0.000000e+00
  %695 = fadd float %683, 0.000000e+00
  %696 = fadd float %684, 0.000000e+00
  %697 = fmul float %20, %694
  %698 = call float @dx.op.tertiary.f32(i32 46, float %695, float %25, float %697), !dx.precise !36  ; FMad(a,b,c)
  %699 = call float @dx.op.tertiary.f32(i32 46, float %696, float %30, float %698), !dx.precise !36  ; FMad(a,b,c)
  %700 = call float @dx.op.tertiary.f32(i32 46, float %596, float %35, float %699), !dx.precise !36  ; FMad(a,b,c)
  %701 = fmul float %21, %694
  %702 = call float @dx.op.tertiary.f32(i32 46, float %695, float %26, float %701), !dx.precise !36  ; FMad(a,b,c)
  %703 = call float @dx.op.tertiary.f32(i32 46, float %696, float %31, float %702), !dx.precise !36  ; FMad(a,b,c)
  %704 = call float @dx.op.tertiary.f32(i32 46, float %596, float %36, float %703), !dx.precise !36  ; FMad(a,b,c)
  %705 = fmul float %22, %694
  %706 = call float @dx.op.tertiary.f32(i32 46, float %695, float %27, float %705), !dx.precise !36  ; FMad(a,b,c)
  %707 = call float @dx.op.tertiary.f32(i32 46, float %696, float %32, float %706), !dx.precise !36  ; FMad(a,b,c)
  %708 = call float @dx.op.tertiary.f32(i32 46, float %596, float %37, float %707), !dx.precise !36  ; FMad(a,b,c)
  %709 = fmul float %23, %694
  %710 = call float @dx.op.tertiary.f32(i32 46, float %695, float %28, float %709), !dx.precise !36  ; FMad(a,b,c)
  %711 = call float @dx.op.tertiary.f32(i32 46, float %696, float %33, float %710), !dx.precise !36  ; FMad(a,b,c)
  %712 = call float @dx.op.tertiary.f32(i32 46, float %596, float %38, float %711), !dx.precise !36  ; FMad(a,b,c)
  call void @dx.op.storeOutput.f32(i32 5, i32 7, i32 0, i8 0, float %700)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 7, i32 0, i8 1, float %704)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 7, i32 0, i8 2, float %708)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 7, i32 0, i8 3, float %712)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 5, i32 0, i8 0, float %682)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 5, i32 0, i8 1, float %683)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 5, i32 0, i8 2, float %684)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %647)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %650)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %653)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %656)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %659)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %662)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float %663)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %526)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float %596)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 2, float %592)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 3, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 0, float %692)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 1, float %693)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 2, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 3, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.i32(i32 5, i32 4, i32 0, i8 0, i32 %94)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  %713 = and i32 %481, 32
  %714 = icmp eq i32 %713, 0
  br i1 %714, label %759, label %715, !dx.controlflow.hints !48

; <label>:715                                     ; preds = %441
  %716 = fmul float %16, %465
  %717 = fmul float %16, %466
  %718 = fmul float %16, %467
  %719 = fmul float %17, %468
  %720 = fmul float %17, %469
  %721 = fmul float %17, %470
  %722 = fadd float %716, %719
  %723 = fadd float %717, %720
  %724 = fadd float %718, %721
  %725 = fmul float %18, %471
  %726 = fmul float %18, %472
  %727 = fmul float %18, %473
  %728 = fadd float %722, %725
  %729 = fadd float %723, %726
  %730 = fadd float %724, %727
  %731 = fadd float %68, %474
  %732 = fadd float %69, %475
  %733 = fadd float %70, %476
  %734 = fadd float %505, %731
  %735 = fadd float %506, %732
  %736 = fadd float %507, %733
  %737 = fadd float %728, %734
  %738 = fadd float %729, %735
  %739 = fadd float %730, %736
  %740 = fadd float %737, 0.000000e+00
  %741 = fadd float %738, 0.000000e+00
  %742 = fadd float %739, 0.000000e+00
  %743 = fmul float %48, %740
  %744 = call float @dx.op.tertiary.f32(i32 46, float %741, float %53, float %743), !dx.precise !36  ; FMad(a,b,c)
  %745 = call float @dx.op.tertiary.f32(i32 46, float %742, float %58, float %744), !dx.precise !36  ; FMad(a,b,c)
  %746 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %63, float %745), !dx.precise !36  ; FMad(a,b,c)
  %747 = fmul float %49, %740
  %748 = call float @dx.op.tertiary.f32(i32 46, float %741, float %54, float %747), !dx.precise !36  ; FMad(a,b,c)
  %749 = call float @dx.op.tertiary.f32(i32 46, float %742, float %59, float %748), !dx.precise !36  ; FMad(a,b,c)
  %750 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %64, float %749), !dx.precise !36  ; FMad(a,b,c)
  %751 = fmul float %50, %740
  %752 = call float @dx.op.tertiary.f32(i32 46, float %741, float %55, float %751), !dx.precise !36  ; FMad(a,b,c)
  %753 = call float @dx.op.tertiary.f32(i32 46, float %742, float %60, float %752), !dx.precise !36  ; FMad(a,b,c)
  %754 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %65, float %753), !dx.precise !36  ; FMad(a,b,c)
  %755 = fmul float %51, %740
  %756 = call float @dx.op.tertiary.f32(i32 46, float %741, float %56, float %755), !dx.precise !36  ; FMad(a,b,c)
  %757 = call float @dx.op.tertiary.f32(i32 46, float %742, float %61, float %756), !dx.precise !36  ; FMad(a,b,c)
  %758 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %66, float %757), !dx.precise !36  ; FMad(a,b,c)
  br label %759

; <label>:759                                     ; preds = %715, %441
  %760 = phi float [ %746, %715 ], [ 0.000000e+00, %441 ]
  %761 = phi float [ %750, %715 ], [ 0.000000e+00, %441 ]
  %762 = phi float [ %754, %715 ], [ 0.000000e+00, %441 ]
  %763 = phi float [ %758, %715 ], [ 1.000000e+00, %441 ]
  call void @dx.op.storeOutput.f32(i32 5, i32 6, i32 0, i8 0, float %760)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 6, i32 0, i8 1, float %761)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 6, i32 0, i8 2, float %762)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 6, i32 0, i8 3, float %763)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.loadInput.i32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind
declare void @dx.op.storeOutput.i32(i32, i32, i32, i8, i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot2.f32(i32, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.binary.i32(i32, i32, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.viewIdState = !{!19}
!dx.entryPoints = !{!20}

!0 = !{!"dxc(private) 1.7.0.0 (private, 00000000)"}
!1 = !{i32 1, i32 6}
!2 = !{i32 1, i32 7}
!3 = !{!"vs", i32 6, i32 6}
!4 = !{!5, null, !15, null}
!5 = !{!6, !8, !9, !10, !12, !14}
!6 = !{i32 0, %"class.StructuredBuffer<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 12, i32 0, !7}
!7 = !{i32 1, i32 16}
!8 = !{i32 1, %"class.StructuredBuffer<vector<float, 4> >"* undef, !"", i32 0, i32 1, i32 1, i32 12, i32 0, !7}
!9 = !{i32 2, %"class.StructuredBuffer<vector<float, 4> >"* undef, !"", i32 0, i32 2, i32 1, i32 12, i32 0, !7}
!10 = !{i32 3, %"class.StructuredBuffer<unsigned int>"* undef, !"", i32 0, i32 3, i32 1, i32 12, i32 0, !11}
!11 = !{i32 1, i32 4}
!12 = !{i32 4, %"class.Buffer<vector<float, 2> >"* undef, !"", i32 0, i32 4, i32 1, i32 10, i32 0, !13}
!13 = !{i32 0, i32 9}
!14 = !{i32 5, %"class.Buffer<vector<float, 4> >"* undef, !"", i32 0, i32 5, i32 1, i32 10, i32 0, !13}
!15 = !{!16, !17, !18}
!16 = !{i32 0, %"$Globals"* undef, !"", i32 0, i32 0, i32 1, i32 128, null}
!17 = !{i32 1, %hostlayout.UniformBufferConstants_View* undef, !"", i32 0, i32 1, i32 1, i32 5388, null}
!18 = !{i32 2, %UniformBufferConstants_LocalVF* undef, !"", i32 0, i32 2, i32 1, i32 60, null}
!19 = !{[15 x i32] [i32 13, i32 32, i32 -9437184, i32 -9437184, i32 -9437184, i32 0, i32 -9369609, i32 0, i32 0, i32 0, i32 -9369609, i32 0, i32 0, i32 0, i32 12535]}
!20 = !{void ()* @Main, !"Main", !21, !4, !43}
!21 = !{!22, !31, null}
!22 = !{!23, !26, !29, !30}
!23 = !{i32 0, !"ATTRIBUTE", i8 9, i8 0, !24, i8 0, i32 1, i8 4, i32 0, i8 0, !25}
!24 = !{i32 0}
!25 = !{i32 3, i32 7}
!26 = !{i32 1, !"ATTRIBUTE", i8 5, i8 0, !27, i8 0, i32 1, i8 1, i32 1, i8 0, !28}
!27 = !{i32 13}
!28 = !{i32 3, i32 1}
!29 = !{i32 2, !"SV_InstanceID", i8 5, i8 2, !24, i8 0, i32 1, i8 1, i32 2, i8 0, !28}
!30 = !{i32 3, !"SV_VertexID", i8 5, i8 1, !24, i8 0, i32 1, i8 1, i32 3, i8 0, !28}
!31 = !{!32, !34, !35, !37, !38, !39, !41, !42}
!32 = !{i32 0, !"TEXCOORD10_centroid", i8 9, i8 0, !24, i8 2, i32 1, i8 4, i32 0, i8 0, !33}
!33 = !{i32 3, i32 15}
!34 = !{i32 1, !"TEXCOORD11_centroid", i8 9, i8 0, !24, i8 2, i32 1, i8 4, i32 1, i8 0, !33}
!35 = !{i32 2, !"COLOR", i8 9, i8 0, !36, i8 1, i32 1, i8 4, i32 2, i8 0, !33}
!36 = !{i32 1}
!37 = !{i32 3, !"TEXCOORD", i8 9, i8 0, !24, i8 2, i32 1, i8 4, i32 3, i8 0, !33}
!38 = !{i32 4, !"PRIMITIVE_ID", i8 5, i8 0, !24, i8 1, i32 1, i8 1, i32 4, i8 0, !28}
!39 = !{i32 5, !"TEXCOORD", i8 9, i8 0, !40, i8 2, i32 1, i8 3, i32 5, i8 0, !25}
!40 = !{i32 9}
!41 = !{i32 6, !"VELOCITY_PREV_POS", i8 9, i8 0, !24, i8 2, i32 1, i8 4, i32 6, i8 0, !33}
!42 = !{i32 7, !"SV_Position", i8 9, i8 3, !24, i8 4, i32 1, i8 4, i32 7, i8 0, !33}
!43 = !{i32 0, i64 16, i32 5, !24}
!44 = distinct !{!44, !"dx.controlflow.hints", i32 1}
!45 = distinct !{!45, !"dx.controlflow.hints", i32 1}
!46 = distinct !{!46, !"dx.controlflow.hints", i32 1}
!47 = distinct !{!47, !"dx.controlflow.hints", i32 1}
!48 = distinct !{!48, !"dx.controlflow.hints", i32 2}
