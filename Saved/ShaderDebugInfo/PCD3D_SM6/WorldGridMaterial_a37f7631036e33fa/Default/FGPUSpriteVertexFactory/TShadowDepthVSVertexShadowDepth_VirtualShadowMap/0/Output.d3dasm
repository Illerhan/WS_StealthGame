;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_VertexID              0   x           0   VERTID    uint   x   
; SV_InstanceID            0   x           1   INSTID    uint   x   
; ATTRIBUTE                0   xy          2     NONE   float   xy  
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD                 6   x           0     NONE   float   x   
; TEXCOORD                 8   x           1     NONE    uint   x   
; SV_Position              0   xyzw        2      POS   float   xyzw
; SV_ClipDistance          0   xyzw        3  CLIPDST   float   xyzw
;
; shader hash: 11b104807e6f18304b077960ad7bc026
;
; Pipeline Runtime Information: 
;
; Vertex Shader
; OutputPositionPresent=1
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_VertexID              0                              
; SV_InstanceID            0                              
; ATTRIBUTE                0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD                 6                 linear       
; TEXCOORD                 8        nointerpolation       
; SV_Position              0          noperspective       
; SV_ClipDistance          0                 linear       
;
; Buffer Definitions:
;
; cbuffer $Globals
; {
;
;   struct $Globals
;   {
;
;       float4 DepthOfFieldParams;                    ; Offset:    0
;       uint bSceneLightingChannelsValid;             ; Offset:   16
;       uint ParticleIndicesOffset;                   ; Offset:   20
;       uint4 PageConstants;                          ; Offset:   32
;       uint MaxNodes;                                ; Offset:   48
;       uint MaxVisibleClusters;                      ; Offset:   52
;       uint RenderFlags;                             ; Offset:   56
;       float RayTracingCutError;                     ; Offset:   60
;       uint DebugFlags;                              ; Offset:   64
;       uint bUseGpuSceneInstancing;                  ; Offset:   68
;   
;   } $Globals;                                       ; Offset:    0 Size:    72
;
; }
;
; cbuffer UniformBufferConstants_View
; {
;
;   struct hostlayout.UniformBufferConstants_View
;   {
;
;       row_major float4x4 View_TranslatedWorldToClip;; Offset:    0
;       row_major float4x4 View_TranslatedWorldToSubpixelClip;; Offset:   64
;       row_major float4x4 View_RelativeWorldToClip;  ; Offset:  128
;       row_major float4x4 View_ClipToRelativeWorld;  ; Offset:  192
;       row_major float4x4 View_TranslatedWorldToView;; Offset:  256
;       row_major float4x4 View_ViewToTranslatedWorld;; Offset:  320
;       row_major float4x4 View_TranslatedWorldToCameraView;; Offset:  384
;       row_major float4x4 View_CameraViewToTranslatedWorld;; Offset:  448
;       row_major float4x4 View_ViewToClip;           ; Offset:  512
;       row_major float4x4 View_ViewToClipNoAA;       ; Offset:  576
;       row_major float4x4 View_ClipToView;           ; Offset:  640
;       row_major float4x4 View_ClipToTranslatedWorld;; Offset:  704
;       row_major float4x4 View_SVPositionToTranslatedWorld;; Offset:  768
;       row_major float4x4 View_ScreenToRelativeWorld;; Offset:  832
;       row_major float4x4 View_ScreenToTranslatedWorld;; Offset:  896
;       row_major float4x4 View_MobileMultiviewShadowTransform;; Offset:  960
;       float3 View_ViewTilePosition;                 ; Offset: 1024
;       float PrePadding_View_1036;                   ; Offset: 1036
;       float3 View_MatrixTilePosition;               ; Offset: 1040
;       float PrePadding_View_1052;                   ; Offset: 1052
;       float3 View_ViewForward;                      ; Offset: 1056
;       float PrePadding_View_1068;                   ; Offset: 1068
;       float3 View_ViewUp;                           ; Offset: 1072
;       float PrePadding_View_1084;                   ; Offset: 1084
;       float3 View_ViewRight;                        ; Offset: 1088
;       float PrePadding_View_1100;                   ; Offset: 1100
;       float3 View_HMDViewNoRollUp;                  ; Offset: 1104
;       float PrePadding_View_1116;                   ; Offset: 1116
;       float3 View_HMDViewNoRollRight;               ; Offset: 1120
;       float PrePadding_View_1132;                   ; Offset: 1132
;       float4 View_InvDeviceZToWorldZTransform;      ; Offset: 1136
;       float4 View_ScreenPositionScaleBias;          ; Offset: 1152
;       float3 View_RelativeWorldCameraOrigin;        ; Offset: 1168
;       float PrePadding_View_1180;                   ; Offset: 1180
;       float3 View_TranslatedWorldCameraOrigin;      ; Offset: 1184
;       float PrePadding_View_1196;                   ; Offset: 1196
;       float3 View_RelativeWorldViewOrigin;          ; Offset: 1200
;       float PrePadding_View_1212;                   ; Offset: 1212
;       float3 View_RelativePreViewTranslation;       ; Offset: 1216
;       float PrePadding_View_1228;                   ; Offset: 1228
;       row_major float4x4 View_PrevViewToClip;       ; Offset: 1232
;       row_major float4x4 View_PrevClipToView;       ; Offset: 1296
;       row_major float4x4 View_PrevTranslatedWorldToClip;; Offset: 1360
;       row_major float4x4 View_PrevTranslatedWorldToView;; Offset: 1424
;       row_major float4x4 View_PrevViewToTranslatedWorld;; Offset: 1488
;       row_major float4x4 View_PrevTranslatedWorldToCameraView;; Offset: 1552
;       row_major float4x4 View_PrevCameraViewToTranslatedWorld;; Offset: 1616
;       float3 View_PrevTranslatedWorldCameraOrigin;  ; Offset: 1680
;       float PrePadding_View_1692;                   ; Offset: 1692
;       float3 View_PrevRelativeWorldCameraOrigin;    ; Offset: 1696
;       float PrePadding_View_1708;                   ; Offset: 1708
;       float3 View_PrevRelativeWorldViewOrigin;      ; Offset: 1712
;       float PrePadding_View_1724;                   ; Offset: 1724
;       float3 View_RelativePrevPreViewTranslation;   ; Offset: 1728
;       float PrePadding_View_1740;                   ; Offset: 1740
;       row_major float4x4 View_PrevClipToRelativeWorld;; Offset: 1744
;       row_major float4x4 View_PrevScreenToTranslatedWorld;; Offset: 1808
;       row_major float4x4 View_ClipToPrevClip;       ; Offset: 1872
;       row_major float4x4 View_ClipToPrevClipWithAA; ; Offset: 1936
;       float4 View_TemporalAAJitter;                 ; Offset: 2000
;       float4 View_GlobalClippingPlane;              ; Offset: 2016
;       float2 View_FieldOfViewWideAngles;            ; Offset: 2032
;       float2 View_PrevFieldOfViewWideAngles;        ; Offset: 2040
;       float4 View_ViewRectMin;                      ; Offset: 2048
;       float4 View_ViewSizeAndInvSize;               ; Offset: 2064
;       uint4 View_ViewRectMinAndSize;                ; Offset: 2080
;       float4 View_LightProbeSizeRatioAndInvSizeRatio;; Offset: 2096
;       float4 View_BufferSizeAndInvSize;             ; Offset: 2112
;       float4 View_BufferBilinearUVMinMax;           ; Offset: 2128
;       float4 View_ScreenToViewSpace;                ; Offset: 2144
;       float2 View_BufferToSceneTextureScale;        ; Offset: 2160
;       float2 View_ResolutionFractionAndInv;         ; Offset: 2168
;       int View_NumSceneColorMSAASamples;            ; Offset: 2176
;       float View_PreExposure;                       ; Offset: 2180
;       float View_OneOverPreExposure;                ; Offset: 2184
;       float PrePadding_View_2188;                   ; Offset: 2188
;       float4 View_DiffuseOverrideParameter;         ; Offset: 2192
;       float4 View_SpecularOverrideParameter;        ; Offset: 2208
;       float4 View_NormalOverrideParameter;          ; Offset: 2224
;       float2 View_RoughnessOverrideParameter;       ; Offset: 2240
;       float View_PrevFrameGameTime;                 ; Offset: 2248
;       float View_PrevFrameRealTime;                 ; Offset: 2252
;       float View_OutOfBoundsMask;                   ; Offset: 2256
;       float PrePadding_View_2260;                   ; Offset: 2260
;       float PrePadding_View_2264;                   ; Offset: 2264
;       float PrePadding_View_2268;                   ; Offset: 2268
;       float3 View_WorldCameraMovementSinceLastFrame;; Offset: 2272
;       float View_CullingSign;                       ; Offset: 2284
;       float View_NearPlane;                         ; Offset: 2288
;       float View_GameTime;                          ; Offset: 2292
;       float View_RealTime;                          ; Offset: 2296
;       float View_DeltaTime;                         ; Offset: 2300
;       float View_MaterialTextureMipBias;            ; Offset: 2304
;       float View_MaterialTextureDerivativeMultiply; ; Offset: 2308
;       uint View_Random;                             ; Offset: 2312
;       uint View_FrameNumber;                        ; Offset: 2316
;       uint View_StateFrameIndexMod8;                ; Offset: 2320
;       uint View_StateFrameIndex;                    ; Offset: 2324
;       uint View_DebugViewModeMask;                  ; Offset: 2328
;       uint View_WorldIsPaused;                      ; Offset: 2332
;       float View_CameraCut;                         ; Offset: 2336
;       float View_UnlitViewmodeMask;                 ; Offset: 2340
;       float PrePadding_View_2344;                   ; Offset: 2344
;       float PrePadding_View_2348;                   ; Offset: 2348
;       float4 View_DirectionalLightColor;            ; Offset: 2352
;       float3 View_DirectionalLightDirection;        ; Offset: 2368
;       float PrePadding_View_2380;                   ; Offset: 2380
;       float4 View_TranslucencyLightingVolumeMin[2]; ; Offset: 2384
;       float4 View_TranslucencyLightingVolumeInvSize[2];; Offset: 2416
;       float4 View_TemporalAAParams;                 ; Offset: 2448
;       float4 View_CircleDOFParams;                  ; Offset: 2464
;       float View_DepthOfFieldSensorWidth;           ; Offset: 2480
;       float View_DepthOfFieldFocalDistance;         ; Offset: 2484
;       float View_DepthOfFieldScale;                 ; Offset: 2488
;       float View_DepthOfFieldFocalLength;           ; Offset: 2492
;       float View_DepthOfFieldFocalRegion;           ; Offset: 2496
;       float View_DepthOfFieldNearTransitionRegion;  ; Offset: 2500
;       float View_DepthOfFieldFarTransitionRegion;   ; Offset: 2504
;       float View_MotionBlurNormalizedToPixel;       ; Offset: 2508
;       float View_GeneralPurposeTweak;               ; Offset: 2512
;       float View_GeneralPurposeTweak2;              ; Offset: 2516
;       float View_DemosaicVposOffset;                ; Offset: 2520
;       float View_DecalDepthBias;                    ; Offset: 2524
;       float3 View_IndirectLightingColorScale;       ; Offset: 2528
;       float PrePadding_View_2540;                   ; Offset: 2540
;       float3 View_PrecomputedIndirectLightingColorScale;; Offset: 2544
;       float PrePadding_View_2556;                   ; Offset: 2556
;       float3 View_PrecomputedIndirectSpecularColorScale;; Offset: 2560
;       float PrePadding_View_2572;                   ; Offset: 2572
;       float4 View_AtmosphereLightDirection[2];      ; Offset: 2576
;       float4 View_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];; Offset: 2608
;       float4 View_AtmosphereLightIlluminanceOuterSpace[2];; Offset: 2640
;       float4 View_AtmosphereLightDiscLuminance[2];  ; Offset: 2672
;       float4 View_AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];; Offset: 2704
;       float4 View_SkyViewLutSizeAndInvSize;         ; Offset: 2736
;       float3 View_SkyCameraTranslatedWorldOrigin;   ; Offset: 2752
;       float PrePadding_View_2764;                   ; Offset: 2764
;       float4 View_SkyPlanetTranslatedWorldCenterAndViewHeight;; Offset: 2768
;       row_major float4x4 View_SkyViewLutReferential;; Offset: 2784
;       float4 View_SkyAtmosphereSkyLuminanceFactor;  ; Offset: 2848
;       float View_SkyAtmospherePresentInScene;       ; Offset: 2864
;       float View_SkyAtmosphereHeightFogContribution;; Offset: 2868
;       float View_SkyAtmosphereBottomRadiusKm;       ; Offset: 2872
;       float View_SkyAtmosphereTopRadiusKm;          ; Offset: 2876
;       float4 View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;; Offset: 2880
;       float View_SkyAtmosphereAerialPerspectiveStartDepthKm;; Offset: 2896
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;; Offset: 2900
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;; Offset: 2904
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;; Offset: 2908
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;; Offset: 2912
;       float View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;; Offset: 2916
;       float PrePadding_View_2920;                   ; Offset: 2920
;       float PrePadding_View_2924;                   ; Offset: 2924
;       float3 View_NormalCurvatureToRoughnessScaleBias;; Offset: 2928
;       float View_RenderingReflectionCaptureMask;    ; Offset: 2940
;       float View_RealTimeReflectionCapture;         ; Offset: 2944
;       float View_RealTimeReflectionCapturePreExposure;; Offset: 2948
;       float PrePadding_View_2952;                   ; Offset: 2952
;       float PrePadding_View_2956;                   ; Offset: 2956
;       float4 View_AmbientCubemapTint;               ; Offset: 2960
;       float View_AmbientCubemapIntensity;           ; Offset: 2976
;       float View_SkyLightApplyPrecomputedBentNormalShadowingFlag;; Offset: 2980
;       float View_SkyLightAffectReflectionFlag;      ; Offset: 2984
;       float View_SkyLightAffectGlobalIlluminationFlag;; Offset: 2988
;       float4 View_SkyLightColor;                    ; Offset: 2992
;       float4 View_MobileSkyIrradianceEnvironmentMap[8];; Offset: 3008
;       float View_MobilePreviewMode;                 ; Offset: 3136
;       float View_HMDEyePaddingOffset;               ; Offset: 3140
;       float View_ReflectionCubemapMaxMip;           ; Offset: 3144
;       float View_ShowDecalsMask;                    ; Offset: 3148
;       uint View_DistanceFieldAOSpecularOcclusionMode;; Offset: 3152
;       float View_IndirectCapsuleSelfShadowingIntensity;; Offset: 3156
;       float PrePadding_View_3160;                   ; Offset: 3160
;       float PrePadding_View_3164;                   ; Offset: 3164
;       float3 View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;; Offset: 3168
;       int View_StereoPassIndex;                     ; Offset: 3180
;       float4 View_GlobalVolumeTranslatedCenterAndExtent[6];; Offset: 3184
;       float4 View_GlobalVolumeTranslatedWorldToUVAddAndMul[6];; Offset: 3280
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVScale[6];; Offset: 3376
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVBias[6];; Offset: 3472
;       float View_GlobalDistanceFieldMipFactor;      ; Offset: 3568
;       float View_GlobalDistanceFieldMipTransition;  ; Offset: 3572
;       int View_GlobalDistanceFieldClipmapSizeInPages;; Offset: 3576
;       int PrePadding_View_3580;                     ; Offset: 3580
;       float3 View_GlobalDistanceFieldInvPageAtlasSize;; Offset: 3584
;       float PrePadding_View_3596;                   ; Offset: 3596
;       float3 View_GlobalDistanceFieldInvCoverageAtlasSize;; Offset: 3600
;       float View_GlobalVolumeDimension;             ; Offset: 3612
;       float View_GlobalVolumeTexelSize;             ; Offset: 3616
;       float View_MaxGlobalDFAOConeDistance;         ; Offset: 3620
;       uint View_NumGlobalSDFClipmaps;               ; Offset: 3624
;       float View_CoveredExpandSurfaceScale;         ; Offset: 3628
;       float View_NotCoveredExpandSurfaceScale;      ; Offset: 3632
;       float View_NotCoveredMinStepScale;            ; Offset: 3636
;       float View_DitheredTransparencyStepThreshold; ; Offset: 3640
;       float View_DitheredTransparencyTraceThreshold;; Offset: 3644
;       int2 View_CursorPosition;                     ; Offset: 3648
;       float View_bCheckerboardSubsurfaceProfileRendering;; Offset: 3656
;       float PrePadding_View_3660;                   ; Offset: 3660
;       float3 View_VolumetricFogInvGridSize;         ; Offset: 3664
;       float PrePadding_View_3676;                   ; Offset: 3676
;       float3 View_VolumetricFogGridZParams;         ; Offset: 3680
;       float PrePadding_View_3692;                   ; Offset: 3692
;       float2 View_VolumetricFogSVPosToVolumeUV;     ; Offset: 3696
;       float2 View_VolumetricFogScreenUVToHistoryVolumeUV;; Offset: 3704
;       float View_VolumetricFogMaxDistance;          ; Offset: 3712
;       float PrePadding_View_3716;                   ; Offset: 3716
;       float PrePadding_View_3720;                   ; Offset: 3720
;       float PrePadding_View_3724;                   ; Offset: 3724
;       float3 View_VolumetricLightmapWorldToUVScale; ; Offset: 3728
;       float PrePadding_View_3740;                   ; Offset: 3740
;       float3 View_VolumetricLightmapWorldToUVAdd;   ; Offset: 3744
;       float PrePadding_View_3756;                   ; Offset: 3756
;       float3 View_VolumetricLightmapIndirectionTextureSize;; Offset: 3760
;       float View_VolumetricLightmapBrickSize;       ; Offset: 3772
;       float3 View_VolumetricLightmapBrickTexelSize; ; Offset: 3776
;       float View_IndirectLightingCacheShowFlag;     ; Offset: 3788
;       float View_EyeToPixelSpreadAngle;             ; Offset: 3792
;       float PrePadding_View_3796;                   ; Offset: 3796
;       float PrePadding_View_3800;                   ; Offset: 3800
;       float PrePadding_View_3804;                   ; Offset: 3804
;       float4 View_XRPassthroughCameraUVs[2];        ; Offset: 3808
;       float View_GlobalVirtualTextureMipBias;       ; Offset: 3840
;       uint View_VirtualTextureFeedbackShift;        ; Offset: 3844
;       uint View_VirtualTextureFeedbackMask;         ; Offset: 3848
;       uint View_VirtualTextureFeedbackStride;       ; Offset: 3852
;       uint View_VirtualTextureFeedbackJitterOffset; ; Offset: 3856
;       uint View_VirtualTextureFeedbackSampleOffset; ; Offset: 3860
;       uint PrePadding_View_3864;                    ; Offset: 3864
;       uint PrePadding_View_3868;                    ; Offset: 3868
;       float4 View_RuntimeVirtualTextureMipLevel;    ; Offset: 3872
;       float2 View_RuntimeVirtualTexturePackHeight;  ; Offset: 3888
;       float PrePadding_View_3896;                   ; Offset: 3896
;       float PrePadding_View_3900;                   ; Offset: 3900
;       float4 View_RuntimeVirtualTextureDebugParams; ; Offset: 3904
;       float View_OverrideLandscapeLOD;              ; Offset: 3920
;       int View_FarShadowStaticMeshLODBias;          ; Offset: 3924
;       float View_MinRoughness;                      ; Offset: 3928
;       float PrePadding_View_3932;                   ; Offset: 3932
;       float4 View_HairRenderInfo;                   ; Offset: 3936
;       uint View_EnableSkyLight;                     ; Offset: 3952
;       uint View_HairRenderInfoBits;                 ; Offset: 3956
;       uint View_HairComponents;                     ; Offset: 3960
;       float View_bSubsurfacePostprocessEnabled;     ; Offset: 3964
;       float4 View_SSProfilesTextureSizeAndInvSize;  ; Offset: 3968
;       float4 View_SSProfilesPreIntegratedTextureSizeAndInvSize;; Offset: 3984
;       float3 View_PhysicsFieldClipmapCenter;        ; Offset: 4000
;       float View_PhysicsFieldClipmapDistance;       ; Offset: 4012
;       int View_PhysicsFieldClipmapResolution;       ; Offset: 4016
;       int View_PhysicsFieldClipmapExponent;         ; Offset: 4020
;       int View_PhysicsFieldClipmapCount;            ; Offset: 4024
;       int View_PhysicsFieldTargetCount;             ; Offset: 4028
;       int4 View_PhysicsFieldTargets[32];            ; Offset: 4032
;       uint View_InstanceSceneDataSOAStride;         ; Offset: 4544
;       uint View_GPUSceneViewId;                     ; Offset: 4548
;       float View_ViewResolutionFraction;            ; Offset: 4552
;       float View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;; Offset: 4556
;       uint BindlessSampler_View_MaterialTextureBilinearWrapedSampler;; Offset: 4560
;       uint PrePadding_View_4564;                    ; Offset: 4564
;       uint BindlessSampler_View_MaterialTextureBilinearClampedSampler;; Offset: 4568
;       uint PrePadding_View_4572;                    ; Offset: 4572
;       uint BindlessResource_View_VolumetricLightmapIndirectionTexture;; Offset: 4576
;       uint PrePadding_View_4580;                    ; Offset: 4580
;       uint BindlessResource_View_VolumetricLightmapBrickAmbientVector;; Offset: 4584
;       uint PrePadding_View_4588;                    ; Offset: 4588
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients0;; Offset: 4592
;       uint PrePadding_View_4596;                    ; Offset: 4596
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients1;; Offset: 4600
;       uint PrePadding_View_4604;                    ; Offset: 4604
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients2;; Offset: 4608
;       uint PrePadding_View_4612;                    ; Offset: 4612
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients3;; Offset: 4616
;       uint PrePadding_View_4620;                    ; Offset: 4620
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients4;; Offset: 4624
;       uint PrePadding_View_4628;                    ; Offset: 4628
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients5;; Offset: 4632
;       uint PrePadding_View_4636;                    ; Offset: 4636
;       uint BindlessResource_View_SkyBentNormalBrickTexture;; Offset: 4640
;       uint PrePadding_View_4644;                    ; Offset: 4644
;       uint BindlessResource_View_DirectionalLightShadowingBrickTexture;; Offset: 4648
;       uint PrePadding_View_4652;                    ; Offset: 4652
;       uint BindlessSampler_View_VolumetricLightmapBrickAmbientVectorSampler;; Offset: 4656
;       uint PrePadding_View_4660;                    ; Offset: 4660
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler0;; Offset: 4664
;       uint PrePadding_View_4668;                    ; Offset: 4668
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler1;; Offset: 4672
;       uint PrePadding_View_4676;                    ; Offset: 4676
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler2;; Offset: 4680
;       uint PrePadding_View_4684;                    ; Offset: 4684
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler3;; Offset: 4688
;       uint PrePadding_View_4692;                    ; Offset: 4692
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler4;; Offset: 4696
;       uint PrePadding_View_4700;                    ; Offset: 4700
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler5;; Offset: 4704
;       uint PrePadding_View_4708;                    ; Offset: 4708
;       uint BindlessSampler_View_SkyBentNormalTextureSampler;; Offset: 4712
;       uint PrePadding_View_4716;                    ; Offset: 4716
;       uint BindlessSampler_View_DirectionalLightShadowingTextureSampler;; Offset: 4720
;       uint PrePadding_View_4724;                    ; Offset: 4724
;       uint BindlessResource_View_GlobalDistanceFieldPageAtlasTexture;; Offset: 4728
;       uint PrePadding_View_4732;                    ; Offset: 4732
;       uint BindlessResource_View_GlobalDistanceFieldCoverageAtlasTexture;; Offset: 4736
;       uint PrePadding_View_4740;                    ; Offset: 4740
;       uint BindlessResource_View_GlobalDistanceFieldPageTableTexture;; Offset: 4744
;       uint PrePadding_View_4748;                    ; Offset: 4748
;       uint BindlessResource_View_GlobalDistanceFieldMipTexture;; Offset: 4752
;       uint PrePadding_View_4756;                    ; Offset: 4756
;       uint BindlessResource_View_AtmosphereTransmittanceTexture;; Offset: 4760
;       uint PrePadding_View_4764;                    ; Offset: 4764
;       uint BindlessSampler_View_AtmosphereTransmittanceTextureSampler;; Offset: 4768
;       uint PrePadding_View_4772;                    ; Offset: 4772
;       uint BindlessResource_View_AtmosphereIrradianceTexture;; Offset: 4776
;       uint PrePadding_View_4780;                    ; Offset: 4780
;       uint BindlessSampler_View_AtmosphereIrradianceTextureSampler;; Offset: 4784
;       uint PrePadding_View_4788;                    ; Offset: 4788
;       uint BindlessResource_View_AtmosphereInscatterTexture;; Offset: 4792
;       uint PrePadding_View_4796;                    ; Offset: 4796
;       uint BindlessSampler_View_AtmosphereInscatterTextureSampler;; Offset: 4800
;       uint PrePadding_View_4804;                    ; Offset: 4804
;       uint BindlessResource_View_PerlinNoiseGradientTexture;; Offset: 4808
;       uint PrePadding_View_4812;                    ; Offset: 4812
;       uint BindlessSampler_View_PerlinNoiseGradientTextureSampler;; Offset: 4816
;       uint PrePadding_View_4820;                    ; Offset: 4820
;       uint BindlessResource_View_PerlinNoise3DTexture;; Offset: 4824
;       uint PrePadding_View_4828;                    ; Offset: 4828
;       uint BindlessSampler_View_PerlinNoise3DTextureSampler;; Offset: 4832
;       uint PrePadding_View_4836;                    ; Offset: 4836
;       uint BindlessResource_View_SobolSamplingTexture;; Offset: 4840
;       uint PrePadding_View_4844;                    ; Offset: 4844
;       uint BindlessSampler_View_SharedPointWrappedSampler;; Offset: 4848
;       uint PrePadding_View_4852;                    ; Offset: 4852
;       uint BindlessSampler_View_SharedPointClampedSampler;; Offset: 4856
;       uint PrePadding_View_4860;                    ; Offset: 4860
;       uint BindlessSampler_View_SharedBilinearWrappedSampler;; Offset: 4864
;       uint PrePadding_View_4868;                    ; Offset: 4868
;       uint BindlessSampler_View_SharedBilinearClampedSampler;; Offset: 4872
;       uint PrePadding_View_4876;                    ; Offset: 4876
;       uint BindlessSampler_View_SharedBilinearAnisoClampedSampler;; Offset: 4880
;       uint PrePadding_View_4884;                    ; Offset: 4884
;       uint BindlessSampler_View_SharedTrilinearWrappedSampler;; Offset: 4888
;       uint PrePadding_View_4892;                    ; Offset: 4892
;       uint BindlessSampler_View_SharedTrilinearClampedSampler;; Offset: 4896
;       uint PrePadding_View_4900;                    ; Offset: 4900
;       uint BindlessResource_View_PreIntegratedBRDF; ; Offset: 4904
;       uint PrePadding_View_4908;                    ; Offset: 4908
;       uint BindlessSampler_View_PreIntegratedBRDFSampler;; Offset: 4912
;       uint PrePadding_View_4916;                    ; Offset: 4916
;       uint BindlessResource_View_PrimitiveSceneData;; Offset: 4920
;       uint PrePadding_View_4924;                    ; Offset: 4924
;       uint BindlessResource_View_InstanceSceneData; ; Offset: 4928
;       uint PrePadding_View_4932;                    ; Offset: 4932
;       uint BindlessResource_View_InstancePayloadData;; Offset: 4936
;       uint PrePadding_View_4940;                    ; Offset: 4940
;       uint BindlessResource_View_LightmapSceneData; ; Offset: 4944
;       uint PrePadding_View_4948;                    ; Offset: 4948
;       uint BindlessResource_View_SkyIrradianceEnvironmentMap;; Offset: 4952
;       uint PrePadding_View_4956;                    ; Offset: 4956
;       uint BindlessResource_View_TransmittanceLutTexture;; Offset: 4960
;       uint PrePadding_View_4964;                    ; Offset: 4964
;       uint BindlessSampler_View_TransmittanceLutTextureSampler;; Offset: 4968
;       uint PrePadding_View_4972;                    ; Offset: 4972
;       uint BindlessResource_View_SkyViewLutTexture; ; Offset: 4976
;       uint PrePadding_View_4980;                    ; Offset: 4980
;       uint BindlessSampler_View_SkyViewLutTextureSampler;; Offset: 4984
;       uint PrePadding_View_4988;                    ; Offset: 4988
;       uint BindlessResource_View_DistantSkyLightLutTexture;; Offset: 4992
;       uint PrePadding_View_4996;                    ; Offset: 4996
;       uint BindlessSampler_View_DistantSkyLightLutTextureSampler;; Offset: 5000
;       uint PrePadding_View_5004;                    ; Offset: 5004
;       uint BindlessResource_View_CameraAerialPerspectiveVolume;; Offset: 5008
;       uint PrePadding_View_5012;                    ; Offset: 5012
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeSampler;; Offset: 5016
;       uint PrePadding_View_5020;                    ; Offset: 5020
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeMieOnly;; Offset: 5024
;       uint PrePadding_View_5028;                    ; Offset: 5028
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeMieOnlySampler;; Offset: 5032
;       uint PrePadding_View_5036;                    ; Offset: 5036
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeRayOnly;; Offset: 5040
;       uint PrePadding_View_5044;                    ; Offset: 5044
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeRayOnlySampler;; Offset: 5048
;       uint PrePadding_View_5052;                    ; Offset: 5052
;       uint BindlessResource_View_HairScatteringLUTTexture;; Offset: 5056
;       uint PrePadding_View_5060;                    ; Offset: 5060
;       uint BindlessSampler_View_HairScatteringLUTSampler;; Offset: 5064
;       uint PrePadding_View_5068;                    ; Offset: 5068
;       uint BindlessResource_View_LTCMatTexture;     ; Offset: 5072
;       uint PrePadding_View_5076;                    ; Offset: 5076
;       uint BindlessSampler_View_LTCMatSampler;      ; Offset: 5080
;       uint PrePadding_View_5084;                    ; Offset: 5084
;       uint BindlessResource_View_LTCAmpTexture;     ; Offset: 5088
;       uint PrePadding_View_5092;                    ; Offset: 5092
;       uint BindlessSampler_View_LTCAmpSampler;      ; Offset: 5096
;       uint PrePadding_View_5100;                    ; Offset: 5100
;       uint View_bShadingEnergyConservation;         ; Offset: 5104
;       uint View_bShadingEnergyPreservation;         ; Offset: 5108
;       uint BindlessResource_View_ShadingEnergyGGXSpecTexture;; Offset: 5112
;       uint PrePadding_View_5116;                    ; Offset: 5116
;       uint BindlessResource_View_ShadingEnergyGGXGlassTexture;; Offset: 5120
;       uint PrePadding_View_5124;                    ; Offset: 5124
;       uint BindlessResource_View_ShadingEnergyClothSpecTexture;; Offset: 5128
;       uint PrePadding_View_5132;                    ; Offset: 5132
;       uint BindlessResource_View_ShadingEnergyDiffuseTexture;; Offset: 5136
;       uint PrePadding_View_5140;                    ; Offset: 5140
;       uint BindlessSampler_View_ShadingEnergySampler;; Offset: 5144
;       uint PrePadding_View_5148;                    ; Offset: 5148
;       uint BindlessResource_View_SSProfilesTexture; ; Offset: 5152
;       uint PrePadding_View_5156;                    ; Offset: 5156
;       uint BindlessSampler_View_SSProfilesSampler;  ; Offset: 5160
;       uint PrePadding_View_5164;                    ; Offset: 5164
;       uint BindlessSampler_View_SSProfilesTransmissionSampler;; Offset: 5168
;       uint PrePadding_View_5172;                    ; Offset: 5172
;       uint BindlessResource_View_SSProfilesPreIntegratedTexture;; Offset: 5176
;       uint PrePadding_View_5180;                    ; Offset: 5180
;       uint BindlessSampler_View_SSProfilesPreIntegratedSampler;; Offset: 5184
;       uint PrePadding_View_5188;                    ; Offset: 5188
;       uint BindlessResource_View_WaterIndirection;  ; Offset: 5192
;       uint PrePadding_View_5196;                    ; Offset: 5196
;       uint BindlessResource_View_WaterData;         ; Offset: 5200
;       uint PrePadding_View_5204;                    ; Offset: 5204
;       uint PrePadding_View_5208;                    ; Offset: 5208
;       uint PrePadding_View_5212;                    ; Offset: 5212
;       float4 View_RectLightAtlasSizeAndInvSize;     ; Offset: 5216
;       float View_RectLightAtlasMaxMipLevel;         ; Offset: 5232
;       float PrePadding_View_5236;                   ; Offset: 5236
;       uint BindlessResource_View_RectLightAtlasTexture;; Offset: 5240
;       uint PrePadding_View_5244;                    ; Offset: 5244
;       uint BindlessSampler_View_RectLightAtlasSampler;; Offset: 5248
;       uint PrePadding_View_5252;                    ; Offset: 5252
;       uint PrePadding_View_5256;                    ; Offset: 5256
;       uint PrePadding_View_5260;                    ; Offset: 5260
;       float4 View_IESAtlasSizeAndInvSize;           ; Offset: 5264
;       uint BindlessResource_View_IESAtlasTexture;   ; Offset: 5280
;       uint PrePadding_View_5284;                    ; Offset: 5284
;       uint BindlessSampler_View_IESAtlasSampler;    ; Offset: 5288
;       uint PrePadding_View_5292;                    ; Offset: 5292
;       uint BindlessSampler_View_LandscapeWeightmapSampler;; Offset: 5296
;       uint PrePadding_View_5300;                    ; Offset: 5300
;       uint BindlessResource_View_LandscapeIndirection;; Offset: 5304
;       uint PrePadding_View_5308;                    ; Offset: 5308
;       uint BindlessResource_View_LandscapePerComponentData;; Offset: 5312
;       uint PrePadding_View_5316;                    ; Offset: 5316
;       uint BindlessResource_View_VTFeedbackBuffer;  ; Offset: 5320
;       uint PrePadding_View_5324;                    ; Offset: 5324
;       uint BindlessResource_View_EditorVisualizeLevelInstanceIds;; Offset: 5328
;       uint PrePadding_View_5332;                    ; Offset: 5332
;       uint BindlessResource_View_EditorSelectedHitProxyIds;; Offset: 5336
;       uint PrePadding_View_5340;                    ; Offset: 5340
;       uint BindlessResource_View_PhysicsFieldClipmapBuffer;; Offset: 5344
;       uint PrePadding_View_5348;                    ; Offset: 5348
;       uint PrePadding_View_5352;                    ; Offset: 5352
;       uint PrePadding_View_5356;                    ; Offset: 5356
;       float3 View_TLASRelativePreViewTranslation;   ; Offset: 5360
;       float PrePadding_View_5372;                   ; Offset: 5372
;       float3 View_TLASViewTilePosition;             ; Offset: 5376
;   
;   } UniformBufferConstants_View;                    ; Offset:    0 Size:  5388
;
; }
;
; cbuffer UniformBufferConstants_Primitive
; {
;
;   struct hostlayout.UniformBufferConstants_Primitive
;   {
;
;       uint Primitive_Flags;                         ; Offset:    0
;       uint Primitive_InstanceSceneDataOffset;       ; Offset:    4
;       uint Primitive_NumInstanceSceneDataEntries;   ; Offset:    8
;       int Primitive_SingleCaptureIndex;             ; Offset:   12
;       float3 Primitive_TilePosition;                ; Offset:   16
;       uint Primitive_PrimitiveComponentId;          ; Offset:   28
;       row_major float4x4 Primitive_LocalToRelativeWorld;; Offset:   32
;       row_major float4x4 Primitive_RelativeWorldToLocal;; Offset:   96
;       row_major float4x4 Primitive_PreviousLocalToRelativeWorld;; Offset:  160
;       row_major float4x4 Primitive_PreviousRelativeWorldToLocal;; Offset:  224
;       row_major float4x4 Primitive_WorldToPreviousWorld;; Offset:  288
;       float3 Primitive_InvNonUniformScale;          ; Offset:  352
;       float Primitive_ObjectBoundsX;                ; Offset:  364
;       float4 Primitive_ObjectRelativeWorldPositionAndRadius;; Offset:  368
;       float3 Primitive_ActorRelativeWorldPosition;  ; Offset:  384
;       uint Primitive_LightmapUVIndex;               ; Offset:  396
;       float3 Primitive_ObjectOrientation;           ; Offset:  400
;       uint Primitive_LightmapDataIndex;             ; Offset:  412
;       float4 Primitive_NonUniformScale;             ; Offset:  416
;       float3 Primitive_PreSkinnedLocalBoundsMin;    ; Offset:  432
;       uint Primitive_NaniteResourceID;              ; Offset:  444
;       float3 Primitive_PreSkinnedLocalBoundsMax;    ; Offset:  448
;       uint Primitive_NaniteHierarchyOffset;         ; Offset:  460
;       float3 Primitive_LocalObjectBoundsMin;        ; Offset:  464
;       float Primitive_ObjectBoundsY;                ; Offset:  476
;       float3 Primitive_LocalObjectBoundsMax;        ; Offset:  480
;       float Primitive_ObjectBoundsZ;                ; Offset:  492
;       float3 Primitive_InstanceLocalBoundsCenter;   ; Offset:  496
;       uint Primitive_InstancePayloadDataOffset;     ; Offset:  508
;       float3 Primitive_InstanceLocalBoundsExtent;   ; Offset:  512
;       uint Primitive_InstancePayloadDataStride;     ; Offset:  524
;       float3 Primitive_WireframeColor;              ; Offset:  528
;       uint Primitive_PackedNaniteFlags;             ; Offset:  540
;       float3 Primitive_LevelColor;                  ; Offset:  544
;       int Primitive_PersistentPrimitiveIndex;       ; Offset:  556
;       float2 Primitive_InstanceDrawDistanceMinMaxSquared;; Offset:  560
;       float Primitive_InstanceWPODisableDistanceSquared;; Offset:  568
;       uint Primitive_NaniteRayTracingDataOffset;    ; Offset:  572
;       float Primitive_MaxWPODisplacement;           ; Offset:  576
;       uint Primitive_CustomStencilValueAndMask;     ; Offset:  580
;       uint PrePadding_Primitive_584;                ; Offset:  584
;       uint PrePadding_Primitive_588;                ; Offset:  588
;       float4 Primitive_CustomPrimitiveData[9];      ; Offset:  592
;   
;   } UniformBufferConstants_Primitive;               ; Offset:    0 Size:   736
;
; }
;
; cbuffer UniformBufferConstants_ShadowDepthPass
; {
;
;   struct hostlayout.UniformBufferConstants_ShadowDepthPass
;   {
;
;       uint BindlessResource_ShadowDepthPass_SceneTextures_SceneColorTexture;; Offset:    0
;       uint PrePadding_ShadowDepthPass_SceneTextures_4;; Offset:    4
;       uint BindlessResource_ShadowDepthPass_SceneTextures_SceneDepthTexture;; Offset:    8
;       uint PrePadding_ShadowDepthPass_SceneTextures_12;; Offset:   12
;       uint BindlessResource_ShadowDepthPass_SceneTextures_GBufferATexture;; Offset:   16
;       uint PrePadding_ShadowDepthPass_SceneTextures_20;; Offset:   20
;       uint BindlessResource_ShadowDepthPass_SceneTextures_GBufferBTexture;; Offset:   24
;       uint PrePadding_ShadowDepthPass_SceneTextures_28;; Offset:   28
;       uint BindlessResource_ShadowDepthPass_SceneTextures_GBufferCTexture;; Offset:   32
;       uint PrePadding_ShadowDepthPass_SceneTextures_36;; Offset:   36
;       uint BindlessResource_ShadowDepthPass_SceneTextures_GBufferDTexture;; Offset:   40
;       uint PrePadding_ShadowDepthPass_SceneTextures_44;; Offset:   44
;       uint BindlessResource_ShadowDepthPass_SceneTextures_GBufferETexture;; Offset:   48
;       uint PrePadding_ShadowDepthPass_SceneTextures_52;; Offset:   52
;       uint BindlessResource_ShadowDepthPass_SceneTextures_GBufferFTexture;; Offset:   56
;       uint PrePadding_ShadowDepthPass_SceneTextures_60;; Offset:   60
;       uint BindlessResource_ShadowDepthPass_SceneTextures_GBufferVelocityTexture;; Offset:   64
;       uint PrePadding_ShadowDepthPass_SceneTextures_68;; Offset:   68
;       uint BindlessResource_ShadowDepthPass_SceneTextures_ScreenSpaceAOTexture;; Offset:   72
;       uint PrePadding_ShadowDepthPass_SceneTextures_76;; Offset:   76
;       uint BindlessResource_ShadowDepthPass_SceneTextures_CustomDepthTexture;; Offset:   80
;       uint PrePadding_ShadowDepthPass_SceneTextures_84;; Offset:   84
;       uint BindlessResource_ShadowDepthPass_SceneTextures_CustomStencilTexture;; Offset:   88
;       uint PrePadding_ShadowDepthPass_SceneTextures_92;; Offset:   92
;       uint BindlessSampler_ShadowDepthPass_SceneTextures_PointClampSampler;; Offset:   96
;       float PrePadding_ShadowDepthPass_100;         ; Offset:  100
;       float PrePadding_ShadowDepthPass_104;         ; Offset:  104
;       float PrePadding_ShadowDepthPass_108;         ; Offset:  108
;       row_major float4x4 ShadowDepthPass_ProjectionMatrix;; Offset:  112
;       row_major float4x4 ShadowDepthPass_ViewMatrix;; Offset:  176
;       float4 ShadowDepthPass_ShadowParams;          ; Offset:  240
;       float ShadowDepthPass_bClampToNearPlane;      ; Offset:  256
;       float PrePadding_ShadowDepthPass_260;         ; Offset:  260
;       float PrePadding_ShadowDepthPass_264;         ; Offset:  264
;       float PrePadding_ShadowDepthPass_268;         ; Offset:  268
;       row_major float4x4 ShadowDepthPass_ShadowViewProjectionMatrices[6];; Offset:  272
;       row_major float4x4 ShadowDepthPass_ShadowViewMatrices[6];; Offset:  656
;       int ShadowDepthPass_bRenderToVirtualShadowMap;; Offset: 1040
;       int PrePadding_ShadowDepthPass_1044;          ; Offset: 1044
;       uint BindlessResource_ShadowDepthPass_VirtualSmPageTable;; Offset: 1048
;       uint PrePadding_ShadowDepthPass_1052;         ; Offset: 1052
;       uint BindlessResource_ShadowDepthPass_PackedNaniteViews;; Offset: 1056
;       uint PrePadding_ShadowDepthPass_1060;         ; Offset: 1060
;       uint BindlessResource_ShadowDepthPass_PageRectBounds;; Offset: 1064
;       uint PrePadding_ShadowDepthPass_1068;         ; Offset: 1068
;       uint BindlessResource_ShadowDepthPass_OutDepthBufferArray;; Offset: 1072
;   
;   } UniformBufferConstants_ShadowDepthPass;         ; Offset:    0 Size:  1076
;
; }
;
; cbuffer UniformBufferConstants_EmitterDynamicUniforms
; {
;
;   struct UniformBufferConstants_EmitterDynamicUniforms
;   {
;
;       float3 EmitterDynamicUniforms_LWCTile;        ; Offset:    0
;       float PrePadding_EmitterDynamicUniforms_12;   ; Offset:   12
;       float2 EmitterDynamicUniforms_LocalToWorldScale;; Offset:   16
;       float EmitterDynamicUniforms_EmitterInstRandom;; Offset:   24
;       float PrePadding_EmitterDynamicUniforms_28;   ; Offset:   28
;       float4 EmitterDynamicUniforms_AxisLockRight;  ; Offset:   32
;       float4 EmitterDynamicUniforms_AxisLockUp;     ; Offset:   48
;       float4 EmitterDynamicUniforms_DynamicColor;   ; Offset:   64
;       float4 EmitterDynamicUniforms_MacroUVParameters;; Offset:   80
;   
;   } UniformBufferConstants_EmitterDynamicUniforms;  ; Offset:    0 Size:    96
;
; }
;
; cbuffer UniformBufferConstants_EmitterUniforms
; {
;
;   struct UniformBufferConstants_EmitterUniforms
;   {
;
;       float4 EmitterUniforms_ColorCurve;            ; Offset:    0
;       float4 EmitterUniforms_ColorScale;            ; Offset:   16
;       float4 EmitterUniforms_ColorBias;             ; Offset:   32
;       float4 EmitterUniforms_MiscCurve;             ; Offset:   48
;       float4 EmitterUniforms_MiscScale;             ; Offset:   64
;       float4 EmitterUniforms_MiscBias;              ; Offset:   80
;       float4 EmitterUniforms_SizeBySpeed;           ; Offset:   96
;       float4 EmitterUniforms_SubImageSize;          ; Offset:  112
;       float4 EmitterUniforms_TangentSelector;       ; Offset:  128
;       float3 EmitterUniforms_CameraFacingBlend;     ; Offset:  144
;       float EmitterUniforms_RemoveHMDRoll;          ; Offset:  156
;       float EmitterUniforms_RotationRateScale;      ; Offset:  160
;       float EmitterUniforms_RotationBias;           ; Offset:  164
;       float EmitterUniforms_CameraMotionBlurAmount; ; Offset:  168
;       float PrePadding_EmitterUniforms_172;         ; Offset:  172
;       float2 EmitterUniforms_PivotOffset;           ; Offset:  176
;   
;   } UniformBufferConstants_EmitterUniforms;         ; Offset:    0 Size:   184
;
; }
;
; Resource bind info for InstanceCulling_PageInfoBuffer
; {
;
;   uint $Element;                                    ; Offset:    0 Size:     4
;
; }
;
; Resource bind info for ShadowDepthPass_PackedNaniteViews
; {
;
;   struct hostlayout.struct.FPackedNaniteView
;   {
;
;       row_major float4x4 SVPositionToTranslatedWorld;; Offset:    0
;       row_major float4x4 ViewToTranslatedWorld;     ; Offset:   64
;       row_major float4x4 TranslatedWorldToView;     ; Offset:  128
;       row_major float4x4 TranslatedWorldToClip;     ; Offset:  192
;       row_major float4x4 TranslatedWorldToSubpixelClip;; Offset:  256
;       row_major float4x4 ViewToClip;                ; Offset:  320
;       row_major float4x4 ClipToRelativeWorld;       ; Offset:  384
;       row_major float4x4 PrevTranslatedWorldToView; ; Offset:  448
;       row_major float4x4 PrevTranslatedWorldToClip; ; Offset:  512
;       row_major float4x4 PrevViewToClip;            ; Offset:  576
;       row_major float4x4 PrevClipToRelativeWorld;   ; Offset:  640
;       int4 ViewRect;                                ; Offset:  704
;       float4 ViewSizeAndInvSize;                    ; Offset:  720
;       float4 ClipSpaceScaleOffset;                  ; Offset:  736
;       float3 RelativePreViewTranslation;            ; Offset:  752
;       float ViewTilePositionX;                      ; Offset:  764
;       float3 RelativePrevPreViewTranslation;        ; Offset:  768
;       float ViewTilePositionY;                      ; Offset:  780
;       float3 RelativeWorldCameraOrigin;             ; Offset:  784
;       float ViewTilePositionZ;                      ; Offset:  796
;       float3 DrawDistanceOriginTranslatedWorld;     ; Offset:  800
;       float RangeBasedCullingDistance;              ; Offset:  812
;       float3 ViewForward;                           ; Offset:  816
;       float NearPlane;                              ; Offset:  828
;       float4 TranslatedGlobalClipPlane;             ; Offset:  832
;       float3 MatrixTilePosition;                    ; Offset:  848
;       float Padding1;                               ; Offset:  860
;       float2 LODScales;                             ; Offset:  864
;       float MinBoundsRadiusSq;                      ; Offset:  872
;       uint StreamingPriorityCategory_AndFlags;      ; Offset:  876
;       int4 TargetLayerIdX_AndMipLevelY_AndNumMipLevelsZ;; Offset:  880
;       int4 HZBTestViewRect;                         ; Offset:  896
;   
;   } $Element;                                       ; Offset:    0 Size:   912
;
; }
;
; Resource bind info for ShadowDepthPass_PageRectBounds
; {
;
;   uint4 $Element;                                   ; Offset:    0 Size:    16
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; $Globals                          cbuffer      NA          NA     CB0            cb0     1
; UniformBufferConstants_View       cbuffer      NA          NA     CB1            cb1     1
; UniformBufferConstants_Primitive   cbuffer      NA          NA     CB2            cb2     1
; UniformBufferConstants_ShadowDepthPass   cbuffer      NA          NA     CB3            cb3     1
; UniformBufferConstants_EmitterDynamicUniforms   cbuffer      NA          NA     CB4            cb4     1
; UniformBufferConstants_EmitterUniforms   cbuffer      NA          NA     CB5            cb5     1
; PositionTextureSampler            sampler      NA          NA      S0             s0     1
; VelocityTextureSampler            sampler      NA          NA      S1             s1     1
; AttributesTextureSampler          sampler      NA          NA      S2             s2     1
; CurveTextureSampler               sampler      NA          NA      S3             s3     1
; InstanceCulling_PageInfoBuffer    texture  struct         r/o      T0             t0     1
; ShadowDepthPass_PackedNaniteViews   texture  struct         r/o      T1             t1     1
; ShadowDepthPass_PageRectBounds    texture  struct         r/o      T2             t2     1
; ParticleIndices                   texture     f32         buf      T3             t3     1
; PositionTexture                   texture     f32          2d      T4             t4     1
; VelocityTexture                   texture     f32          2d      T5             t5     1
; AttributesTexture                 texture     f32          2d      T6             t6     1
; CurveTexture                      texture     f32          2d      T7             t7     1
;
;
; ViewId state:
;
; Number of inputs: 10, outputs: 16
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 8 depends on inputs: { 0, 4, 8, 9 }
;   output 9 depends on inputs: { 0, 4, 8, 9 }
;   output 10 depends on inputs: { 0, 4, 8, 9 }
;   output 11 depends on inputs: { 0, 4, 8, 9 }
;   output 12 depends on inputs: { 0, 4, 8, 9 }
;   output 13 depends on inputs: { 0, 4, 8, 9 }
;   output 14 depends on inputs: { 0, 4, 8, 9 }
;   output 15 depends on inputs: { 0, 4, 8, 9 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%"class.StructuredBuffer<unsigned int>" = type { i32 }
%"hostlayout.class.StructuredBuffer<FPackedNaniteView>" = type { %hostlayout.struct.FPackedNaniteView }
%hostlayout.struct.FPackedNaniteView = type { [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <4 x i32>, <4 x float>, <4 x float>, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <4 x float>, <3 x float>, float, <2 x float>, float, i32, <4 x i32>, <4 x i32> }
%"class.StructuredBuffer<vector<unsigned int, 4> >" = type { <4 x i32> }
%"class.Buffer<vector<float, 2> >" = type { <2 x float> }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%"$Globals" = type { <4 x float>, i32, i32, <4 x i32>, i32, i32, i32, float, i32, i32 }
%hostlayout.UniformBufferConstants_View = type { [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <4 x float>, <4 x float>, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <4 x float>, <4 x float>, <2 x float>, <2 x float>, <4 x float>, <4 x float>, <4 x i32>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, <2 x float>, i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i32, float, float, float, float, <4 x float>, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <4 x float>, float, float, float, float, float, float, float, float, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <3 x float>, float, <4 x float>, [4 x <4 x float>], <4 x float>, float, float, float, float, <4 x float>, float, float, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, <4 x float>, float, float, float, float, <4 x float>, [8 x <4 x float>], float, float, float, float, i32, float, float, float, <3 x float>, i32, [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], float, float, i32, i32, <3 x float>, float, <3 x float>, float, float, float, i32, float, float, float, float, float, <2 x i32>, float, float, <3 x float>, float, <3 x float>, float, <2 x float>, <2 x float>, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, float, float, float, float, [2 x <4 x float>], float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <2 x float>, float, float, <4 x float>, float, i32, float, float, <4 x float>, i32, i32, i32, float, <4 x float>, <4 x float>, <3 x float>, float, i32, i32, i32, i32, [32 x <4 x i32>], i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, float, float, i32, i32, i32, i32, i32, i32, <4 x float>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <3 x float>, float, <3 x float> }
%hostlayout.UniformBufferConstants_Primitive = type { i32, i32, i32, i32, <3 x float>, i32, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <4 x float>, <3 x float>, i32, <3 x float>, i32, <4 x float>, <3 x float>, i32, <3 x float>, i32, <3 x float>, float, <3 x float>, float, <3 x float>, i32, <3 x float>, i32, <3 x float>, i32, <3 x float>, i32, <2 x float>, float, i32, float, i32, i32, i32, [9 x <4 x float>] }
%hostlayout.UniformBufferConstants_ShadowDepthPass = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, [4 x <4 x float>], [4 x <4 x float>], <4 x float>, float, float, float, float, [6 x [4 x <4 x float>]], [6 x [4 x <4 x float>]], i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%UniformBufferConstants_EmitterDynamicUniforms = type { <3 x float>, float, <2 x float>, float, float, <4 x float>, <4 x float>, <4 x float>, <4 x float> }
%UniformBufferConstants_EmitterUniforms = type { <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <3 x float>, float, float, float, float, float, <2 x float> }
%struct.SamplerState = type { i32 }

define void @Main() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 7, i32 7, i32 0, i8 0 }, i32 7, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 6, i32 6, i32 0, i8 0 }, i32 6, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 5, i32 5, i32 0, i8 0 }, i32 5, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 4, i32 4, i32 0, i8 0 }, i32 4, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 3, i32 3, i32 0, i8 0 }, i32 3, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %6 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 0 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %7 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 0 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %8 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind zeroinitializer, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %9 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 3, i32 3, i32 0, i8 3 }, i32 3, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %10 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 3 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %11 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 3 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %12 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 3 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %13 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 5, i32 5, i32 0, i8 2 }, i32 5, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %14 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 4, i32 4, i32 0, i8 2 }, i32 4, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %15 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 3, i32 3, i32 0, i8 2 }, i32 3, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %16 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 2 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %17 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 2 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %18 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %19 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %13, %dx.types.ResourceProperties { i32 13, i32 184 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %20 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %14, %dx.types.ResourceProperties { i32 13, i32 96 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %21 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %15, %dx.types.ResourceProperties { i32 13, i32 1076 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %22 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %16, %dx.types.ResourceProperties { i32 13, i32 736 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %23 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %17, %dx.types.ResourceProperties { i32 13, i32 5388 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %24 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %18, %dx.types.ResourceProperties { i32 13, i32 72 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %25 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef), !dx.precise !49  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %26 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef), !dx.precise !49  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %27 = call i32 @dx.op.loadInput.i32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %28 = call i32 @dx.op.loadInput.i32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %29 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %21, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %30 = extractvalue %dx.types.CBufRet.f32 %29, 0
  %31 = extractvalue %dx.types.CBufRet.f32 %29, 1
  %32 = extractvalue %dx.types.CBufRet.f32 %29, 2
  %33 = extractvalue %dx.types.CBufRet.f32 %29, 3
  %34 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %21, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %35 = extractvalue %dx.types.CBufRet.f32 %34, 0
  %36 = extractvalue %dx.types.CBufRet.f32 %34, 1
  %37 = extractvalue %dx.types.CBufRet.f32 %34, 2
  %38 = extractvalue %dx.types.CBufRet.f32 %34, 3
  %39 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %21, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %40 = extractvalue %dx.types.CBufRet.f32 %39, 0
  %41 = extractvalue %dx.types.CBufRet.f32 %39, 1
  %42 = extractvalue %dx.types.CBufRet.f32 %39, 2
  %43 = extractvalue %dx.types.CBufRet.f32 %39, 3
  %44 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %21, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %45 = extractvalue %dx.types.CBufRet.f32 %44, 0
  %46 = extractvalue %dx.types.CBufRet.f32 %44, 1
  %47 = extractvalue %dx.types.CBufRet.f32 %44, 2
  %48 = extractvalue %dx.types.CBufRet.f32 %44, 3
  %49 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %21, i32 11)  ; CBufferLoadLegacy(handle,regIndex)
  %50 = extractvalue %dx.types.CBufRet.f32 %49, 2
  %51 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %21, i32 12)  ; CBufferLoadLegacy(handle,regIndex)
  %52 = extractvalue %dx.types.CBufRet.f32 %51, 2
  %53 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %21, i32 13)  ; CBufferLoadLegacy(handle,regIndex)
  %54 = extractvalue %dx.types.CBufRet.f32 %53, 2
  %55 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %21, i32 15)  ; CBufferLoadLegacy(handle,regIndex)
  %56 = extractvalue %dx.types.CBufRet.f32 %55, 0
  %57 = extractvalue %dx.types.CBufRet.f32 %55, 1
  %58 = extractvalue %dx.types.CBufRet.f32 %55, 2
  %59 = extractvalue %dx.types.CBufRet.f32 %55, 3
  %60 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %21, i32 16)  ; CBufferLoadLegacy(handle,regIndex)
  %61 = extractvalue %dx.types.CBufRet.f32 %60, 0
  %62 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %21, i32 65)  ; CBufferLoadLegacy(handle,regIndex)
  %63 = extractvalue %dx.types.CBufRet.i32 %62, 0
  %64 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %23, i32 64)  ; CBufferLoadLegacy(handle,regIndex)
  %65 = extractvalue %dx.types.CBufRet.f32 %64, 0
  %66 = extractvalue %dx.types.CBufRet.f32 %64, 1
  %67 = extractvalue %dx.types.CBufRet.f32 %64, 2
  %68 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %23, i32 67)  ; CBufferLoadLegacy(handle,regIndex)
  %69 = extractvalue %dx.types.CBufRet.f32 %68, 0
  %70 = extractvalue %dx.types.CBufRet.f32 %68, 1
  %71 = extractvalue %dx.types.CBufRet.f32 %68, 2
  %72 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %23, i32 68)  ; CBufferLoadLegacy(handle,regIndex)
  %73 = extractvalue %dx.types.CBufRet.f32 %72, 0
  %74 = extractvalue %dx.types.CBufRet.f32 %72, 1
  %75 = extractvalue %dx.types.CBufRet.f32 %72, 2
  %76 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %23, i32 69)  ; CBufferLoadLegacy(handle,regIndex)
  %77 = extractvalue %dx.types.CBufRet.f32 %76, 0
  %78 = extractvalue %dx.types.CBufRet.f32 %76, 1
  %79 = extractvalue %dx.types.CBufRet.f32 %76, 2
  %80 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %23, i32 70)  ; CBufferLoadLegacy(handle,regIndex)
  %81 = extractvalue %dx.types.CBufRet.f32 %80, 0
  %82 = extractvalue %dx.types.CBufRet.f32 %80, 1
  %83 = extractvalue %dx.types.CBufRet.f32 %80, 2
  %84 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %23, i32 74)  ; CBufferLoadLegacy(handle,regIndex)
  %85 = extractvalue %dx.types.CBufRet.f32 %84, 0
  %86 = extractvalue %dx.types.CBufRet.f32 %84, 1
  %87 = extractvalue %dx.types.CBufRet.f32 %84, 2
  %88 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %23, i32 76)  ; CBufferLoadLegacy(handle,regIndex)
  %89 = extractvalue %dx.types.CBufRet.f32 %88, 0
  %90 = extractvalue %dx.types.CBufRet.f32 %88, 1
  %91 = extractvalue %dx.types.CBufRet.f32 %88, 2
  %92 = shl i32 %27, 4
  %93 = lshr i32 %28, 2
  %94 = add i32 %93, %92
  %95 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %24, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %96 = extractvalue %dx.types.CBufRet.i32 %95, 1
  %97 = add i32 %94, %96
  %98 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %5, %dx.types.ResourceProperties { i32 10, i32 521 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<2xF32>
  %99 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %98, i32 %97, i32 undef)  ; BufferLoad(srv,index,wot)
  %100 = extractvalue %dx.types.ResRet.f32 %99, 0
  %101 = extractvalue %dx.types.ResRet.f32 %99, 1
  %102 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %4, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %103 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %12, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %104 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %102, %dx.types.Handle %103, float %100, float %101, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %105 = extractvalue %dx.types.ResRet.f32 %104, 0
  %106 = extractvalue %dx.types.ResRet.f32 %104, 1
  %107 = extractvalue %dx.types.ResRet.f32 %104, 2
  %108 = extractvalue %dx.types.ResRet.f32 %104, 3
  %109 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %110 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %11, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %111 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %109, %dx.types.Handle %110, float %100, float %101, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %112 = extractvalue %dx.types.ResRet.f32 %111, 0
  %113 = extractvalue %dx.types.ResRet.f32 %111, 1
  %114 = extractvalue %dx.types.ResRet.f32 %111, 2
  %115 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %116 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %10, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %117 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %115, %dx.types.Handle %116, float %100, float %101, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %118 = extractvalue %dx.types.ResRet.f32 %117, 0
  %119 = extractvalue %dx.types.ResRet.f32 %117, 1
  %120 = extractvalue %dx.types.ResRet.f32 %117, 2
  %121 = extractvalue %dx.types.ResRet.f32 %117, 3
  %122 = fcmp ogt float %108, 1.000000e+00
  %123 = select i1 %122, float 0.000000e+00, float 1.000000e+00
  %124 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %22, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %125 = extractvalue %dx.types.CBufRet.f32 %124, 0
  %126 = extractvalue %dx.types.CBufRet.f32 %124, 1
  %127 = extractvalue %dx.types.CBufRet.f32 %124, 2
  %128 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %22, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %129 = extractvalue %dx.types.CBufRet.f32 %128, 0
  %130 = extractvalue %dx.types.CBufRet.f32 %128, 1
  %131 = extractvalue %dx.types.CBufRet.f32 %128, 2
  %132 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %22, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %133 = extractvalue %dx.types.CBufRet.f32 %132, 0
  %134 = extractvalue %dx.types.CBufRet.f32 %132, 1
  %135 = extractvalue %dx.types.CBufRet.f32 %132, 2
  %136 = fmul float %112, %125
  %137 = call float @dx.op.tertiary.f32(i32 46, float %113, float %129, float %136), !dx.precise !49  ; FMad(a,b,c)
  %138 = call float @dx.op.tertiary.f32(i32 46, float %114, float %133, float %137), !dx.precise !49  ; FMad(a,b,c)
  %139 = fmul float %112, %126
  %140 = call float @dx.op.tertiary.f32(i32 46, float %113, float %130, float %139), !dx.precise !49  ; FMad(a,b,c)
  %141 = call float @dx.op.tertiary.f32(i32 46, float %114, float %134, float %140), !dx.precise !49  ; FMad(a,b,c)
  %142 = fmul float %112, %127
  %143 = call float @dx.op.tertiary.f32(i32 46, float %113, float %131, float %142), !dx.precise !49  ; FMad(a,b,c)
  %144 = call float @dx.op.tertiary.f32(i32 46, float %114, float %135, float %143), !dx.precise !49  ; FMad(a,b,c)
  %145 = fadd float %138, 0.000000e+00
  %146 = fadd float %141, 0.000000e+00
  %147 = fadd float %144, 0x3F1A36E2E0000000
  %148 = call float @dx.op.dot3.f32(i32 55, float %145, float %146, float %147, float %145, float %146, float %147), !dx.precise !49  ; Dot3(ax,ay,az,bx,by,bz)
  %149 = call float @dx.op.unary.f32(i32 25, float %148), !dx.precise !49  ; Rsqrt(value)
  %150 = fmul float %145, %149
  %151 = fmul float %146, %149
  %152 = fmul float %147, %149
  %153 = fmul float %138, %138
  %154 = fmul float %141, %141
  %155 = fadd float %153, %154
  %156 = fmul float %144, %144
  %157 = fadd float %155, %156
  %158 = call float @dx.op.unary.f32(i32 24, float %157), !dx.precise !49  ; Sqrt(value)
  %159 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %160 = extractvalue %dx.types.CBufRet.f32 %159, 0
  %161 = extractvalue %dx.types.CBufRet.f32 %159, 1
  %162 = extractvalue %dx.types.CBufRet.f32 %159, 2
  %163 = extractvalue %dx.types.CBufRet.f32 %159, 3
  %164 = fmul float %108, %162
  %165 = fmul float %108, %163
  %166 = fadd float %160, %164
  %167 = fadd float %161, %165
  %168 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %169 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %9, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %170 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %168, %dx.types.Handle %169, float %166, float %167, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %171 = extractvalue %dx.types.ResRet.f32 %170, 0
  %172 = extractvalue %dx.types.ResRet.f32 %170, 1
  %173 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %174 = extractvalue %dx.types.CBufRet.f32 %173, 0
  %175 = extractvalue %dx.types.CBufRet.f32 %173, 1
  %176 = fmul float %171, %174
  %177 = fmul float %172, %175
  %178 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %179 = extractvalue %dx.types.CBufRet.f32 %178, 0
  %180 = extractvalue %dx.types.CBufRet.f32 %178, 1
  %181 = fadd float %176, %179
  %182 = fadd float %177, %180
  %183 = fcmp olt float %118, 5.000000e-01
  %184 = select i1 %183, float 0.000000e+00, float -5.000000e-01
  %185 = fcmp olt float %119, 5.000000e-01
  %186 = select i1 %185, float 0.000000e+00, float -5.000000e-01
  %187 = fadd float %118, %184
  %188 = fadd float %119, %186
  %189 = fmul float %187, 2.000000e+00
  %190 = fmul float %188, 2.000000e+00
  %191 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %20, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %192 = extractvalue %dx.types.CBufRet.f32 %191, 0
  %193 = extractvalue %dx.types.CBufRet.f32 %191, 1
  %194 = fmul float %181, %192
  %195 = fmul float %182, %193
  %196 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %197 = extractvalue %dx.types.CBufRet.f32 %196, 0
  %198 = extractvalue %dx.types.CBufRet.f32 %196, 1
  %199 = fmul float %158, %197
  %200 = fmul float %158, %198
  %201 = call float @dx.op.binary.f32(i32 35, float %199, float 1.000000e+00), !dx.precise !49  ; FMax(a,b)
  %202 = call float @dx.op.binary.f32(i32 35, float %200, float 1.000000e+00), !dx.precise !49  ; FMax(a,b)
  %203 = extractvalue %dx.types.CBufRet.f32 %196, 2
  %204 = extractvalue %dx.types.CBufRet.f32 %196, 3
  %205 = call float @dx.op.binary.f32(i32 36, float %201, float %203), !dx.precise !49  ; FMin(a,b)
  %206 = call float @dx.op.binary.f32(i32 36, float %202, float %204), !dx.precise !49  ; FMin(a,b)
  %207 = fmul float %189, %194
  %208 = fmul float %190, %195
  %209 = fmul float %207, %205
  %210 = fmul float %208, %206
  %211 = fmul float %123, %209
  %212 = fmul float %123, %210
  %213 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %214 = extractvalue %dx.types.CBufRet.f32 %213, 0
  %215 = fmul float %121, %214
  %216 = fmul float %108, %215
  %217 = fadd float %120, %216
  %218 = fmul float %217, 2.000000e+00
  %219 = fmul float %218, 0x400921FB60000000
  %220 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %20, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %221 = extractvalue %dx.types.CBufRet.f32 %220, 0
  %222 = extractvalue %dx.types.CBufRet.f32 %220, 1
  %223 = extractvalue %dx.types.CBufRet.f32 %220, 2
  %224 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %22, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %225 = extractvalue %dx.types.CBufRet.f32 %224, 0
  %226 = extractvalue %dx.types.CBufRet.f32 %224, 1
  %227 = extractvalue %dx.types.CBufRet.f32 %224, 2
  %228 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %22, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %229 = extractvalue %dx.types.CBufRet.f32 %228, 0
  %230 = extractvalue %dx.types.CBufRet.f32 %228, 1
  %231 = extractvalue %dx.types.CBufRet.f32 %228, 2
  %232 = fmul float %105, %125
  %233 = fmul float %105, %126
  %234 = fmul float %105, %127
  %235 = fmul float %106, %129
  %236 = fmul float %106, %130
  %237 = fmul float %106, %131
  %238 = fadd float %232, %235
  %239 = fadd float %233, %236
  %240 = fadd float %234, %237
  %241 = fmul float %107, %133
  %242 = fmul float %107, %134
  %243 = fmul float %107, %135
  %244 = fadd float %238, %241
  %245 = fadd float %239, %242
  %246 = fadd float %240, %243
  %247 = fadd float %225, %244
  %248 = fadd float %226, %245
  %249 = fadd float %227, %246
  %250 = fadd float %247, 0.000000e+00
  %251 = fadd float %248, 0.000000e+00
  %252 = fadd float %249, 0.000000e+00
  %253 = fadd float %221, %229
  %254 = fadd float %222, %230
  %255 = fadd float %223, %231
  %256 = fadd float %89, %250
  %257 = fadd float %90, %251
  %258 = fadd float %91, %252
  %259 = fsub float %253, %65
  %260 = fsub float %254, %66
  %261 = fsub float %255, %67
  %262 = fmul float %259, 2.097152e+06
  %263 = fmul float %260, 2.097152e+06
  %264 = fmul float %261, 2.097152e+06
  %265 = fadd float %262, %256
  %266 = fadd float %263, %257
  %267 = fadd float %264, %258
  %268 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %269 = extractvalue %dx.types.CBufRet.f32 %268, 3
  %270 = fsub float %81, %73
  %271 = fsub float %82, %74
  %272 = fsub float %83, %75
  %273 = fmul float %270, %269
  %274 = fmul float %271, %269
  %275 = fmul float %272, %269
  %276 = fadd float %73, %273
  %277 = fadd float %74, %274
  %278 = fadd float %75, %275
  %279 = fsub float %77, %69
  %280 = fsub float %78, %70
  %281 = fsub float %79, %71
  %282 = fmul float %279, %269
  %283 = fmul float %280, %269
  %284 = fmul float %281, %269
  %285 = fadd float %69, %282
  %286 = fadd float %70, %283
  %287 = fadd float %71, %284
  %288 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %20, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %289 = extractvalue %dx.types.CBufRet.f32 %288, 3
  %290 = extractvalue %dx.types.CBufRet.f32 %288, 0
  %291 = extractvalue %dx.types.CBufRet.f32 %288, 1
  %292 = extractvalue %dx.types.CBufRet.f32 %288, 2
  %293 = fsub float %290, %276
  %294 = fsub float %291, %277
  %295 = fsub float %292, %278
  %296 = fmul float %289, %293
  %297 = fmul float %289, %294
  %298 = fmul float %289, %295
  %299 = fadd float %276, %296
  %300 = fadd float %277, %297
  %301 = fadd float %278, %298
  %302 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %20, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %303 = extractvalue %dx.types.CBufRet.f32 %302, 3
  %304 = extractvalue %dx.types.CBufRet.f32 %302, 0
  %305 = extractvalue %dx.types.CBufRet.f32 %302, 1
  %306 = extractvalue %dx.types.CBufRet.f32 %302, 2
  %307 = fadd float %285, %304
  %308 = fadd float %286, %305
  %309 = fadd float %287, %306
  %310 = fmul float %303, %307
  %311 = fmul float %303, %308
  %312 = fmul float %303, %309
  %313 = fsub float %310, %285
  %314 = fsub float %311, %286
  %315 = fsub float %312, %287
  %316 = fsub float %85, %265
  %317 = fsub float %86, %266
  %318 = fsub float %87, %267
  %319 = call float @dx.op.dot3.f32(i32 55, float %316, float %317, float %318, float %316, float %317, float %318), !dx.precise !49  ; Dot3(ax,ay,az,bx,by,bz)
  %320 = call float @dx.op.binary.f32(i32 35, float %319, float 0x3F847AE140000000), !dx.precise !49  ; FMax(a,b)
  %321 = call float @dx.op.unary.f32(i32 24, float %320), !dx.precise !49  ; Sqrt(value)
  %322 = fdiv float %316, %321
  %323 = fdiv float %317, %321
  %324 = fdiv float %318, %321
  %325 = extractvalue %dx.types.CBufRet.f32 %268, 0
  %326 = fcmp ogt float %325, 0.000000e+00
  br i1 %326, label %327, label %382, !dx.controlflow.hints !50

; <label>:327                                     ; preds = %0
  %328 = extractvalue %dx.types.CBufRet.f32 %268, 1
  %329 = fmul float %319, %328
  %330 = extractvalue %dx.types.CBufRet.f32 %268, 2
  %331 = fsub float %329, %330
  %332 = call float @dx.op.unary.f32(i32 7, float %331), !dx.precise !49  ; Saturate(value)
  %333 = fmul float %324, 0.000000e+00
  %334 = fsub float %323, %333
  %335 = fsub float %333, %322
  %336 = fmul float %322, 0.000000e+00
  %337 = fmul float %323, 0.000000e+00
  %338 = fsub float %336, %337
  %339 = call float @dx.op.dot3.f32(i32 55, float %334, float %335, float %338, float %334, float %335, float %338), !dx.precise !49  ; Dot3(ax,ay,az,bx,by,bz)
  %340 = call float @dx.op.binary.f32(i32 35, float %339, float 0x3F847AE140000000), !dx.precise !49  ; FMax(a,b)
  %341 = call float @dx.op.unary.f32(i32 24, float %340), !dx.precise !49  ; Sqrt(value)
  %342 = fdiv float %334, %341
  %343 = fdiv float %335, %341
  %344 = fdiv float %338, %341
  %345 = fmul float %323, %344
  %346 = fmul float %324, %343
  %347 = fsub float %345, %346
  %348 = fmul float %324, %342
  %349 = fmul float %322, %344
  %350 = fsub float %348, %349
  %351 = fmul float %322, %343
  %352 = fmul float %323, %342
  %353 = fsub float %351, %352
  %354 = fsub float %342, %299
  %355 = fsub float %343, %300
  %356 = fsub float %344, %301
  %357 = fmul float %332, %354
  %358 = fmul float %332, %355
  %359 = fmul float %332, %356
  %360 = fadd float %299, %357
  %361 = fadd float %300, %358
  %362 = fadd float %301, %359
  %363 = call float @dx.op.dot3.f32(i32 55, float %360, float %361, float %362, float %360, float %361, float %362), !dx.precise !49  ; Dot3(ax,ay,az,bx,by,bz)
  %364 = call float @dx.op.unary.f32(i32 25, float %363), !dx.precise !49  ; Rsqrt(value)
  %365 = fmul float %360, %364
  %366 = fmul float %361, %364
  %367 = fmul float %364, %362
  %368 = fsub float %347, %313
  %369 = fsub float %350, %314
  %370 = fsub float %353, %315
  %371 = fmul float %332, %368
  %372 = fmul float %332, %369
  %373 = fmul float %332, %370
  %374 = fadd float %313, %371
  %375 = fadd float %314, %372
  %376 = fadd float %315, %373
  %377 = call float @dx.op.dot3.f32(i32 55, float %374, float %375, float %376, float %374, float %375, float %376), !dx.precise !49  ; Dot3(ax,ay,az,bx,by,bz)
  %378 = call float @dx.op.unary.f32(i32 25, float %377), !dx.precise !49  ; Rsqrt(value)
  %379 = fmul float %378, %374
  %380 = fmul float %378, %375
  %381 = fmul float %376, %378
  br label %452

; <label>:382                                     ; preds = %0
  %383 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %384 = extractvalue %dx.types.CBufRet.f32 %383, 1
  %385 = fcmp ogt float %384, 0.000000e+00
  br i1 %385, label %386, label %405, !dx.controlflow.hints !51

; <label>:386                                     ; preds = %382
  %387 = fmul float %152, %323
  %388 = fmul float %151, %324
  %389 = fsub float %387, %388
  %390 = fmul float %150, %324
  %391 = fmul float %152, %322
  %392 = fsub float %390, %391
  %393 = fmul float %151, %322
  %394 = fmul float %150, %323
  %395 = fsub float %393, %394
  %396 = call float @dx.op.dot3.f32(i32 55, float %389, float %392, float %395, float %389, float %392, float %395), !dx.precise !49  ; Dot3(ax,ay,az,bx,by,bz)
  %397 = call float @dx.op.binary.f32(i32 35, float %396, float 0x3F847AE140000000), !dx.precise !49  ; FMax(a,b)
  %398 = call float @dx.op.unary.f32(i32 24, float %397), !dx.precise !49  ; Sqrt(value)
  %399 = fdiv float %389, %398
  %400 = fdiv float %392, %398
  %401 = fdiv float %395, %398
  %402 = fsub float -0.000000e+00, %150
  %403 = fsub float -0.000000e+00, %151
  %404 = fsub float -0.000000e+00, %152
  br label %452

; <label>:405                                     ; preds = %382
  %406 = extractvalue %dx.types.CBufRet.f32 %383, 2
  %407 = fcmp ogt float %406, 0.000000e+00
  br i1 %407, label %408, label %427

; <label>:408                                     ; preds = %405
  %409 = fmul float %324, %291
  %410 = fmul float %323, %292
  %411 = fsub float %409, %410
  %412 = fmul float %322, %292
  %413 = fmul float %324, %290
  %414 = fsub float %412, %413
  %415 = fmul float %323, %290
  %416 = fmul float %322, %291
  %417 = fsub float %415, %416
  %418 = call float @dx.op.dot3.f32(i32 55, float %411, float %414, float %417, float %411, float %414, float %417), !dx.precise !49  ; Dot3(ax,ay,az,bx,by,bz)
  %419 = call float @dx.op.binary.f32(i32 35, float %418, float 0x3F847AE140000000), !dx.precise !49  ; FMax(a,b)
  %420 = call float @dx.op.unary.f32(i32 24, float %419), !dx.precise !49  ; Sqrt(value)
  %421 = fdiv float %411, %420
  %422 = fdiv float %414, %420
  %423 = fdiv float %417, %420
  %424 = fsub float -0.000000e+00, %421
  %425 = fsub float -0.000000e+00, %422
  %426 = fsub float -0.000000e+00, %423
  br label %452

; <label>:427                                     ; preds = %405
  %428 = extractvalue %dx.types.CBufRet.f32 %383, 3
  %429 = fcmp ogt float %428, 0.000000e+00
  br i1 %429, label %430, label %452

; <label>:430                                     ; preds = %427
  %431 = fmul float %324, 0.000000e+00
  %432 = fsub float %323, %431
  %433 = fsub float %431, %322
  %434 = fmul float %322, 0.000000e+00
  %435 = fmul float %323, 0.000000e+00
  %436 = fsub float %434, %435
  %437 = call float @dx.op.dot3.f32(i32 55, float %432, float %433, float %436, float %432, float %433, float %436), !dx.precise !49  ; Dot3(ax,ay,az,bx,by,bz)
  %438 = call float @dx.op.binary.f32(i32 35, float %437, float 0x3F847AE140000000), !dx.precise !49  ; FMax(a,b)
  %439 = call float @dx.op.unary.f32(i32 24, float %438), !dx.precise !49  ; Sqrt(value)
  %440 = fdiv float %432, %439
  %441 = fdiv float %433, %439
  %442 = fdiv float %436, %439
  %443 = fmul float %323, %442
  %444 = fmul float %324, %441
  %445 = fsub float %443, %444
  %446 = fmul float %324, %440
  %447 = fmul float %322, %442
  %448 = fsub float %446, %447
  %449 = fmul float %322, %441
  %450 = fmul float %323, %440
  %451 = fsub float %449, %450
  br label %452

; <label>:452                                     ; preds = %430, %427, %408, %386, %327
  %453 = phi float [ %365, %327 ], [ %399, %386 ], [ %290, %408 ], [ %440, %430 ], [ %299, %427 ]
  %454 = phi float [ %366, %327 ], [ %400, %386 ], [ %291, %408 ], [ %441, %430 ], [ %300, %427 ]
  %455 = phi float [ %367, %327 ], [ %401, %386 ], [ %292, %408 ], [ %442, %430 ], [ %301, %427 ]
  %456 = phi float [ %379, %327 ], [ %402, %386 ], [ %424, %408 ], [ %445, %430 ], [ %313, %427 ]
  %457 = phi float [ %380, %327 ], [ %403, %386 ], [ %425, %408 ], [ %448, %430 ], [ %314, %427 ]
  %458 = phi float [ %381, %327 ], [ %404, %386 ], [ %426, %408 ], [ %451, %430 ], [ %315, %427 ]
  %459 = extractvalue %dx.types.CBufRet.f32 %213, 1
  %460 = fadd float %219, %459
  %461 = call float @dx.op.unary.f32(i32 13, float %460), !dx.precise !49  ; Sin(value)
  %462 = call float @dx.op.unary.f32(i32 12, float %460), !dx.precise !49  ; Cos(value)
  %463 = fmul float %456, %461
  %464 = fmul float %457, %461
  %465 = fmul float %458, %461
  %466 = fmul float %453, %462
  %467 = fmul float %454, %462
  %468 = fmul float %455, %462
  %469 = fadd float %463, %466
  %470 = fadd float %464, %467
  %471 = fadd float %465, %468
  %472 = fmul float %456, %462
  %473 = fmul float %457, %462
  %474 = fmul float %458, %462
  %475 = fmul float %453, %461
  %476 = fmul float %454, %461
  %477 = fmul float %455, %461
  %478 = fsub float %472, %475
  %479 = fsub float %473, %476
  %480 = fsub float %474, %477
  %481 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 11)  ; CBufferLoadLegacy(handle,regIndex)
  %482 = extractvalue %dx.types.CBufRet.f32 %481, 0
  %483 = fadd float %25, %482
  %484 = fmul float %211, %483
  %485 = fmul float %469, %484
  %486 = fmul float %470, %484
  %487 = fmul float %471, %484
  %488 = extractvalue %dx.types.CBufRet.f32 %481, 1
  %489 = fadd float %26, %488
  %490 = fmul float %212, %489
  %491 = fmul float %478, %490
  %492 = fmul float %479, %490
  %493 = fmul float %480, %490
  %494 = fadd float %485, %491
  %495 = fadd float %486, %492
  %496 = fadd float %487, %493
  %497 = fadd float %265, %494
  %498 = fadd float %266, %495
  %499 = fadd float %267, %496
  %500 = fmul float %470, %480
  %501 = fmul float %471, %479
  %502 = fsub float %500, %501
  %503 = fmul float %471, %478
  %504 = fmul float %469, %480
  %505 = fsub float %503, %504
  %506 = fmul float %469, %479
  %507 = fmul float %470, %478
  %508 = fsub float %506, %507
  %509 = call float @dx.op.dot3.f32(i32 55, float %502, float %505, float %508, float %502, float %505, float %508), !dx.precise !49  ; Dot3(ax,ay,az,bx,by,bz)
  %510 = call float @dx.op.unary.f32(i32 25, float %509), !dx.precise !49  ; Rsqrt(value)
  %511 = fmul float %502, %510
  %512 = fmul float %505, %510
  %513 = fmul float %508, %510
  %514 = fadd float %497, 0.000000e+00
  %515 = fadd float %498, 0.000000e+00
  %516 = fadd float %499, 0.000000e+00
  %517 = fmul float %30, %514
  %518 = call float @dx.op.tertiary.f32(i32 46, float %515, float %35, float %517), !dx.precise !49  ; FMad(a,b,c)
  %519 = call float @dx.op.tertiary.f32(i32 46, float %516, float %40, float %518), !dx.precise !49  ; FMad(a,b,c)
  %520 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %45, float %519), !dx.precise !49  ; FMad(a,b,c)
  %521 = fmul float %31, %514
  %522 = call float @dx.op.tertiary.f32(i32 46, float %515, float %36, float %521), !dx.precise !49  ; FMad(a,b,c)
  %523 = call float @dx.op.tertiary.f32(i32 46, float %516, float %41, float %522), !dx.precise !49  ; FMad(a,b,c)
  %524 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %46, float %523), !dx.precise !49  ; FMad(a,b,c)
  %525 = fmul float %32, %514
  %526 = call float @dx.op.tertiary.f32(i32 46, float %515, float %37, float %525), !dx.precise !49  ; FMad(a,b,c)
  %527 = call float @dx.op.tertiary.f32(i32 46, float %516, float %42, float %526), !dx.precise !49  ; FMad(a,b,c)
  %528 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %47, float %527), !dx.precise !49  ; FMad(a,b,c)
  %529 = fmul float %33, %514
  %530 = call float @dx.op.tertiary.f32(i32 46, float %515, float %38, float %529), !dx.precise !49  ; FMad(a,b,c)
  %531 = call float @dx.op.tertiary.f32(i32 46, float %516, float %43, float %530), !dx.precise !49  ; FMad(a,b,c)
  %532 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %48, float %531), !dx.precise !49  ; FMad(a,b,c)
  %533 = fcmp ogt float %61, 0.000000e+00
  %534 = fcmp ogt float %528, %532
  %535 = and i1 %533, %534
  %536 = select i1 %535, float 0x3FEFFFFDE0000000, float %528
  %537 = select i1 %535, float 1.000000e+00, float %532
  %538 = call float @dx.op.dot3.f32(i32 55, float %50, float %52, float %54, float %511, float %512, float %513), !dx.precise !49  ; Dot3(ax,ay,az,bx,by,bz)
  %539 = call float @dx.op.unary.f32(i32 6, float %538), !dx.precise !49  ; FAbs(value)
  %540 = call float @dx.op.unary.f32(i32 6, float %539), !dx.precise !49  ; FAbs(value)
  %541 = fcmp ogt float %540, 0.000000e+00
  %542 = fmul float %539, %539
  %543 = fsub float 1.000000e+00, %542
  %544 = call float @dx.op.unary.f32(i32 7, float %543), !dx.precise !49  ; Saturate(value)
  %545 = call float @dx.op.unary.f32(i32 24, float %544), !dx.precise !49  ; Sqrt(value)
  %546 = fdiv float %545, %539
  %547 = select i1 %541, float %546, float %58
  %548 = call float @dx.op.binary.f32(i32 35, float %547, float 0.000000e+00), !dx.precise !49  ; FMax(a,b)
  %549 = call float @dx.op.binary.f32(i32 36, float %548, float %58), !dx.precise !49  ; FMin(a,b)
  %550 = fmul float %57, %549
  %551 = fadd float %56, %550
  %552 = fmul float %59, %536
  %553 = fsub float 1.000000e+00, %552
  %554 = fadd float %553, %551
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  %555 = icmp eq i32 %63, 0
  br i1 %555, label %676, label %556

; <label>:556                                     ; preds = %452
  %557 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %8, %dx.types.ResourceProperties { i32 12, i32 4 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=4>
  %558 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %557, i32 0, i32 0, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %559 = extractvalue %dx.types.ResRet.i32 %558, 0
  %560 = and i32 %559, 65535
  %561 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %7, %dx.types.ResourceProperties { i32 524, i32 912 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=912>
  %562 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %561, i32 %560, i32 192, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %563 = extractvalue %dx.types.ResRet.f32 %562, 0
  %564 = extractvalue %dx.types.ResRet.f32 %562, 1
  %565 = extractvalue %dx.types.ResRet.f32 %562, 2
  %566 = extractvalue %dx.types.ResRet.f32 %562, 3
  %567 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %561, i32 %560, i32 208, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %568 = extractvalue %dx.types.ResRet.f32 %567, 0
  %569 = extractvalue %dx.types.ResRet.f32 %567, 1
  %570 = extractvalue %dx.types.ResRet.f32 %567, 2
  %571 = extractvalue %dx.types.ResRet.f32 %567, 3
  %572 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %561, i32 %560, i32 224, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %573 = extractvalue %dx.types.ResRet.f32 %572, 0
  %574 = extractvalue %dx.types.ResRet.f32 %572, 1
  %575 = extractvalue %dx.types.ResRet.f32 %572, 2
  %576 = extractvalue %dx.types.ResRet.f32 %572, 3
  %577 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %561, i32 %560, i32 240, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %578 = extractvalue %dx.types.ResRet.f32 %577, 0
  %579 = extractvalue %dx.types.ResRet.f32 %577, 1
  %580 = extractvalue %dx.types.ResRet.f32 %577, 2
  %581 = extractvalue %dx.types.ResRet.f32 %577, 3
  %582 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %561, i32 %560, i32 752, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %583 = extractvalue %dx.types.ResRet.f32 %582, 0
  %584 = extractvalue %dx.types.ResRet.f32 %582, 1
  %585 = extractvalue %dx.types.ResRet.f32 %582, 2
  %586 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %561, i32 %560, i32 764, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %587 = extractvalue %dx.types.ResRet.f32 %586, 0
  %588 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %561, i32 %560, i32 780, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %589 = extractvalue %dx.types.ResRet.f32 %588, 0
  %590 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %561, i32 %560, i32 796, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %591 = extractvalue %dx.types.ResRet.f32 %590, 0
  %592 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %561, i32 %560, i32 880, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %593 = extractvalue %dx.types.ResRet.i32 %592, 0
  %594 = extractvalue %dx.types.ResRet.i32 %592, 1
  %595 = fsub fast float %65, %587
  %596 = fsub fast float %66, %589
  %597 = fsub fast float %67, %591
  %598 = fmul fast float %595, 2.097152e+06
  %599 = fmul fast float %596, 2.097152e+06
  %600 = fmul fast float %597, 2.097152e+06
  %601 = fsub fast float %497, %89
  %602 = fadd fast float %601, %583
  %603 = fadd fast float %602, %598
  %604 = fsub fast float %498, %90
  %605 = fadd fast float %604, %584
  %606 = fadd fast float %605, %599
  %607 = fsub fast float %499, %91
  %608 = fadd fast float %607, %585
  %609 = fadd fast float %608, %600
  %610 = fmul fast float %603, %563
  %611 = call float @dx.op.tertiary.f32(i32 46, float %606, float %568, float %610)  ; FMad(a,b,c)
  %612 = call float @dx.op.tertiary.f32(i32 46, float %609, float %573, float %611)  ; FMad(a,b,c)
  %613 = fadd fast float %612, %578
  %614 = fmul fast float %603, %564
  %615 = call float @dx.op.tertiary.f32(i32 46, float %606, float %569, float %614)  ; FMad(a,b,c)
  %616 = call float @dx.op.tertiary.f32(i32 46, float %609, float %574, float %615)  ; FMad(a,b,c)
  %617 = fadd fast float %616, %579
  %618 = fmul fast float %603, %565
  %619 = call float @dx.op.tertiary.f32(i32 46, float %606, float %570, float %618)  ; FMad(a,b,c)
  %620 = call float @dx.op.tertiary.f32(i32 46, float %609, float %575, float %619)  ; FMad(a,b,c)
  %621 = fadd fast float %620, %580
  %622 = fmul fast float %603, %566
  %623 = call float @dx.op.tertiary.f32(i32 46, float %606, float %571, float %622)  ; FMad(a,b,c)
  %624 = call float @dx.op.tertiary.f32(i32 46, float %609, float %576, float %623)  ; FMad(a,b,c)
  %625 = fadd fast float %624, %581
  %626 = fcmp fast ogt float %621, %625
  %627 = and i1 %533, %626
  %628 = select i1 %627, float 0x3FEFFFFDE0000000, float %621
  %629 = select i1 %627, float 1.000000e+00, float %625
  %630 = fadd fast float %629, %613
  %631 = fsub fast float %629, %617
  %632 = fmul fast float %631, 5.000000e-01
  %633 = and i32 %594, 31
  %634 = lshr i32 16384, %633
  %635 = uitofp i32 %634 to float
  %636 = fmul fast float %635, 5.000000e-01
  %637 = fmul fast float %636, %630
  %638 = fmul fast float %632, %635
  %639 = sub nsw i32 0, %594
  %640 = sitofp i32 %639 to float
  %641 = call float @dx.op.unary.f32(i32 21, float %640)  ; Exp(value)
  %642 = fmul fast float %641, %613
  %643 = fmul fast float %641, %617
  %644 = fadd fast float %641, -1.000000e+00
  %645 = fsub fast float 1.000000e+00, %641
  %646 = fmul fast float %629, %644
  %647 = fmul fast float %629, %645
  %648 = fadd fast float %646, %642
  %649 = fadd fast float %647, %643
  %650 = shl i32 %593, 3
  %651 = add nsw i32 %650, %594
  %652 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %6, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %653 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %652, i32 %651, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %654 = extractvalue %dx.types.ResRet.i32 %653, 0
  %655 = extractvalue %dx.types.ResRet.i32 %653, 1
  %656 = extractvalue %dx.types.ResRet.i32 %653, 2
  %657 = extractvalue %dx.types.ResRet.i32 %653, 3
  %658 = shl i32 %654, 7
  %659 = shl i32 %655, 7
  %660 = uitofp i32 %658 to float
  %661 = uitofp i32 %659 to float
  %662 = fmul fast float %660, %629
  %663 = fmul fast float %661, %629
  %664 = fsub fast float %637, %662
  %665 = fsub fast float %638, %663
  %666 = shl i32 %656, 7
  %667 = add i32 %666, 128
  %668 = shl i32 %657, 7
  %669 = add i32 %668, 128
  %670 = uitofp i32 %667 to float
  %671 = uitofp i32 %669 to float
  %672 = fmul fast float %670, %629
  %673 = fmul fast float %671, %629
  %674 = fsub fast float %672, %637
  %675 = fsub fast float %673, %638
  br label %676

; <label>:676                                     ; preds = %556, %452
  %677 = phi float [ %664, %556 ], [ 1.000000e+00, %452 ]
  %678 = phi float [ %665, %556 ], [ 1.000000e+00, %452 ]
  %679 = phi float [ %674, %556 ], [ 1.000000e+00, %452 ]
  %680 = phi float [ %675, %556 ], [ 1.000000e+00, %452 ]
  %681 = phi float [ %648, %556 ], [ %520, %452 ]
  %682 = phi float [ %649, %556 ], [ %524, %452 ]
  %683 = phi float [ %628, %556 ], [ %554, %452 ]
  %684 = phi float [ %629, %556 ], [ %537, %452 ]
  %685 = phi i32 [ %559, %556 ], [ 0, %452 ]
  call void @dx.op.storeOutput.i32(i32 5, i32 1, i32 0, i8 0, i32 %685)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %681)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float %682)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 2, float %683)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 3, float %684)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 0, float %677)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 1, float %678)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 2, float %679)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 3, float %680)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.loadInput.i32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind
declare void @dx.op.storeOutput.i32(i32, i32, i32, i8, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.viewIdState = !{!30}
!dx.entryPoints = !{!31}

!0 = !{!"dxc(private) 1.7.0.0 (private, 00000000)"}
!1 = !{i32 1, i32 6}
!2 = !{i32 1, i32 7}
!3 = !{!"vs", i32 6, i32 6}
!4 = !{!5, null, !18, !25}
!5 = !{!6, !8, !10, !12, !14, !15, !16, !17}
!6 = !{i32 0, %"class.StructuredBuffer<unsigned int>"* undef, !"", i32 0, i32 0, i32 1, i32 12, i32 0, !7}
!7 = !{i32 1, i32 4}
!8 = !{i32 1, %"hostlayout.class.StructuredBuffer<FPackedNaniteView>"* undef, !"", i32 0, i32 1, i32 1, i32 12, i32 0, !9}
!9 = !{i32 1, i32 912}
!10 = !{i32 2, %"class.StructuredBuffer<vector<unsigned int, 4> >"* undef, !"", i32 0, i32 2, i32 1, i32 12, i32 0, !11}
!11 = !{i32 1, i32 16}
!12 = !{i32 3, %"class.Buffer<vector<float, 2> >"* undef, !"", i32 0, i32 3, i32 1, i32 10, i32 0, !13}
!13 = !{i32 0, i32 9}
!14 = !{i32 4, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 4, i32 1, i32 2, i32 0, !13}
!15 = !{i32 5, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 5, i32 1, i32 2, i32 0, !13}
!16 = !{i32 6, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 6, i32 1, i32 2, i32 0, !13}
!17 = !{i32 7, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 7, i32 1, i32 2, i32 0, !13}
!18 = !{!19, !20, !21, !22, !23, !24}
!19 = !{i32 0, %"$Globals"* undef, !"", i32 0, i32 0, i32 1, i32 72, null}
!20 = !{i32 1, %hostlayout.UniformBufferConstants_View* undef, !"", i32 0, i32 1, i32 1, i32 5388, null}
!21 = !{i32 2, %hostlayout.UniformBufferConstants_Primitive* undef, !"", i32 0, i32 2, i32 1, i32 736, null}
!22 = !{i32 3, %hostlayout.UniformBufferConstants_ShadowDepthPass* undef, !"", i32 0, i32 3, i32 1, i32 1076, null}
!23 = !{i32 4, %UniformBufferConstants_EmitterDynamicUniforms* undef, !"", i32 0, i32 4, i32 1, i32 96, null}
!24 = !{i32 5, %UniformBufferConstants_EmitterUniforms* undef, !"", i32 0, i32 5, i32 1, i32 184, null}
!25 = !{!26, !27, !28, !29}
!26 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 0, i32 1, i32 0, null}
!27 = !{i32 1, %struct.SamplerState* undef, !"", i32 0, i32 1, i32 1, i32 0, null}
!28 = !{i32 2, %struct.SamplerState* undef, !"", i32 0, i32 2, i32 1, i32 0, null}
!29 = !{i32 3, %struct.SamplerState* undef, !"", i32 0, i32 3, i32 1, i32 0, null}
!30 = !{[12 x i32] [i32 10, i32 16, i32 65280, i32 0, i32 0, i32 0, i32 65280, i32 0, i32 0, i32 0, i32 65280, i32 65280]}
!31 = !{void ()* @Main, !"Main", !32, !4, !48}
!32 = !{!33, !40, null}
!33 = !{!34, !37, !38}
!34 = !{i32 0, !"SV_VertexID", i8 5, i8 1, !35, i8 0, i32 1, i8 1, i32 0, i8 0, !36}
!35 = !{i32 0}
!36 = !{i32 3, i32 1}
!37 = !{i32 1, !"SV_InstanceID", i8 5, i8 2, !35, i8 0, i32 1, i8 1, i32 1, i8 0, !36}
!38 = !{i32 2, !"ATTRIBUTE", i8 9, i8 0, !35, i8 0, i32 1, i8 2, i32 2, i8 0, !39}
!39 = !{i32 3, i32 3}
!40 = !{!41, !43, !45, !47}
!41 = !{i32 0, !"TEXCOORD", i8 9, i8 0, !42, i8 2, i32 1, i8 1, i32 0, i8 0, !36}
!42 = !{i32 6}
!43 = !{i32 1, !"TEXCOORD", i8 5, i8 0, !44, i8 1, i32 1, i8 1, i32 1, i8 0, !36}
!44 = !{i32 8}
!45 = !{i32 2, !"SV_Position", i8 9, i8 3, !35, i8 4, i32 1, i8 4, i32 2, i8 0, !46}
!46 = !{i32 3, i32 15}
!47 = !{i32 3, !"SV_ClipDistance", i8 9, i8 6, !35, i8 2, i32 1, i8 4, i32 3, i8 0, !46}
!48 = !{i32 0, i64 16, i32 5, !35}
!49 = !{i32 1}
!50 = distinct !{!50, !"dx.controlflow.hints", i32 1}
!51 = distinct !{!51, !"dx.controlflow.hints", i32 2}
