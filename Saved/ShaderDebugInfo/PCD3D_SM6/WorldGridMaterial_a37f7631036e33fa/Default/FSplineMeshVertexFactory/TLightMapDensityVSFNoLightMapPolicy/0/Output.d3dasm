;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; ATTRIBUTE                0   xyzw        0     NONE   float   xyzw
; ATTRIBUTE               13   x           1     NONE    uint   x   
; SV_InstanceID            0   x           2   INSTID    uint   x   
; SV_VertexID              0   x           3   VERTID    uint   x   
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD10_centroid      0   xyzw        0     NONE   float   xyzw
; TEXCOORD11_centroid      0   xyzw        1     NONE   float   xyzw
; TEXCOORD                 0   xyzw        2     NONE   float   xyzw
; PRIMITIVE_ID             0   x           3     NONE    uint   x   
; TEXCOORD                 6   xyzw        4     NONE   float   xyzw
; TEXCOORD                 7   xyz         5     NONE   float   xyz 
; SV_Position              0   xyzw        6      POS   float   xyzw
;
; shader hash: baeb32288ccc0d6cc99105bb92f4e6dd
;
; Pipeline Runtime Information: 
;
; Vertex Shader
; OutputPositionPresent=1
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; ATTRIBUTE                0                              
; ATTRIBUTE               13                              
; SV_InstanceID            0                              
; SV_VertexID              0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD10_centroid      0                 linear       
; TEXCOORD11_centroid      0                 linear       
; TEXCOORD                 0                 linear       
; PRIMITIVE_ID             0        nointerpolation       
; TEXCOORD                 6                 linear       
; TEXCOORD                 7                 linear       
; SV_Position              0          noperspective       
;
; Buffer Definitions:
;
; cbuffer $Globals
; {
;
;   struct $Globals
;   {
;
;       float4 DepthOfFieldParams;                    ; Offset:    0
;       uint bSceneLightingChannelsValid;             ; Offset:   16
;       float4 SplineParams[10];                      ; Offset:   32
;       float2 LightMapResolutionScale;               ; Offset:  192
;       float3 BuiltLightingAndSelectedFlags;         ; Offset:  208
;       float4 LightMapDensityDisplayOptions;         ; Offset:  224
;   
;   } $Globals;                                       ; Offset:    0 Size:   240
;
; }
;
; cbuffer UniformBufferConstants_View
; {
;
;   struct hostlayout.UniformBufferConstants_View
;   {
;
;       row_major float4x4 View_TranslatedWorldToClip;; Offset:    0
;       row_major float4x4 View_TranslatedWorldToSubpixelClip;; Offset:   64
;       row_major float4x4 View_RelativeWorldToClip;  ; Offset:  128
;       row_major float4x4 View_ClipToRelativeWorld;  ; Offset:  192
;       row_major float4x4 View_TranslatedWorldToView;; Offset:  256
;       row_major float4x4 View_ViewToTranslatedWorld;; Offset:  320
;       row_major float4x4 View_TranslatedWorldToCameraView;; Offset:  384
;       row_major float4x4 View_CameraViewToTranslatedWorld;; Offset:  448
;       row_major float4x4 View_ViewToClip;           ; Offset:  512
;       row_major float4x4 View_ViewToClipNoAA;       ; Offset:  576
;       row_major float4x4 View_ClipToView;           ; Offset:  640
;       row_major float4x4 View_ClipToTranslatedWorld;; Offset:  704
;       row_major float4x4 View_SVPositionToTranslatedWorld;; Offset:  768
;       row_major float4x4 View_ScreenToRelativeWorld;; Offset:  832
;       row_major float4x4 View_ScreenToTranslatedWorld;; Offset:  896
;       row_major float4x4 View_MobileMultiviewShadowTransform;; Offset:  960
;       float3 View_ViewTilePosition;                 ; Offset: 1024
;       float PrePadding_View_1036;                   ; Offset: 1036
;       float3 View_MatrixTilePosition;               ; Offset: 1040
;       float PrePadding_View_1052;                   ; Offset: 1052
;       float3 View_ViewForward;                      ; Offset: 1056
;       float PrePadding_View_1068;                   ; Offset: 1068
;       float3 View_ViewUp;                           ; Offset: 1072
;       float PrePadding_View_1084;                   ; Offset: 1084
;       float3 View_ViewRight;                        ; Offset: 1088
;       float PrePadding_View_1100;                   ; Offset: 1100
;       float3 View_HMDViewNoRollUp;                  ; Offset: 1104
;       float PrePadding_View_1116;                   ; Offset: 1116
;       float3 View_HMDViewNoRollRight;               ; Offset: 1120
;       float PrePadding_View_1132;                   ; Offset: 1132
;       float4 View_InvDeviceZToWorldZTransform;      ; Offset: 1136
;       float4 View_ScreenPositionScaleBias;          ; Offset: 1152
;       float3 View_RelativeWorldCameraOrigin;        ; Offset: 1168
;       float PrePadding_View_1180;                   ; Offset: 1180
;       float3 View_TranslatedWorldCameraOrigin;      ; Offset: 1184
;       float PrePadding_View_1196;                   ; Offset: 1196
;       float3 View_RelativeWorldViewOrigin;          ; Offset: 1200
;       float PrePadding_View_1212;                   ; Offset: 1212
;       float3 View_RelativePreViewTranslation;       ; Offset: 1216
;       float PrePadding_View_1228;                   ; Offset: 1228
;       row_major float4x4 View_PrevViewToClip;       ; Offset: 1232
;       row_major float4x4 View_PrevClipToView;       ; Offset: 1296
;       row_major float4x4 View_PrevTranslatedWorldToClip;; Offset: 1360
;       row_major float4x4 View_PrevTranslatedWorldToView;; Offset: 1424
;       row_major float4x4 View_PrevViewToTranslatedWorld;; Offset: 1488
;       row_major float4x4 View_PrevTranslatedWorldToCameraView;; Offset: 1552
;       row_major float4x4 View_PrevCameraViewToTranslatedWorld;; Offset: 1616
;       float3 View_PrevTranslatedWorldCameraOrigin;  ; Offset: 1680
;       float PrePadding_View_1692;                   ; Offset: 1692
;       float3 View_PrevRelativeWorldCameraOrigin;    ; Offset: 1696
;       float PrePadding_View_1708;                   ; Offset: 1708
;       float3 View_PrevRelativeWorldViewOrigin;      ; Offset: 1712
;       float PrePadding_View_1724;                   ; Offset: 1724
;       float3 View_RelativePrevPreViewTranslation;   ; Offset: 1728
;       float PrePadding_View_1740;                   ; Offset: 1740
;       row_major float4x4 View_PrevClipToRelativeWorld;; Offset: 1744
;       row_major float4x4 View_PrevScreenToTranslatedWorld;; Offset: 1808
;       row_major float4x4 View_ClipToPrevClip;       ; Offset: 1872
;       row_major float4x4 View_ClipToPrevClipWithAA; ; Offset: 1936
;       float4 View_TemporalAAJitter;                 ; Offset: 2000
;       float4 View_GlobalClippingPlane;              ; Offset: 2016
;       float2 View_FieldOfViewWideAngles;            ; Offset: 2032
;       float2 View_PrevFieldOfViewWideAngles;        ; Offset: 2040
;       float4 View_ViewRectMin;                      ; Offset: 2048
;       float4 View_ViewSizeAndInvSize;               ; Offset: 2064
;       uint4 View_ViewRectMinAndSize;                ; Offset: 2080
;       float4 View_LightProbeSizeRatioAndInvSizeRatio;; Offset: 2096
;       float4 View_BufferSizeAndInvSize;             ; Offset: 2112
;       float4 View_BufferBilinearUVMinMax;           ; Offset: 2128
;       float4 View_ScreenToViewSpace;                ; Offset: 2144
;       float2 View_BufferToSceneTextureScale;        ; Offset: 2160
;       float2 View_ResolutionFractionAndInv;         ; Offset: 2168
;       int View_NumSceneColorMSAASamples;            ; Offset: 2176
;       float View_PreExposure;                       ; Offset: 2180
;       float View_OneOverPreExposure;                ; Offset: 2184
;       float PrePadding_View_2188;                   ; Offset: 2188
;       float4 View_DiffuseOverrideParameter;         ; Offset: 2192
;       float4 View_SpecularOverrideParameter;        ; Offset: 2208
;       float4 View_NormalOverrideParameter;          ; Offset: 2224
;       float2 View_RoughnessOverrideParameter;       ; Offset: 2240
;       float View_PrevFrameGameTime;                 ; Offset: 2248
;       float View_PrevFrameRealTime;                 ; Offset: 2252
;       float View_OutOfBoundsMask;                   ; Offset: 2256
;       float PrePadding_View_2260;                   ; Offset: 2260
;       float PrePadding_View_2264;                   ; Offset: 2264
;       float PrePadding_View_2268;                   ; Offset: 2268
;       float3 View_WorldCameraMovementSinceLastFrame;; Offset: 2272
;       float View_CullingSign;                       ; Offset: 2284
;       float View_NearPlane;                         ; Offset: 2288
;       float View_GameTime;                          ; Offset: 2292
;       float View_RealTime;                          ; Offset: 2296
;       float View_DeltaTime;                         ; Offset: 2300
;       float View_MaterialTextureMipBias;            ; Offset: 2304
;       float View_MaterialTextureDerivativeMultiply; ; Offset: 2308
;       uint View_Random;                             ; Offset: 2312
;       uint View_FrameNumber;                        ; Offset: 2316
;       uint View_StateFrameIndexMod8;                ; Offset: 2320
;       uint View_StateFrameIndex;                    ; Offset: 2324
;       uint View_DebugViewModeMask;                  ; Offset: 2328
;       uint View_WorldIsPaused;                      ; Offset: 2332
;       float View_CameraCut;                         ; Offset: 2336
;       float View_UnlitViewmodeMask;                 ; Offset: 2340
;       float PrePadding_View_2344;                   ; Offset: 2344
;       float PrePadding_View_2348;                   ; Offset: 2348
;       float4 View_DirectionalLightColor;            ; Offset: 2352
;       float3 View_DirectionalLightDirection;        ; Offset: 2368
;       float PrePadding_View_2380;                   ; Offset: 2380
;       float4 View_TranslucencyLightingVolumeMin[2]; ; Offset: 2384
;       float4 View_TranslucencyLightingVolumeInvSize[2];; Offset: 2416
;       float4 View_TemporalAAParams;                 ; Offset: 2448
;       float4 View_CircleDOFParams;                  ; Offset: 2464
;       float View_DepthOfFieldSensorWidth;           ; Offset: 2480
;       float View_DepthOfFieldFocalDistance;         ; Offset: 2484
;       float View_DepthOfFieldScale;                 ; Offset: 2488
;       float View_DepthOfFieldFocalLength;           ; Offset: 2492
;       float View_DepthOfFieldFocalRegion;           ; Offset: 2496
;       float View_DepthOfFieldNearTransitionRegion;  ; Offset: 2500
;       float View_DepthOfFieldFarTransitionRegion;   ; Offset: 2504
;       float View_MotionBlurNormalizedToPixel;       ; Offset: 2508
;       float View_GeneralPurposeTweak;               ; Offset: 2512
;       float View_GeneralPurposeTweak2;              ; Offset: 2516
;       float View_DemosaicVposOffset;                ; Offset: 2520
;       float View_DecalDepthBias;                    ; Offset: 2524
;       float3 View_IndirectLightingColorScale;       ; Offset: 2528
;       float PrePadding_View_2540;                   ; Offset: 2540
;       float3 View_PrecomputedIndirectLightingColorScale;; Offset: 2544
;       float PrePadding_View_2556;                   ; Offset: 2556
;       float3 View_PrecomputedIndirectSpecularColorScale;; Offset: 2560
;       float PrePadding_View_2572;                   ; Offset: 2572
;       float4 View_AtmosphereLightDirection[2];      ; Offset: 2576
;       float4 View_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];; Offset: 2608
;       float4 View_AtmosphereLightIlluminanceOuterSpace[2];; Offset: 2640
;       float4 View_AtmosphereLightDiscLuminance[2];  ; Offset: 2672
;       float4 View_AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];; Offset: 2704
;       float4 View_SkyViewLutSizeAndInvSize;         ; Offset: 2736
;       float3 View_SkyCameraTranslatedWorldOrigin;   ; Offset: 2752
;       float PrePadding_View_2764;                   ; Offset: 2764
;       float4 View_SkyPlanetTranslatedWorldCenterAndViewHeight;; Offset: 2768
;       row_major float4x4 View_SkyViewLutReferential;; Offset: 2784
;       float4 View_SkyAtmosphereSkyLuminanceFactor;  ; Offset: 2848
;       float View_SkyAtmospherePresentInScene;       ; Offset: 2864
;       float View_SkyAtmosphereHeightFogContribution;; Offset: 2868
;       float View_SkyAtmosphereBottomRadiusKm;       ; Offset: 2872
;       float View_SkyAtmosphereTopRadiusKm;          ; Offset: 2876
;       float4 View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;; Offset: 2880
;       float View_SkyAtmosphereAerialPerspectiveStartDepthKm;; Offset: 2896
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;; Offset: 2900
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;; Offset: 2904
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;; Offset: 2908
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;; Offset: 2912
;       float View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;; Offset: 2916
;       float PrePadding_View_2920;                   ; Offset: 2920
;       float PrePadding_View_2924;                   ; Offset: 2924
;       float3 View_NormalCurvatureToRoughnessScaleBias;; Offset: 2928
;       float View_RenderingReflectionCaptureMask;    ; Offset: 2940
;       float View_RealTimeReflectionCapture;         ; Offset: 2944
;       float View_RealTimeReflectionCapturePreExposure;; Offset: 2948
;       float PrePadding_View_2952;                   ; Offset: 2952
;       float PrePadding_View_2956;                   ; Offset: 2956
;       float4 View_AmbientCubemapTint;               ; Offset: 2960
;       float View_AmbientCubemapIntensity;           ; Offset: 2976
;       float View_SkyLightApplyPrecomputedBentNormalShadowingFlag;; Offset: 2980
;       float View_SkyLightAffectReflectionFlag;      ; Offset: 2984
;       float View_SkyLightAffectGlobalIlluminationFlag;; Offset: 2988
;       float4 View_SkyLightColor;                    ; Offset: 2992
;       float4 View_MobileSkyIrradianceEnvironmentMap[8];; Offset: 3008
;       float View_MobilePreviewMode;                 ; Offset: 3136
;       float View_HMDEyePaddingOffset;               ; Offset: 3140
;       float View_ReflectionCubemapMaxMip;           ; Offset: 3144
;       float View_ShowDecalsMask;                    ; Offset: 3148
;       uint View_DistanceFieldAOSpecularOcclusionMode;; Offset: 3152
;       float View_IndirectCapsuleSelfShadowingIntensity;; Offset: 3156
;       float PrePadding_View_3160;                   ; Offset: 3160
;       float PrePadding_View_3164;                   ; Offset: 3164
;       float3 View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;; Offset: 3168
;       int View_StereoPassIndex;                     ; Offset: 3180
;       float4 View_GlobalVolumeTranslatedCenterAndExtent[6];; Offset: 3184
;       float4 View_GlobalVolumeTranslatedWorldToUVAddAndMul[6];; Offset: 3280
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVScale[6];; Offset: 3376
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVBias[6];; Offset: 3472
;       float View_GlobalDistanceFieldMipFactor;      ; Offset: 3568
;       float View_GlobalDistanceFieldMipTransition;  ; Offset: 3572
;       int View_GlobalDistanceFieldClipmapSizeInPages;; Offset: 3576
;       int PrePadding_View_3580;                     ; Offset: 3580
;       float3 View_GlobalDistanceFieldInvPageAtlasSize;; Offset: 3584
;       float PrePadding_View_3596;                   ; Offset: 3596
;       float3 View_GlobalDistanceFieldInvCoverageAtlasSize;; Offset: 3600
;       float View_GlobalVolumeDimension;             ; Offset: 3612
;       float View_GlobalVolumeTexelSize;             ; Offset: 3616
;       float View_MaxGlobalDFAOConeDistance;         ; Offset: 3620
;       uint View_NumGlobalSDFClipmaps;               ; Offset: 3624
;       float View_CoveredExpandSurfaceScale;         ; Offset: 3628
;       float View_NotCoveredExpandSurfaceScale;      ; Offset: 3632
;       float View_NotCoveredMinStepScale;            ; Offset: 3636
;       float View_DitheredTransparencyStepThreshold; ; Offset: 3640
;       float View_DitheredTransparencyTraceThreshold;; Offset: 3644
;       int2 View_CursorPosition;                     ; Offset: 3648
;       float View_bCheckerboardSubsurfaceProfileRendering;; Offset: 3656
;       float PrePadding_View_3660;                   ; Offset: 3660
;       float3 View_VolumetricFogInvGridSize;         ; Offset: 3664
;       float PrePadding_View_3676;                   ; Offset: 3676
;       float3 View_VolumetricFogGridZParams;         ; Offset: 3680
;       float PrePadding_View_3692;                   ; Offset: 3692
;       float2 View_VolumetricFogSVPosToVolumeUV;     ; Offset: 3696
;       float2 View_VolumetricFogScreenUVToHistoryVolumeUV;; Offset: 3704
;       float View_VolumetricFogMaxDistance;          ; Offset: 3712
;       float PrePadding_View_3716;                   ; Offset: 3716
;       float PrePadding_View_3720;                   ; Offset: 3720
;       float PrePadding_View_3724;                   ; Offset: 3724
;       float3 View_VolumetricLightmapWorldToUVScale; ; Offset: 3728
;       float PrePadding_View_3740;                   ; Offset: 3740
;       float3 View_VolumetricLightmapWorldToUVAdd;   ; Offset: 3744
;       float PrePadding_View_3756;                   ; Offset: 3756
;       float3 View_VolumetricLightmapIndirectionTextureSize;; Offset: 3760
;       float View_VolumetricLightmapBrickSize;       ; Offset: 3772
;       float3 View_VolumetricLightmapBrickTexelSize; ; Offset: 3776
;       float View_IndirectLightingCacheShowFlag;     ; Offset: 3788
;       float View_EyeToPixelSpreadAngle;             ; Offset: 3792
;       float PrePadding_View_3796;                   ; Offset: 3796
;       float PrePadding_View_3800;                   ; Offset: 3800
;       float PrePadding_View_3804;                   ; Offset: 3804
;       float4 View_XRPassthroughCameraUVs[2];        ; Offset: 3808
;       float View_GlobalVirtualTextureMipBias;       ; Offset: 3840
;       uint View_VirtualTextureFeedbackShift;        ; Offset: 3844
;       uint View_VirtualTextureFeedbackMask;         ; Offset: 3848
;       uint View_VirtualTextureFeedbackStride;       ; Offset: 3852
;       uint View_VirtualTextureFeedbackJitterOffset; ; Offset: 3856
;       uint View_VirtualTextureFeedbackSampleOffset; ; Offset: 3860
;       uint PrePadding_View_3864;                    ; Offset: 3864
;       uint PrePadding_View_3868;                    ; Offset: 3868
;       float4 View_RuntimeVirtualTextureMipLevel;    ; Offset: 3872
;       float2 View_RuntimeVirtualTexturePackHeight;  ; Offset: 3888
;       float PrePadding_View_3896;                   ; Offset: 3896
;       float PrePadding_View_3900;                   ; Offset: 3900
;       float4 View_RuntimeVirtualTextureDebugParams; ; Offset: 3904
;       float View_OverrideLandscapeLOD;              ; Offset: 3920
;       int View_FarShadowStaticMeshLODBias;          ; Offset: 3924
;       float View_MinRoughness;                      ; Offset: 3928
;       float PrePadding_View_3932;                   ; Offset: 3932
;       float4 View_HairRenderInfo;                   ; Offset: 3936
;       uint View_EnableSkyLight;                     ; Offset: 3952
;       uint View_HairRenderInfoBits;                 ; Offset: 3956
;       uint View_HairComponents;                     ; Offset: 3960
;       float View_bSubsurfacePostprocessEnabled;     ; Offset: 3964
;       float4 View_SSProfilesTextureSizeAndInvSize;  ; Offset: 3968
;       float4 View_SSProfilesPreIntegratedTextureSizeAndInvSize;; Offset: 3984
;       float3 View_PhysicsFieldClipmapCenter;        ; Offset: 4000
;       float View_PhysicsFieldClipmapDistance;       ; Offset: 4012
;       int View_PhysicsFieldClipmapResolution;       ; Offset: 4016
;       int View_PhysicsFieldClipmapExponent;         ; Offset: 4020
;       int View_PhysicsFieldClipmapCount;            ; Offset: 4024
;       int View_PhysicsFieldTargetCount;             ; Offset: 4028
;       int4 View_PhysicsFieldTargets[32];            ; Offset: 4032
;       uint View_InstanceSceneDataSOAStride;         ; Offset: 4544
;       uint View_GPUSceneViewId;                     ; Offset: 4548
;       float View_ViewResolutionFraction;            ; Offset: 4552
;       float View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;; Offset: 4556
;       uint BindlessSampler_View_MaterialTextureBilinearWrapedSampler;; Offset: 4560
;       uint PrePadding_View_4564;                    ; Offset: 4564
;       uint BindlessSampler_View_MaterialTextureBilinearClampedSampler;; Offset: 4568
;       uint PrePadding_View_4572;                    ; Offset: 4572
;       uint BindlessResource_View_VolumetricLightmapIndirectionTexture;; Offset: 4576
;       uint PrePadding_View_4580;                    ; Offset: 4580
;       uint BindlessResource_View_VolumetricLightmapBrickAmbientVector;; Offset: 4584
;       uint PrePadding_View_4588;                    ; Offset: 4588
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients0;; Offset: 4592
;       uint PrePadding_View_4596;                    ; Offset: 4596
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients1;; Offset: 4600
;       uint PrePadding_View_4604;                    ; Offset: 4604
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients2;; Offset: 4608
;       uint PrePadding_View_4612;                    ; Offset: 4612
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients3;; Offset: 4616
;       uint PrePadding_View_4620;                    ; Offset: 4620
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients4;; Offset: 4624
;       uint PrePadding_View_4628;                    ; Offset: 4628
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients5;; Offset: 4632
;       uint PrePadding_View_4636;                    ; Offset: 4636
;       uint BindlessResource_View_SkyBentNormalBrickTexture;; Offset: 4640
;       uint PrePadding_View_4644;                    ; Offset: 4644
;       uint BindlessResource_View_DirectionalLightShadowingBrickTexture;; Offset: 4648
;       uint PrePadding_View_4652;                    ; Offset: 4652
;       uint BindlessSampler_View_VolumetricLightmapBrickAmbientVectorSampler;; Offset: 4656
;       uint PrePadding_View_4660;                    ; Offset: 4660
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler0;; Offset: 4664
;       uint PrePadding_View_4668;                    ; Offset: 4668
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler1;; Offset: 4672
;       uint PrePadding_View_4676;                    ; Offset: 4676
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler2;; Offset: 4680
;       uint PrePadding_View_4684;                    ; Offset: 4684
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler3;; Offset: 4688
;       uint PrePadding_View_4692;                    ; Offset: 4692
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler4;; Offset: 4696
;       uint PrePadding_View_4700;                    ; Offset: 4700
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler5;; Offset: 4704
;       uint PrePadding_View_4708;                    ; Offset: 4708
;       uint BindlessSampler_View_SkyBentNormalTextureSampler;; Offset: 4712
;       uint PrePadding_View_4716;                    ; Offset: 4716
;       uint BindlessSampler_View_DirectionalLightShadowingTextureSampler;; Offset: 4720
;       uint PrePadding_View_4724;                    ; Offset: 4724
;       uint BindlessResource_View_GlobalDistanceFieldPageAtlasTexture;; Offset: 4728
;       uint PrePadding_View_4732;                    ; Offset: 4732
;       uint BindlessResource_View_GlobalDistanceFieldCoverageAtlasTexture;; Offset: 4736
;       uint PrePadding_View_4740;                    ; Offset: 4740
;       uint BindlessResource_View_GlobalDistanceFieldPageTableTexture;; Offset: 4744
;       uint PrePadding_View_4748;                    ; Offset: 4748
;       uint BindlessResource_View_GlobalDistanceFieldMipTexture;; Offset: 4752
;       uint PrePadding_View_4756;                    ; Offset: 4756
;       uint BindlessResource_View_AtmosphereTransmittanceTexture;; Offset: 4760
;       uint PrePadding_View_4764;                    ; Offset: 4764
;       uint BindlessSampler_View_AtmosphereTransmittanceTextureSampler;; Offset: 4768
;       uint PrePadding_View_4772;                    ; Offset: 4772
;       uint BindlessResource_View_AtmosphereIrradianceTexture;; Offset: 4776
;       uint PrePadding_View_4780;                    ; Offset: 4780
;       uint BindlessSampler_View_AtmosphereIrradianceTextureSampler;; Offset: 4784
;       uint PrePadding_View_4788;                    ; Offset: 4788
;       uint BindlessResource_View_AtmosphereInscatterTexture;; Offset: 4792
;       uint PrePadding_View_4796;                    ; Offset: 4796
;       uint BindlessSampler_View_AtmosphereInscatterTextureSampler;; Offset: 4800
;       uint PrePadding_View_4804;                    ; Offset: 4804
;       uint BindlessResource_View_PerlinNoiseGradientTexture;; Offset: 4808
;       uint PrePadding_View_4812;                    ; Offset: 4812
;       uint BindlessSampler_View_PerlinNoiseGradientTextureSampler;; Offset: 4816
;       uint PrePadding_View_4820;                    ; Offset: 4820
;       uint BindlessResource_View_PerlinNoise3DTexture;; Offset: 4824
;       uint PrePadding_View_4828;                    ; Offset: 4828
;       uint BindlessSampler_View_PerlinNoise3DTextureSampler;; Offset: 4832
;       uint PrePadding_View_4836;                    ; Offset: 4836
;       uint BindlessResource_View_SobolSamplingTexture;; Offset: 4840
;       uint PrePadding_View_4844;                    ; Offset: 4844
;       uint BindlessSampler_View_SharedPointWrappedSampler;; Offset: 4848
;       uint PrePadding_View_4852;                    ; Offset: 4852
;       uint BindlessSampler_View_SharedPointClampedSampler;; Offset: 4856
;       uint PrePadding_View_4860;                    ; Offset: 4860
;       uint BindlessSampler_View_SharedBilinearWrappedSampler;; Offset: 4864
;       uint PrePadding_View_4868;                    ; Offset: 4868
;       uint BindlessSampler_View_SharedBilinearClampedSampler;; Offset: 4872
;       uint PrePadding_View_4876;                    ; Offset: 4876
;       uint BindlessSampler_View_SharedBilinearAnisoClampedSampler;; Offset: 4880
;       uint PrePadding_View_4884;                    ; Offset: 4884
;       uint BindlessSampler_View_SharedTrilinearWrappedSampler;; Offset: 4888
;       uint PrePadding_View_4892;                    ; Offset: 4892
;       uint BindlessSampler_View_SharedTrilinearClampedSampler;; Offset: 4896
;       uint PrePadding_View_4900;                    ; Offset: 4900
;       uint BindlessResource_View_PreIntegratedBRDF; ; Offset: 4904
;       uint PrePadding_View_4908;                    ; Offset: 4908
;       uint BindlessSampler_View_PreIntegratedBRDFSampler;; Offset: 4912
;       uint PrePadding_View_4916;                    ; Offset: 4916
;       uint BindlessResource_View_PrimitiveSceneData;; Offset: 4920
;       uint PrePadding_View_4924;                    ; Offset: 4924
;       uint BindlessResource_View_InstanceSceneData; ; Offset: 4928
;       uint PrePadding_View_4932;                    ; Offset: 4932
;       uint BindlessResource_View_InstancePayloadData;; Offset: 4936
;       uint PrePadding_View_4940;                    ; Offset: 4940
;       uint BindlessResource_View_LightmapSceneData; ; Offset: 4944
;       uint PrePadding_View_4948;                    ; Offset: 4948
;       uint BindlessResource_View_SkyIrradianceEnvironmentMap;; Offset: 4952
;       uint PrePadding_View_4956;                    ; Offset: 4956
;       uint BindlessResource_View_TransmittanceLutTexture;; Offset: 4960
;       uint PrePadding_View_4964;                    ; Offset: 4964
;       uint BindlessSampler_View_TransmittanceLutTextureSampler;; Offset: 4968
;       uint PrePadding_View_4972;                    ; Offset: 4972
;       uint BindlessResource_View_SkyViewLutTexture; ; Offset: 4976
;       uint PrePadding_View_4980;                    ; Offset: 4980
;       uint BindlessSampler_View_SkyViewLutTextureSampler;; Offset: 4984
;       uint PrePadding_View_4988;                    ; Offset: 4988
;       uint BindlessResource_View_DistantSkyLightLutTexture;; Offset: 4992
;       uint PrePadding_View_4996;                    ; Offset: 4996
;       uint BindlessSampler_View_DistantSkyLightLutTextureSampler;; Offset: 5000
;       uint PrePadding_View_5004;                    ; Offset: 5004
;       uint BindlessResource_View_CameraAerialPerspectiveVolume;; Offset: 5008
;       uint PrePadding_View_5012;                    ; Offset: 5012
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeSampler;; Offset: 5016
;       uint PrePadding_View_5020;                    ; Offset: 5020
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeMieOnly;; Offset: 5024
;       uint PrePadding_View_5028;                    ; Offset: 5028
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeMieOnlySampler;; Offset: 5032
;       uint PrePadding_View_5036;                    ; Offset: 5036
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeRayOnly;; Offset: 5040
;       uint PrePadding_View_5044;                    ; Offset: 5044
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeRayOnlySampler;; Offset: 5048
;       uint PrePadding_View_5052;                    ; Offset: 5052
;       uint BindlessResource_View_HairScatteringLUTTexture;; Offset: 5056
;       uint PrePadding_View_5060;                    ; Offset: 5060
;       uint BindlessSampler_View_HairScatteringLUTSampler;; Offset: 5064
;       uint PrePadding_View_5068;                    ; Offset: 5068
;       uint BindlessResource_View_LTCMatTexture;     ; Offset: 5072
;       uint PrePadding_View_5076;                    ; Offset: 5076
;       uint BindlessSampler_View_LTCMatSampler;      ; Offset: 5080
;       uint PrePadding_View_5084;                    ; Offset: 5084
;       uint BindlessResource_View_LTCAmpTexture;     ; Offset: 5088
;       uint PrePadding_View_5092;                    ; Offset: 5092
;       uint BindlessSampler_View_LTCAmpSampler;      ; Offset: 5096
;       uint PrePadding_View_5100;                    ; Offset: 5100
;       uint View_bShadingEnergyConservation;         ; Offset: 5104
;       uint View_bShadingEnergyPreservation;         ; Offset: 5108
;       uint BindlessResource_View_ShadingEnergyGGXSpecTexture;; Offset: 5112
;       uint PrePadding_View_5116;                    ; Offset: 5116
;       uint BindlessResource_View_ShadingEnergyGGXGlassTexture;; Offset: 5120
;       uint PrePadding_View_5124;                    ; Offset: 5124
;       uint BindlessResource_View_ShadingEnergyClothSpecTexture;; Offset: 5128
;       uint PrePadding_View_5132;                    ; Offset: 5132
;       uint BindlessResource_View_ShadingEnergyDiffuseTexture;; Offset: 5136
;       uint PrePadding_View_5140;                    ; Offset: 5140
;       uint BindlessSampler_View_ShadingEnergySampler;; Offset: 5144
;       uint PrePadding_View_5148;                    ; Offset: 5148
;       uint BindlessResource_View_SSProfilesTexture; ; Offset: 5152
;       uint PrePadding_View_5156;                    ; Offset: 5156
;       uint BindlessSampler_View_SSProfilesSampler;  ; Offset: 5160
;       uint PrePadding_View_5164;                    ; Offset: 5164
;       uint BindlessSampler_View_SSProfilesTransmissionSampler;; Offset: 5168
;       uint PrePadding_View_5172;                    ; Offset: 5172
;       uint BindlessResource_View_SSProfilesPreIntegratedTexture;; Offset: 5176
;       uint PrePadding_View_5180;                    ; Offset: 5180
;       uint BindlessSampler_View_SSProfilesPreIntegratedSampler;; Offset: 5184
;       uint PrePadding_View_5188;                    ; Offset: 5188
;       uint BindlessResource_View_WaterIndirection;  ; Offset: 5192
;       uint PrePadding_View_5196;                    ; Offset: 5196
;       uint BindlessResource_View_WaterData;         ; Offset: 5200
;       uint PrePadding_View_5204;                    ; Offset: 5204
;       uint PrePadding_View_5208;                    ; Offset: 5208
;       uint PrePadding_View_5212;                    ; Offset: 5212
;       float4 View_RectLightAtlasSizeAndInvSize;     ; Offset: 5216
;       float View_RectLightAtlasMaxMipLevel;         ; Offset: 5232
;       float PrePadding_View_5236;                   ; Offset: 5236
;       uint BindlessResource_View_RectLightAtlasTexture;; Offset: 5240
;       uint PrePadding_View_5244;                    ; Offset: 5244
;       uint BindlessSampler_View_RectLightAtlasSampler;; Offset: 5248
;       uint PrePadding_View_5252;                    ; Offset: 5252
;       uint PrePadding_View_5256;                    ; Offset: 5256
;       uint PrePadding_View_5260;                    ; Offset: 5260
;       float4 View_IESAtlasSizeAndInvSize;           ; Offset: 5264
;       uint BindlessResource_View_IESAtlasTexture;   ; Offset: 5280
;       uint PrePadding_View_5284;                    ; Offset: 5284
;       uint BindlessSampler_View_IESAtlasSampler;    ; Offset: 5288
;       uint PrePadding_View_5292;                    ; Offset: 5292
;       uint BindlessSampler_View_LandscapeWeightmapSampler;; Offset: 5296
;       uint PrePadding_View_5300;                    ; Offset: 5300
;       uint BindlessResource_View_LandscapeIndirection;; Offset: 5304
;       uint PrePadding_View_5308;                    ; Offset: 5308
;       uint BindlessResource_View_LandscapePerComponentData;; Offset: 5312
;       uint PrePadding_View_5316;                    ; Offset: 5316
;       uint BindlessResource_View_VTFeedbackBuffer;  ; Offset: 5320
;       uint PrePadding_View_5324;                    ; Offset: 5324
;       uint BindlessResource_View_EditorVisualizeLevelInstanceIds;; Offset: 5328
;       uint PrePadding_View_5332;                    ; Offset: 5332
;       uint BindlessResource_View_EditorSelectedHitProxyIds;; Offset: 5336
;       uint PrePadding_View_5340;                    ; Offset: 5340
;       uint BindlessResource_View_PhysicsFieldClipmapBuffer;; Offset: 5344
;       uint PrePadding_View_5348;                    ; Offset: 5348
;       uint PrePadding_View_5352;                    ; Offset: 5352
;       uint PrePadding_View_5356;                    ; Offset: 5356
;       float3 View_TLASRelativePreViewTranslation;   ; Offset: 5360
;       float PrePadding_View_5372;                   ; Offset: 5372
;       float3 View_TLASViewTilePosition;             ; Offset: 5376
;   
;   } UniformBufferConstants_View;                    ; Offset:    0 Size:  5388
;
; }
;
; cbuffer UniformBufferConstants_LocalVF
; {
;
;   struct UniformBufferConstants_LocalVF
;   {
;
;       int4 LocalVF_VertexFetch_Parameters;          ; Offset:    0
;       int LocalVF_PreSkinBaseVertexIndex;           ; Offset:   16
;       uint LocalVF_LODLightmapDataIndex;            ; Offset:   20
;       uint BindlessResource_LocalVF_VertexFetch_TexCoordBuffer;; Offset:   24
;       uint PrePadding_LocalVF_28;                   ; Offset:   28
;       uint BindlessResource_LocalVF_VertexFetch_PositionBuffer;; Offset:   32
;       uint PrePadding_LocalVF_36;                   ; Offset:   36
;       uint BindlessResource_LocalVF_VertexFetch_PreSkinPositionBuffer;; Offset:   40
;       uint PrePadding_LocalVF_44;                   ; Offset:   44
;       uint BindlessResource_LocalVF_VertexFetch_PackedTangentsBuffer;; Offset:   48
;       uint PrePadding_LocalVF_52;                   ; Offset:   52
;       uint BindlessResource_LocalVF_VertexFetch_ColorComponentsBuffer;; Offset:   56
;   
;   } UniformBufferConstants_LocalVF;                 ; Offset:    0 Size:    60
;
; }
;
; Resource bind info for View_PrimitiveSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for View_InstanceSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for InstanceCulling_InstanceIdsBuffer
; {
;
;   uint $Element;                                    ; Offset:    0 Size:     4
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; $Globals                          cbuffer      NA          NA     CB0            cb0     1
; UniformBufferConstants_View       cbuffer      NA          NA     CB1            cb1     1
; UniformBufferConstants_LocalVF    cbuffer      NA          NA     CB2            cb2     1
; View_PrimitiveSceneData           texture  struct         r/o      T0             t0     1
; View_InstanceSceneData            texture  struct         r/o      T1             t1     1
; InstanceCulling_InstanceIdsBuffer   texture  struct         r/o      T2             t2     1
; LocalVF_VertexFetch_TexCoordBuffer   texture     f32         buf      T3             t3     1
; LocalVF_VertexFetch_PackedTangentsBuffer   texture     f32         buf      T4             t4     1
;
;
; ViewId state:
;
; Number of inputs: 13, outputs: 28
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 0, 1, 2, 4, 8, 12 }
;   output 1 depends on inputs: { 0, 1, 2, 4, 8, 12 }
;   output 2 depends on inputs: { 0, 1, 2, 4, 8, 12 }
;   output 4 depends on inputs: { 0, 1, 2, 4, 8, 12 }
;   output 5 depends on inputs: { 0, 1, 2, 4, 8, 12 }
;   output 6 depends on inputs: { 0, 1, 2, 4, 8, 12 }
;   output 7 depends on inputs: { 4, 8, 12 }
;   output 8 depends on inputs: { 12 }
;   output 9 depends on inputs: { 12 }
;   output 12 depends on inputs: { 4, 8 }
;   output 16 depends on inputs: { 0, 1, 2, 3, 4, 8 }
;   output 17 depends on inputs: { 0, 1, 2, 3, 4, 8 }
;   output 18 depends on inputs: { 0, 1, 2, 3, 4, 8 }
;   output 20 depends on inputs: { 0, 1, 2, 3, 4, 8 }
;   output 21 depends on inputs: { 0, 1, 2, 3, 4, 8 }
;   output 22 depends on inputs: { 0, 1, 2, 3, 4, 8 }
;   output 24 depends on inputs: { 0, 1, 2, 3, 4, 8 }
;   output 25 depends on inputs: { 0, 1, 2, 3, 4, 8 }
;   output 26 depends on inputs: { 0, 1, 2, 3, 4, 8 }
;   output 27 depends on inputs: { 0, 1, 2, 3, 4, 8 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%"class.StructuredBuffer<vector<float, 4> >" = type { <4 x float> }
%"class.StructuredBuffer<unsigned int>" = type { i32 }
%"class.Buffer<vector<float, 2> >" = type { <2 x float> }
%"class.Buffer<vector<float, 4> >" = type { <4 x float> }
%"$Globals" = type { <4 x float>, i32, [10 x <4 x float>], <2 x float>, <3 x float>, <4 x float> }
%hostlayout.UniformBufferConstants_View = type { [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <4 x float>, <4 x float>, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <4 x float>, <4 x float>, <2 x float>, <2 x float>, <4 x float>, <4 x float>, <4 x i32>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, <2 x float>, i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i32, float, float, float, float, <4 x float>, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <4 x float>, float, float, float, float, float, float, float, float, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <3 x float>, float, <4 x float>, [4 x <4 x float>], <4 x float>, float, float, float, float, <4 x float>, float, float, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, <4 x float>, float, float, float, float, <4 x float>, [8 x <4 x float>], float, float, float, float, i32, float, float, float, <3 x float>, i32, [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], float, float, i32, i32, <3 x float>, float, <3 x float>, float, float, float, i32, float, float, float, float, float, <2 x i32>, float, float, <3 x float>, float, <3 x float>, float, <2 x float>, <2 x float>, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, float, float, float, float, [2 x <4 x float>], float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <2 x float>, float, float, <4 x float>, float, i32, float, float, <4 x float>, i32, i32, i32, float, <4 x float>, <4 x float>, <3 x float>, float, i32, i32, i32, i32, [32 x <4 x i32>], i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, float, float, i32, i32, i32, i32, i32, i32, <4 x float>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <3 x float>, float, <3 x float> }
%UniformBufferConstants_LocalVF = type { <4 x i32>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

define void @MainVertexShader() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 4, i32 4, i32 0, i8 0 }, i32 4, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 3, i32 3, i32 0, i8 0 }, i32 3, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 0 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 0 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind zeroinitializer, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %6 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 2 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %7 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 2 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %8 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %9 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %6, %dx.types.ResourceProperties { i32 13, i32 60 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %10 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %7, %dx.types.ResourceProperties { i32 13, i32 5388 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %11 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %8, %dx.types.ResourceProperties { i32 13, i32 240 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %12 = call i32 @dx.op.loadInput.i32(i32 4, i32 3, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call i32 @dx.op.loadInput.i32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %14 = call i32 @dx.op.loadInput.i32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %15 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %16 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %17 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %18 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %19 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %10, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %20 = extractvalue %dx.types.CBufRet.f32 %19, 0
  %21 = extractvalue %dx.types.CBufRet.f32 %19, 1
  %22 = extractvalue %dx.types.CBufRet.f32 %19, 2
  %23 = extractvalue %dx.types.CBufRet.f32 %19, 3
  %24 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %10, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %25 = extractvalue %dx.types.CBufRet.f32 %24, 0
  %26 = extractvalue %dx.types.CBufRet.f32 %24, 1
  %27 = extractvalue %dx.types.CBufRet.f32 %24, 2
  %28 = extractvalue %dx.types.CBufRet.f32 %24, 3
  %29 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %10, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %30 = extractvalue %dx.types.CBufRet.f32 %29, 0
  %31 = extractvalue %dx.types.CBufRet.f32 %29, 1
  %32 = extractvalue %dx.types.CBufRet.f32 %29, 2
  %33 = extractvalue %dx.types.CBufRet.f32 %29, 3
  %34 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %10, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %35 = extractvalue %dx.types.CBufRet.f32 %34, 0
  %36 = extractvalue %dx.types.CBufRet.f32 %34, 1
  %37 = extractvalue %dx.types.CBufRet.f32 %34, 2
  %38 = extractvalue %dx.types.CBufRet.f32 %34, 3
  %39 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %10, i32 64)  ; CBufferLoadLegacy(handle,regIndex)
  %40 = extractvalue %dx.types.CBufRet.f32 %39, 0
  %41 = extractvalue %dx.types.CBufRet.f32 %39, 1
  %42 = extractvalue %dx.types.CBufRet.f32 %39, 2
  %43 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %10, i32 76)  ; CBufferLoadLegacy(handle,regIndex)
  %44 = extractvalue %dx.types.CBufRet.f32 %43, 0
  %45 = extractvalue %dx.types.CBufRet.f32 %43, 1
  %46 = extractvalue %dx.types.CBufRet.f32 %43, 2
  %47 = icmp slt i32 %14, 0
  br i1 %47, label %48, label %56

; <label>:48                                      ; preds = %0
  %49 = and i32 %14, 2147483647
  %50 = mul i32 %49, 41
  %51 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %5, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %52 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %51, i32 %50, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %53 = extractvalue %dx.types.ResRet.f32 %52, 1
  %54 = bitcast float %53 to i32
  %55 = add i32 %54, %13
  br label %62

; <label>:56                                      ; preds = %0
  %57 = add i32 %14, %13
  %58 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 12, i32 4 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=4>
  %59 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %58, i32 %57, i32 0, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %60 = extractvalue %dx.types.ResRet.i32 %59, 0
  %61 = and i32 %60, 268435455
  br label %62

; <label>:62                                      ; preds = %56, %48
  %63 = phi i32 [ %55, %48 ], [ %61, %56 ]
  %64 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %10, i32 284)  ; CBufferLoadLegacy(handle,regIndex)
  %65 = extractvalue %dx.types.CBufRet.i32 %64, 0
  %66 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %4, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %67 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %66, i32 %63, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %68 = extractvalue %dx.types.ResRet.f32 %67, 0
  %69 = bitcast float %68 to i32
  %70 = and i32 %69, 1048575
  %71 = icmp eq i32 %70, 1048575
  br i1 %71, label %190, label %72, !dx.controlflow.hints !42

; <label>:72                                      ; preds = %62
  %73 = mul nuw nsw i32 %70, 41
  %74 = add nuw nsw i32 %73, 1
  %75 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %5, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %76 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %75, i32 %74, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %77 = extractvalue %dx.types.ResRet.f32 %76, 0
  %78 = extractvalue %dx.types.ResRet.f32 %76, 1
  %79 = extractvalue %dx.types.ResRet.f32 %76, 2
  %80 = add i32 %65, %63
  %81 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %66, i32 %80, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %82 = extractvalue %dx.types.ResRet.f32 %81, 0
  %83 = extractvalue %dx.types.ResRet.f32 %81, 1
  %84 = extractvalue %dx.types.ResRet.f32 %81, 2
  %85 = extractvalue %dx.types.ResRet.f32 %81, 3
  %86 = bitcast float %82 to i32
  %87 = bitcast float %83 to i32
  %88 = bitcast float %84 to i32
  %89 = bitcast float %85 to i32
  %90 = shl i32 %65, 1
  %91 = add i32 %90, %63
  %92 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %66, i32 %91, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %93 = extractvalue %dx.types.ResRet.f32 %92, 0
  %94 = extractvalue %dx.types.ResRet.f32 %92, 1
  %95 = extractvalue %dx.types.ResRet.f32 %92, 2
  %96 = and i32 %86, 65535
  %97 = uitofp i32 %96 to float
  %98 = lshr i32 %86, 16
  %99 = uitofp i32 %98 to float
  %100 = and i32 %87, 32767
  %101 = uitofp i32 %100 to float
  %102 = fadd fast float %97, -3.276800e+04
  %103 = fadd fast float %99, -3.276800e+04
  %104 = fadd fast float %101, -1.638400e+04
  %105 = fmul fast float %104, 0x3F06A0F8E0000000
  %106 = and i32 %87, 32768
  %107 = icmp ne i32 %106, 0
  %108 = fadd fast float %102, %103
  %109 = fmul fast float %108, 0x3F00002000000000
  %110 = fsub fast float %102, %103
  %111 = fmul fast float %110, 0x3F00002000000000
  %112 = call float @dx.op.unary.f32(i32 6, float %109)  ; FAbs(value)
  %113 = call float @dx.op.unary.f32(i32 6, float %111)  ; FAbs(value)
  %114 = call float @dx.op.dot2.f32(i32 54, float 1.000000e+00, float 1.000000e+00, float %112, float %113)  ; Dot2(ax,ay,bx,by)
  %115 = fsub fast float 2.000000e+00, %114
  %116 = call float @dx.op.dot3.f32(i32 55, float %109, float %111, float %115, float %109, float %111, float %115)  ; Dot3(ax,ay,az,bx,by,bz)
  %117 = call float @dx.op.unary.f32(i32 25, float %116)  ; Rsqrt(value)
  %118 = fmul fast float %117, %109
  %119 = fmul fast float %117, %111
  %120 = fmul fast float %117, %115
  %121 = fadd fast float %120, 1.000000e+00
  %122 = fdiv fast float 1.000000e+00, %121
  %123 = fmul fast float %119, %118
  %124 = fmul fast float %123, %122
  %125 = fsub fast float -0.000000e+00, %124
  %126 = fmul fast float %118, %118
  %127 = fmul fast float %126, %122
  %128 = fsub fast float 1.000000e+00, %127
  %129 = fmul fast float %119, %119
  %130 = fmul fast float %129, %122
  %131 = fsub fast float 1.000000e+00, %130
  %132 = fmul fast float %105, %105
  %133 = fsub fast float 1.000000e+00, %132
  %134 = call float @dx.op.unary.f32(i32 24, float %133)  ; Sqrt(value)
  %135 = select i1 %107, float %105, float %134
  %136 = select i1 %107, float %134, float %105
  %137 = fmul fast float %128, %135
  %138 = fmul fast float %135, %125
  %139 = fmul fast float %135, %118
  %140 = fmul fast float %136, %125
  %141 = fmul fast float %131, %136
  %142 = fmul fast float %119, %136
  %143 = fsub fast float -0.000000e+00, %142
  %144 = fadd fast float %137, %140
  %145 = fadd fast float %138, %141
  %146 = fsub fast float %143, %139
  %147 = fmul fast float %146, %119
  %148 = fmul fast float %145, %120
  %149 = fsub fast float %147, %148
  %150 = fmul fast float %144, %120
  %151 = fmul fast float %146, %118
  %152 = fsub fast float %150, %151
  %153 = fmul fast float %145, %118
  %154 = fmul fast float %144, %119
  %155 = fsub fast float %153, %154
  %156 = lshr i32 %89, 16
  %157 = shl i32 %156, 23
  %158 = add i32 %157, -125829120
  %159 = bitcast i32 %158 to float
  %160 = lshr i32 %88, 16
  %161 = and i32 %88, 65535
  %162 = and i32 %89, 65535
  %163 = uitofp i32 %161 to float
  %164 = uitofp i32 %160 to float
  %165 = uitofp i32 %162 to float
  %166 = fadd fast float %163, -3.276800e+04
  %167 = fadd fast float %164, -3.276800e+04
  %168 = fadd fast float %165, -3.276800e+04
  %169 = fmul fast float %159, %166
  %170 = fmul fast float %159, %167
  %171 = fmul fast float %159, %168
  %172 = fmul fast float %144, %169
  %173 = fmul fast float %145, %169
  %174 = fmul fast float %146, %169
  %175 = fmul fast float %149, %170
  %176 = fmul fast float %152, %170
  %177 = fmul fast float %155, %170
  %178 = fmul fast float %118, %171
  %179 = fmul fast float %119, %171
  %180 = fmul fast float %120, %171
  %181 = call float @dx.op.unary.f32(i32 6, float %169)  ; FAbs(value)
  %182 = call float @dx.op.unary.f32(i32 6, float %170)  ; FAbs(value)
  %183 = call float @dx.op.unary.f32(i32 6, float %171)  ; FAbs(value)
  %184 = fdiv fast float 1.000000e+00, %181
  %185 = fdiv fast float 1.000000e+00, %182
  %186 = fdiv fast float 1.000000e+00, %183
  %187 = and i32 %69, 1048576
  %188 = icmp ne i32 %187, 0
  %189 = select i1 %188, float -1.000000e+00, float 1.000000e+00
  br label %190

; <label>:190                                     ; preds = %72, %62
  %191 = phi float [ 0.000000e+00, %62 ], [ %189, %72 ]
  %192 = phi float [ 0.000000e+00, %62 ], [ %184, %72 ]
  %193 = phi float [ 0.000000e+00, %62 ], [ %185, %72 ]
  %194 = phi float [ 0.000000e+00, %62 ], [ %186, %72 ]
  %195 = phi float [ 0.000000e+00, %62 ], [ %77, %72 ]
  %196 = phi float [ 0.000000e+00, %62 ], [ %78, %72 ]
  %197 = phi float [ 0.000000e+00, %62 ], [ %79, %72 ]
  %198 = phi float [ 0.000000e+00, %62 ], [ %172, %72 ]
  %199 = phi float [ 0.000000e+00, %62 ], [ %173, %72 ]
  %200 = phi float [ 0.000000e+00, %62 ], [ %174, %72 ]
  %201 = phi float [ 0.000000e+00, %62 ], [ %175, %72 ]
  %202 = phi float [ 0.000000e+00, %62 ], [ %176, %72 ]
  %203 = phi float [ 0.000000e+00, %62 ], [ %177, %72 ]
  %204 = phi float [ 0.000000e+00, %62 ], [ %178, %72 ]
  %205 = phi float [ 0.000000e+00, %62 ], [ %179, %72 ]
  %206 = phi float [ 0.000000e+00, %62 ], [ %180, %72 ]
  %207 = phi float [ 0.000000e+00, %62 ], [ %93, %72 ]
  %208 = phi float [ 0.000000e+00, %62 ], [ %94, %72 ]
  %209 = phi float [ 0.000000e+00, %62 ], [ %95, %72 ]
  %210 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %9, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %211 = extractvalue %dx.types.CBufRet.i32 %210, 3
  %212 = add i32 %211, %12
  %213 = shl i32 %212, 1
  %214 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 10, i32 1033 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<4xF32>
  %215 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %214, i32 %213, i32 undef)  ; BufferLoad(srv,index,wot)
  %216 = extractvalue %dx.types.ResRet.f32 %215, 0
  %217 = extractvalue %dx.types.ResRet.f32 %215, 1
  %218 = extractvalue %dx.types.ResRet.f32 %215, 2
  %219 = or i32 %213, 1
  %220 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %214, i32 %219, i32 undef)  ; BufferLoad(srv,index,wot)
  %221 = extractvalue %dx.types.ResRet.f32 %220, 0
  %222 = extractvalue %dx.types.ResRet.f32 %220, 1
  %223 = extractvalue %dx.types.ResRet.f32 %220, 2
  %224 = extractvalue %dx.types.ResRet.f32 %220, 3
  %225 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %11, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %226 = extractvalue %dx.types.CBufRet.f32 %225, 0
  %227 = extractvalue %dx.types.CBufRet.f32 %225, 1
  %228 = extractvalue %dx.types.CBufRet.f32 %225, 2
  %229 = call float @dx.op.dot3.f32(i32 55, float %15, float %16, float %17, float %226, float %227, float %228)  ; Dot3(ax,ay,az,bx,by,bz)
  %230 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %11, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %231 = extractvalue %dx.types.CBufRet.f32 %230, 3
  %232 = fmul fast float %231, %229
  %233 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %11, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %234 = extractvalue %dx.types.CBufRet.f32 %233, 3
  %235 = fsub fast float %232, %234
  %236 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %11, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %237 = extractvalue %dx.types.CBufRet.f32 %236, 3
  %238 = fcmp fast une float %237, 0.000000e+00
  %239 = call float @dx.op.unary.f32(i32 7, float %235)  ; Saturate(value)
  %240 = fmul fast float %239, 2.000000e+00
  %241 = fsub fast float 3.000000e+00, %240
  %242 = fmul fast float %239, %239
  %243 = fmul fast float %242, %241
  %244 = select i1 %238, float %243, float %235
  %245 = extractvalue %dx.types.CBufRet.f32 %233, 0
  %246 = extractvalue %dx.types.CBufRet.f32 %233, 1
  %247 = extractvalue %dx.types.CBufRet.f32 %233, 2
  %248 = extractvalue %dx.types.CBufRet.f32 %236, 0
  %249 = extractvalue %dx.types.CBufRet.f32 %236, 1
  %250 = extractvalue %dx.types.CBufRet.f32 %236, 2
  %251 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %11, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %252 = extractvalue %dx.types.CBufRet.f32 %251, 0
  %253 = extractvalue %dx.types.CBufRet.f32 %251, 1
  %254 = extractvalue %dx.types.CBufRet.f32 %251, 2
  %255 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %11, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %256 = extractvalue %dx.types.CBufRet.f32 %255, 0
  %257 = extractvalue %dx.types.CBufRet.f32 %255, 1
  %258 = extractvalue %dx.types.CBufRet.f32 %255, 2
  %259 = fadd fast float %252, %245
  %260 = fmul fast float %259, 3.000000e+00
  %261 = fsub fast float %256, %248
  %262 = fmul fast float %261, 6.000000e+00
  %263 = fadd fast float %262, %260
  %264 = fadd fast float %253, %246
  %265 = fmul fast float %264, 3.000000e+00
  %266 = fsub fast float %257, %249
  %267 = fmul fast float %266, 6.000000e+00
  %268 = fadd fast float %267, %265
  %269 = fadd fast float %254, %247
  %270 = fmul fast float %269, 3.000000e+00
  %271 = fsub fast float %258, %250
  %272 = fmul fast float %271, 6.000000e+00
  %273 = fadd fast float %272, %270
  %274 = fmul fast float %252, -4.000000e+00
  %275 = fmul fast float %253, -4.000000e+00
  %276 = fmul fast float %254, -4.000000e+00
  %277 = fmul fast float %245, 2.000000e+00
  %278 = fmul fast float %246, 2.000000e+00
  %279 = fmul fast float %247, 2.000000e+00
  %280 = fsub fast float %248, %256
  %281 = fmul fast float %280, 6.000000e+00
  %282 = fsub fast float %274, %277
  %283 = fadd fast float %282, %281
  %284 = fsub fast float %249, %257
  %285 = fmul fast float %284, 6.000000e+00
  %286 = fsub fast float %275, %278
  %287 = fadd fast float %286, %285
  %288 = fsub fast float %250, %258
  %289 = fmul fast float %288, 6.000000e+00
  %290 = fsub fast float %276, %279
  %291 = fadd fast float %290, %289
  %292 = fmul fast float %235, %235
  %293 = fmul fast float %263, %292
  %294 = fmul fast float %268, %292
  %295 = fmul fast float %273, %292
  %296 = fmul fast float %283, %235
  %297 = fmul fast float %287, %235
  %298 = fmul fast float %291, %235
  %299 = fadd fast float %293, %252
  %300 = fadd fast float %299, %296
  %301 = fadd fast float %294, %253
  %302 = fadd fast float %301, %297
  %303 = fadd fast float %295, %254
  %304 = fadd fast float %303, %298
  %305 = call float @dx.op.dot3.f32(i32 55, float %300, float %302, float %304, float %300, float %302, float %304)  ; Dot3(ax,ay,az,bx,by,bz)
  %306 = call float @dx.op.unary.f32(i32 25, float %305)  ; Rsqrt(value)
  %307 = fmul fast float %300, %306
  %308 = fmul fast float %302, %306
  %309 = fmul fast float %304, %306
  %310 = extractvalue %dx.types.CBufRet.f32 %230, 0
  %311 = extractvalue %dx.types.CBufRet.f32 %230, 1
  %312 = extractvalue %dx.types.CBufRet.f32 %230, 2
  %313 = fmul fast float %309, %311
  %314 = fmul fast float %308, %312
  %315 = fsub fast float %313, %314
  %316 = fmul fast float %307, %312
  %317 = fmul fast float %309, %310
  %318 = fsub fast float %316, %317
  %319 = fmul fast float %308, %310
  %320 = fmul fast float %307, %311
  %321 = fsub fast float %319, %320
  %322 = call float @dx.op.dot3.f32(i32 55, float %315, float %318, float %321, float %315, float %318, float %321)  ; Dot3(ax,ay,az,bx,by,bz)
  %323 = call float @dx.op.unary.f32(i32 25, float %322)  ; Rsqrt(value)
  %324 = fmul fast float %315, %323
  %325 = fmul fast float %318, %323
  %326 = fmul fast float %321, %323
  %327 = fmul fast float %326, %308
  %328 = fmul fast float %325, %309
  %329 = fsub fast float %327, %328
  %330 = fmul fast float %324, %309
  %331 = fmul fast float %326, %307
  %332 = fsub fast float %330, %331
  %333 = fmul fast float %325, %307
  %334 = fmul fast float %324, %308
  %335 = fsub fast float %333, %334
  %336 = call float @dx.op.dot3.f32(i32 55, float %329, float %332, float %335, float %329, float %332, float %335)  ; Dot3(ax,ay,az,bx,by,bz)
  %337 = call float @dx.op.unary.f32(i32 25, float %336)  ; Rsqrt(value)
  %338 = fmul fast float %329, %337
  %339 = fmul fast float %332, %337
  %340 = fmul fast float %335, %337
  %341 = extractvalue %dx.types.CBufRet.f32 %251, 3
  %342 = extractvalue %dx.types.CBufRet.f32 %255, 3
  %343 = fsub fast float %341, %342
  %344 = fmul fast float %343, %244
  %345 = fadd fast float %344, %342
  %346 = call float @dx.op.unary.f32(i32 13, float %345)  ; Sin(value)
  %347 = call float @dx.op.unary.f32(i32 12, float %345)  ; Cos(value)
  %348 = fmul fast float %324, %347
  %349 = fmul fast float %325, %347
  %350 = fmul fast float %326, %347
  %351 = fmul fast float %338, %346
  %352 = fmul fast float %339, %346
  %353 = fmul fast float %340, %346
  %354 = fsub fast float %348, %351
  %355 = fsub fast float %349, %352
  %356 = fsub fast float %350, %353
  %357 = fmul fast float %338, %347
  %358 = fmul fast float %339, %347
  %359 = fmul fast float %340, %347
  %360 = fmul fast float %324, %346
  %361 = fmul fast float %325, %346
  %362 = fmul fast float %326, %346
  %363 = fadd fast float %357, %360
  %364 = fadd fast float %358, %361
  %365 = fadd fast float %359, %362
  %366 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %11, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %367 = extractvalue %dx.types.CBufRet.f32 %366, 0
  %368 = extractvalue %dx.types.CBufRet.f32 %366, 1
  %369 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %11, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %370 = extractvalue %dx.types.CBufRet.f32 %369, 0
  %371 = extractvalue %dx.types.CBufRet.f32 %369, 1
  %372 = fsub fast float %367, %370
  %373 = fsub fast float %368, %371
  %374 = fmul fast float %372, %244
  %375 = fmul fast float %373, %244
  %376 = fadd fast float %374, %370
  %377 = fadd fast float %375, %371
  %378 = fcmp fast ogt float %376, 0.000000e+00
  %379 = fcmp fast olt float %376, 0.000000e+00
  %380 = zext i1 %378 to i32
  %381 = zext i1 %379 to i32
  %382 = sub nsw i32 %380, %381
  %383 = sitofp i32 %382 to float
  %384 = fmul fast float %383, %354
  %385 = fmul fast float %383, %355
  %386 = fmul fast float %383, %356
  %387 = fcmp fast ogt float %377, 0.000000e+00
  %388 = fcmp fast olt float %377, 0.000000e+00
  %389 = zext i1 %387 to i32
  %390 = zext i1 %388 to i32
  %391 = sub nsw i32 %389, %390
  %392 = sitofp i32 %391 to float
  %393 = fmul fast float %392, %363
  %394 = fmul fast float %392, %364
  %395 = fmul fast float %392, %365
  %396 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %11, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %397 = extractvalue %dx.types.CBufRet.f32 %396, 0
  %398 = extractvalue %dx.types.CBufRet.f32 %396, 1
  %399 = extractvalue %dx.types.CBufRet.f32 %396, 2
  %400 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %11, i32 11)  ; CBufferLoadLegacy(handle,regIndex)
  %401 = extractvalue %dx.types.CBufRet.f32 %400, 0
  %402 = extractvalue %dx.types.CBufRet.f32 %400, 1
  %403 = extractvalue %dx.types.CBufRet.f32 %400, 2
  %404 = fmul fast float %226, %307
  %405 = call float @dx.op.tertiary.f32(i32 46, float %397, float %384, float %404)  ; FMad(a,b,c)
  %406 = call float @dx.op.tertiary.f32(i32 46, float %401, float %393, float %405)  ; FMad(a,b,c)
  %407 = fmul fast float %226, %308
  %408 = call float @dx.op.tertiary.f32(i32 46, float %397, float %385, float %407)  ; FMad(a,b,c)
  %409 = call float @dx.op.tertiary.f32(i32 46, float %401, float %394, float %408)  ; FMad(a,b,c)
  %410 = fmul fast float %226, %309
  %411 = call float @dx.op.tertiary.f32(i32 46, float %397, float %386, float %410)  ; FMad(a,b,c)
  %412 = call float @dx.op.tertiary.f32(i32 46, float %401, float %395, float %411)  ; FMad(a,b,c)
  %413 = fmul fast float %227, %307
  %414 = call float @dx.op.tertiary.f32(i32 46, float %398, float %384, float %413)  ; FMad(a,b,c)
  %415 = call float @dx.op.tertiary.f32(i32 46, float %402, float %393, float %414)  ; FMad(a,b,c)
  %416 = fmul fast float %227, %308
  %417 = call float @dx.op.tertiary.f32(i32 46, float %398, float %385, float %416)  ; FMad(a,b,c)
  %418 = call float @dx.op.tertiary.f32(i32 46, float %402, float %394, float %417)  ; FMad(a,b,c)
  %419 = fmul fast float %227, %309
  %420 = call float @dx.op.tertiary.f32(i32 46, float %398, float %386, float %419)  ; FMad(a,b,c)
  %421 = call float @dx.op.tertiary.f32(i32 46, float %402, float %395, float %420)  ; FMad(a,b,c)
  %422 = fmul fast float %228, %307
  %423 = call float @dx.op.tertiary.f32(i32 46, float %399, float %384, float %422)  ; FMad(a,b,c)
  %424 = call float @dx.op.tertiary.f32(i32 46, float %403, float %393, float %423)  ; FMad(a,b,c)
  %425 = fmul fast float %228, %308
  %426 = call float @dx.op.tertiary.f32(i32 46, float %399, float %385, float %425)  ; FMad(a,b,c)
  %427 = call float @dx.op.tertiary.f32(i32 46, float %403, float %394, float %426)  ; FMad(a,b,c)
  %428 = fmul fast float %228, %309
  %429 = call float @dx.op.tertiary.f32(i32 46, float %399, float %386, float %428)  ; FMad(a,b,c)
  %430 = call float @dx.op.tertiary.f32(i32 46, float %403, float %395, float %429)  ; FMad(a,b,c)
  %431 = fmul fast float %406, %216
  %432 = call float @dx.op.tertiary.f32(i32 46, float %217, float %415, float %431)  ; FMad(a,b,c)
  %433 = call float @dx.op.tertiary.f32(i32 46, float %218, float %424, float %432)  ; FMad(a,b,c)
  %434 = fmul fast float %409, %216
  %435 = call float @dx.op.tertiary.f32(i32 46, float %217, float %418, float %434)  ; FMad(a,b,c)
  %436 = call float @dx.op.tertiary.f32(i32 46, float %218, float %427, float %435)  ; FMad(a,b,c)
  %437 = fmul fast float %412, %216
  %438 = call float @dx.op.tertiary.f32(i32 46, float %217, float %421, float %437)  ; FMad(a,b,c)
  %439 = call float @dx.op.tertiary.f32(i32 46, float %218, float %430, float %438)  ; FMad(a,b,c)
  %440 = fmul fast float %406, %221
  %441 = call float @dx.op.tertiary.f32(i32 46, float %222, float %415, float %440)  ; FMad(a,b,c)
  %442 = call float @dx.op.tertiary.f32(i32 46, float %223, float %424, float %441)  ; FMad(a,b,c)
  %443 = fmul fast float %409, %221
  %444 = call float @dx.op.tertiary.f32(i32 46, float %222, float %418, float %443)  ; FMad(a,b,c)
  %445 = call float @dx.op.tertiary.f32(i32 46, float %223, float %427, float %444)  ; FMad(a,b,c)
  %446 = fmul fast float %412, %221
  %447 = call float @dx.op.tertiary.f32(i32 46, float %222, float %421, float %446)  ; FMad(a,b,c)
  %448 = call float @dx.op.tertiary.f32(i32 46, float %223, float %430, float %447)  ; FMad(a,b,c)
  %449 = fmul fast float %445, %439
  %450 = fmul fast float %448, %436
  %451 = fsub fast float %449, %450
  %452 = fmul fast float %448, %433
  %453 = fmul fast float %442, %439
  %454 = fsub fast float %452, %453
  %455 = fmul fast float %442, %436
  %456 = fmul fast float %445, %433
  %457 = fsub fast float %455, %456
  %458 = fmul fast float %451, %224
  %459 = fmul fast float %454, %224
  %460 = fmul fast float %457, %224
  %461 = fmul fast float %459, %448
  %462 = fmul fast float %460, %445
  %463 = fsub fast float %461, %462
  %464 = fmul fast float %460, %442
  %465 = fmul fast float %458, %448
  %466 = fsub fast float %464, %465
  %467 = fmul fast float %458, %445
  %468 = fmul fast float %459, %442
  %469 = fsub fast float %467, %468
  %470 = fmul fast float %463, %224
  %471 = fmul fast float %466, %224
  %472 = fmul fast float %469, %224
  %473 = fmul fast float %198, %192
  %474 = fmul fast float %199, %192
  %475 = fmul fast float %200, %192
  %476 = fmul fast float %201, %193
  %477 = fmul fast float %202, %193
  %478 = fmul fast float %203, %193
  %479 = fmul fast float %204, %194
  %480 = fmul fast float %205, %194
  %481 = fmul fast float %206, %194
  %482 = fmul fast float %470, %473
  %483 = call float @dx.op.tertiary.f32(i32 46, float %471, float %476, float %482)  ; FMad(a,b,c)
  %484 = call float @dx.op.tertiary.f32(i32 46, float %472, float %479, float %483)  ; FMad(a,b,c)
  %485 = fmul fast float %470, %474
  %486 = call float @dx.op.tertiary.f32(i32 46, float %471, float %477, float %485)  ; FMad(a,b,c)
  %487 = call float @dx.op.tertiary.f32(i32 46, float %472, float %480, float %486)  ; FMad(a,b,c)
  %488 = fmul fast float %470, %475
  %489 = call float @dx.op.tertiary.f32(i32 46, float %471, float %478, float %488)  ; FMad(a,b,c)
  %490 = call float @dx.op.tertiary.f32(i32 46, float %472, float %481, float %489)  ; FMad(a,b,c)
  %491 = fmul fast float %442, %473
  %492 = call float @dx.op.tertiary.f32(i32 46, float %445, float %476, float %491)  ; FMad(a,b,c)
  %493 = call float @dx.op.tertiary.f32(i32 46, float %448, float %479, float %492)  ; FMad(a,b,c)
  %494 = fmul fast float %442, %474
  %495 = call float @dx.op.tertiary.f32(i32 46, float %445, float %477, float %494)  ; FMad(a,b,c)
  %496 = call float @dx.op.tertiary.f32(i32 46, float %448, float %480, float %495)  ; FMad(a,b,c)
  %497 = fmul fast float %442, %475
  %498 = call float @dx.op.tertiary.f32(i32 46, float %445, float %478, float %497)  ; FMad(a,b,c)
  %499 = call float @dx.op.tertiary.f32(i32 46, float %448, float %481, float %498)  ; FMad(a,b,c)
  %500 = fmul fast float %224, %191
  %501 = fmul fast float %292, %235
  %502 = fmul fast float %501, 2.000000e+00
  %503 = fmul fast float %292, 3.000000e+00
  %504 = fsub fast float %502, %503
  %505 = fadd fast float %504, 1.000000e+00
  %506 = fmul fast float %505, %256
  %507 = fmul fast float %505, %257
  %508 = fmul fast float %505, %258
  %509 = fadd fast float %235, -2.000000e+00
  %510 = fmul fast float %292, %509
  %511 = fadd fast float %510, %235
  %512 = fmul fast float %252, %511
  %513 = fmul fast float %253, %511
  %514 = fmul fast float %254, %511
  %515 = fsub fast float %292, %235
  %516 = fmul fast float %515, %235
  %517 = fmul fast float %516, %245
  %518 = fmul fast float %516, %246
  %519 = fmul fast float %516, %247
  %520 = fsub fast float %503, %502
  %521 = fmul fast float %520, %248
  %522 = fmul fast float %520, %249
  %523 = fmul fast float %520, %250
  %524 = extractvalue %dx.types.CBufRet.f32 %366, 2
  %525 = extractvalue %dx.types.CBufRet.f32 %366, 3
  %526 = extractvalue %dx.types.CBufRet.f32 %369, 2
  %527 = extractvalue %dx.types.CBufRet.f32 %369, 3
  %528 = fsub fast float %524, %526
  %529 = fsub fast float %525, %527
  %530 = fmul fast float %528, %244
  %531 = fmul fast float %529, %244
  %532 = fadd fast float %530, %526
  %533 = fadd fast float %531, %527
  %534 = fmul fast float %532, %324
  %535 = fmul fast float %532, %325
  %536 = fmul fast float %532, %326
  %537 = fmul fast float %338, %533
  %538 = fmul fast float %339, %533
  %539 = fmul fast float %340, %533
  %540 = fadd fast float %512, %517
  %541 = fadd fast float %540, %521
  %542 = fadd fast float %541, %506
  %543 = fadd fast float %542, %534
  %544 = fadd fast float %543, %537
  %545 = fadd fast float %513, %518
  %546 = fadd fast float %545, %522
  %547 = fadd fast float %546, %507
  %548 = fadd fast float %547, %535
  %549 = fadd fast float %548, %538
  %550 = fadd fast float %514, %519
  %551 = fadd fast float %550, %523
  %552 = fadd fast float %551, %508
  %553 = fadd fast float %552, %536
  %554 = fadd fast float %553, %539
  %555 = fmul fast float %376, %354
  %556 = fmul fast float %376, %355
  %557 = fmul fast float %376, %356
  %558 = fmul fast float %377, %363
  %559 = fmul fast float %377, %364
  %560 = fmul fast float %377, %365
  %561 = call float @dx.op.tertiary.f32(i32 46, float %397, float %555, float 0.000000e+00)  ; FMad(a,b,c)
  %562 = call float @dx.op.tertiary.f32(i32 46, float %401, float %558, float %561)  ; FMad(a,b,c)
  %563 = call float @dx.op.tertiary.f32(i32 46, float %397, float %556, float 0.000000e+00)  ; FMad(a,b,c)
  %564 = call float @dx.op.tertiary.f32(i32 46, float %401, float %559, float %563)  ; FMad(a,b,c)
  %565 = call float @dx.op.tertiary.f32(i32 46, float %397, float %557, float 0.000000e+00)  ; FMad(a,b,c)
  %566 = call float @dx.op.tertiary.f32(i32 46, float %401, float %560, float %565)  ; FMad(a,b,c)
  %567 = call float @dx.op.tertiary.f32(i32 46, float %398, float %555, float 0.000000e+00)  ; FMad(a,b,c)
  %568 = call float @dx.op.tertiary.f32(i32 46, float %402, float %558, float %567)  ; FMad(a,b,c)
  %569 = call float @dx.op.tertiary.f32(i32 46, float %398, float %556, float 0.000000e+00)  ; FMad(a,b,c)
  %570 = call float @dx.op.tertiary.f32(i32 46, float %402, float %559, float %569)  ; FMad(a,b,c)
  %571 = call float @dx.op.tertiary.f32(i32 46, float %398, float %557, float 0.000000e+00)  ; FMad(a,b,c)
  %572 = call float @dx.op.tertiary.f32(i32 46, float %402, float %560, float %571)  ; FMad(a,b,c)
  %573 = call float @dx.op.tertiary.f32(i32 46, float %399, float %555, float 0.000000e+00)  ; FMad(a,b,c)
  %574 = call float @dx.op.tertiary.f32(i32 46, float %403, float %558, float %573)  ; FMad(a,b,c)
  %575 = call float @dx.op.tertiary.f32(i32 46, float %399, float %556, float 0.000000e+00)  ; FMad(a,b,c)
  %576 = call float @dx.op.tertiary.f32(i32 46, float %403, float %559, float %575)  ; FMad(a,b,c)
  %577 = call float @dx.op.tertiary.f32(i32 46, float %399, float %557, float 0.000000e+00)  ; FMad(a,b,c)
  %578 = call float @dx.op.tertiary.f32(i32 46, float %403, float %560, float %577)  ; FMad(a,b,c)
  %579 = fmul fast float %562, %15
  %580 = call float @dx.op.tertiary.f32(i32 46, float %16, float %568, float %579)  ; FMad(a,b,c)
  %581 = call float @dx.op.tertiary.f32(i32 46, float %17, float %574, float %580)  ; FMad(a,b,c)
  %582 = call float @dx.op.tertiary.f32(i32 46, float %18, float %544, float %581)  ; FMad(a,b,c)
  %583 = fmul fast float %564, %15
  %584 = call float @dx.op.tertiary.f32(i32 46, float %16, float %570, float %583)  ; FMad(a,b,c)
  %585 = call float @dx.op.tertiary.f32(i32 46, float %17, float %576, float %584)  ; FMad(a,b,c)
  %586 = call float @dx.op.tertiary.f32(i32 46, float %18, float %549, float %585)  ; FMad(a,b,c)
  %587 = fmul fast float %566, %15
  %588 = call float @dx.op.tertiary.f32(i32 46, float %16, float %572, float %587)  ; FMad(a,b,c)
  %589 = call float @dx.op.tertiary.f32(i32 46, float %17, float %578, float %588)  ; FMad(a,b,c)
  %590 = call float @dx.op.tertiary.f32(i32 46, float %18, float %554, float %589)  ; FMad(a,b,c)
  %591 = fmul fast float %582, %198
  %592 = fmul fast float %582, %199
  %593 = fmul fast float %582, %200
  %594 = fmul fast float %586, %201
  %595 = fmul fast float %586, %202
  %596 = fmul fast float %586, %203
  %597 = fmul fast float %590, %204
  %598 = fmul fast float %590, %205
  %599 = fmul fast float %590, %206
  %600 = fsub fast float %195, %40
  %601 = fsub fast float %196, %41
  %602 = fsub fast float %197, %42
  %603 = fmul fast float %600, 2.097152e+06
  %604 = fmul fast float %601, 2.097152e+06
  %605 = fmul fast float %602, 2.097152e+06
  %606 = fadd fast float %603, %44
  %607 = fadd fast float %606, %207
  %608 = fadd fast float %607, %591
  %609 = fadd fast float %608, %594
  %610 = fadd fast float %609, %597
  %611 = fadd fast float %604, %45
  %612 = fadd fast float %611, %208
  %613 = fadd fast float %612, %592
  %614 = fadd fast float %613, %595
  %615 = fadd fast float %614, %598
  %616 = fadd fast float %605, %46
  %617 = fadd fast float %616, %209
  %618 = fadd fast float %617, %593
  %619 = fadd fast float %618, %596
  %620 = fadd fast float %619, %599
  %621 = extractvalue %dx.types.CBufRet.i32 %210, 1
  %622 = add i32 %621, -1
  %623 = call i32 @dx.op.binary.i32(i32 40, i32 0, i32 %622)  ; UMin(a,b)
  %624 = mul i32 %212, %621
  %625 = add i32 %624, %623
  %626 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 10, i32 521 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<2xF32>
  %627 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %626, i32 %625, i32 undef)  ; BufferLoad(srv,index,wot)
  %628 = extractvalue %dx.types.ResRet.f32 %627, 0
  %629 = extractvalue %dx.types.ResRet.f32 %627, 1
  %630 = fmul fast float %610, %20
  %631 = call float @dx.op.tertiary.f32(i32 46, float %615, float %25, float %630)  ; FMad(a,b,c)
  %632 = call float @dx.op.tertiary.f32(i32 46, float %620, float %30, float %631)  ; FMad(a,b,c)
  %633 = fadd fast float %632, %35
  %634 = fmul fast float %610, %21
  %635 = call float @dx.op.tertiary.f32(i32 46, float %615, float %26, float %634)  ; FMad(a,b,c)
  %636 = call float @dx.op.tertiary.f32(i32 46, float %620, float %31, float %635)  ; FMad(a,b,c)
  %637 = fadd fast float %636, %36
  %638 = fmul fast float %610, %22
  %639 = call float @dx.op.tertiary.f32(i32 46, float %615, float %27, float %638)  ; FMad(a,b,c)
  %640 = call float @dx.op.tertiary.f32(i32 46, float %620, float %32, float %639)  ; FMad(a,b,c)
  %641 = fadd fast float %640, %37
  %642 = fmul fast float %610, %23
  %643 = call float @dx.op.tertiary.f32(i32 46, float %615, float %28, float %642)  ; FMad(a,b,c)
  %644 = call float @dx.op.tertiary.f32(i32 46, float %620, float %33, float %643)  ; FMad(a,b,c)
  %645 = fadd fast float %644, %38
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %484)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %487)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %490)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %493)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %496)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %499)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float %500)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %628)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float %629)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 2, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 3, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.i32(i32 5, i32 3, i32 0, i8 0, i32 %70)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 0, float %610)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 1, float %615)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 2, float %620)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 3, float 1.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 5, i32 0, i8 0, float %610)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 5, i32 0, i8 1, float %615)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 5, i32 0, i8 2, float %620)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 6, i32 0, i8 0, float %633)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 6, i32 0, i8 1, float %637)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 6, i32 0, i8 2, float %641)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 6, i32 0, i8 3, float %645)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.loadInput.i32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind
declare void @dx.op.storeOutput.i32(i32, i32, i32, i8, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot2.f32(i32, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.binary.i32(i32, i32, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.viewIdState = !{!18}
!dx.entryPoints = !{!19}

!0 = !{!"dxc(private) 1.7.0.0 (private, 00000000)"}
!1 = !{i32 1, i32 6}
!2 = !{i32 1, i32 7}
!3 = !{!"vs", i32 6, i32 6}
!4 = !{!5, null, !14, null}
!5 = !{!6, !8, !9, !11, !13}
!6 = !{i32 0, %"class.StructuredBuffer<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 12, i32 0, !7}
!7 = !{i32 1, i32 16}
!8 = !{i32 1, %"class.StructuredBuffer<vector<float, 4> >"* undef, !"", i32 0, i32 1, i32 1, i32 12, i32 0, !7}
!9 = !{i32 2, %"class.StructuredBuffer<unsigned int>"* undef, !"", i32 0, i32 2, i32 1, i32 12, i32 0, !10}
!10 = !{i32 1, i32 4}
!11 = !{i32 3, %"class.Buffer<vector<float, 2> >"* undef, !"", i32 0, i32 3, i32 1, i32 10, i32 0, !12}
!12 = !{i32 0, i32 9}
!13 = !{i32 4, %"class.Buffer<vector<float, 4> >"* undef, !"", i32 0, i32 4, i32 1, i32 10, i32 0, !12}
!14 = !{!15, !16, !17}
!15 = !{i32 0, %"$Globals"* undef, !"", i32 0, i32 0, i32 1, i32 240, null}
!16 = !{i32 1, %hostlayout.UniformBufferConstants_View* undef, !"", i32 0, i32 1, i32 1, i32 5388, null}
!17 = !{i32 2, %UniformBufferConstants_LocalVF* undef, !"", i32 0, i32 2, i32 1, i32 60, null}
!18 = !{[15 x i32] [i32 13, i32 28, i32 259457143, i32 259457143, i32 259457143, i32 259457024, i32 259461367, i32 0, i32 0, i32 0, i32 259461367, i32 0, i32 0, i32 0, i32 1015]}
!19 = !{void ()* @MainVertexShader, !"MainVertexShader", !20, !4, !41}
!20 = !{!21, !30, null}
!21 = !{!22, !25, !28, !29}
!22 = !{i32 0, !"ATTRIBUTE", i8 9, i8 0, !23, i8 0, i32 1, i8 4, i32 0, i8 0, !24}
!23 = !{i32 0}
!24 = !{i32 3, i32 15}
!25 = !{i32 1, !"ATTRIBUTE", i8 5, i8 0, !26, i8 0, i32 1, i8 1, i32 1, i8 0, !27}
!26 = !{i32 13}
!27 = !{i32 3, i32 1}
!28 = !{i32 2, !"SV_InstanceID", i8 5, i8 2, !23, i8 0, i32 1, i8 1, i32 2, i8 0, !27}
!29 = !{i32 3, !"SV_VertexID", i8 5, i8 1, !23, i8 0, i32 1, i8 1, i32 3, i8 0, !27}
!30 = !{!31, !32, !33, !34, !35, !37, !40}
!31 = !{i32 0, !"TEXCOORD10_centroid", i8 9, i8 0, !23, i8 2, i32 1, i8 4, i32 0, i8 0, !24}
!32 = !{i32 1, !"TEXCOORD11_centroid", i8 9, i8 0, !23, i8 2, i32 1, i8 4, i32 1, i8 0, !24}
!33 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !23, i8 2, i32 1, i8 4, i32 2, i8 0, !24}
!34 = !{i32 3, !"PRIMITIVE_ID", i8 5, i8 0, !23, i8 1, i32 1, i8 1, i32 3, i8 0, !27}
!35 = !{i32 4, !"TEXCOORD", i8 9, i8 0, !36, i8 2, i32 1, i8 4, i32 4, i8 0, !24}
!36 = !{i32 6}
!37 = !{i32 5, !"TEXCOORD", i8 9, i8 0, !38, i8 2, i32 1, i8 3, i32 5, i8 0, !39}
!38 = !{i32 7}
!39 = !{i32 3, i32 7}
!40 = !{i32 6, !"SV_Position", i8 9, i8 3, !23, i8 4, i32 1, i8 4, i32 6, i8 0, !24}
!41 = !{i32 0, i64 16, i32 5, !23}
!42 = distinct !{!42, !"dx.controlflow.hints", i32 1}
