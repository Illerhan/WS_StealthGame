;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD                 6   x           0     NONE   float       
; TEXCOORD                 8   x           1     NONE    uint   x   
; SV_Position              0   xyzw        2      POS   float   xyz 
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
; shader hash: 0515c28612b7c9c80bf21dd863e65740
;
; Pipeline Runtime Information: 
;
; Pixel Shader
; DepthOutput=0
; SampleFrequency=0
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD                 6                 linear       
; TEXCOORD                 8        nointerpolation       
; SV_Position              0          noperspective       
;
; Buffer Definitions:
;
; cbuffer UniformBufferConstants_VirtualShadowMap
; {
;
;   struct UniformBufferConstants_VirtualShadowMap
;   {
;
;       uint VirtualShadowMap_NumFullShadowMaps;      ; Offset:    0
;       uint VirtualShadowMap_NumSinglePageShadowMaps;; Offset:    4
;       uint VirtualShadowMap_MaxPhysicalPages;       ; Offset:    8
;       uint VirtualShadowMap_NumShadowMapSlots;      ; Offset:   12
;       uint VirtualShadowMap_StaticCachedArrayIndex; ; Offset:   16
;       uint VirtualShadowMap_PhysicalPageRowMask;    ; Offset:   20
;       uint VirtualShadowMap_PhysicalPageRowShift;   ; Offset:   24
;       uint VirtualShadowMap_PackedShadowMaskMaxLightCount;; Offset:   28
;       float4 VirtualShadowMap_RecPhysicalPoolSize;  ; Offset:   32
;       int2 VirtualShadowMap_PhysicalPoolSize;       ; Offset:   48
;       int2 VirtualShadowMap_PhysicalPoolSizePages;  ; Offset:   56
;       uint VirtualShadowMap_bExcludeNonNaniteFromCoarsePages;; Offset:   64
;       float VirtualShadowMap_CoarsePagePixelThresholdDynamic;; Offset:   68
;       float VirtualShadowMap_CoarsePagePixelThresholdStatic;; Offset:   72
;       float VirtualShadowMap_CoarsePagePixelThresholdDynamicNanite;; Offset:   76
;       uint BindlessResource_VirtualShadowMap_ProjectionData;; Offset:   80
;       uint PrePadding_VirtualShadowMap_84;          ; Offset:   84
;       uint BindlessResource_VirtualShadowMap_PageTable;; Offset:   88
;       uint PrePadding_VirtualShadowMap_92;          ; Offset:   92
;       uint BindlessResource_VirtualShadowMap_PageFlags;; Offset:   96
;       uint PrePadding_VirtualShadowMap_100;         ; Offset:  100
;       uint BindlessResource_VirtualShadowMap_PageRectBounds;; Offset:  104
;       uint PrePadding_VirtualShadowMap_108;         ; Offset:  108
;       uint BindlessResource_VirtualShadowMap_PhysicalPagePool;; Offset:  112
;   
;   } UniformBufferConstants_VirtualShadowMap;        ; Offset:    0 Size:   116
;
; }
;
; Resource bind info for ShadowDepthPass_VirtualSmPageTable
; {
;
;   uint $Element;                                    ; Offset:    0 Size:     4
;
; }
;
; Resource bind info for ShadowDepthPass_PackedNaniteViews
; {
;
;   struct hostlayout.struct.FPackedNaniteView
;   {
;
;       row_major float4x4 SVPositionToTranslatedWorld;; Offset:    0
;       row_major float4x4 ViewToTranslatedWorld;     ; Offset:   64
;       row_major float4x4 TranslatedWorldToView;     ; Offset:  128
;       row_major float4x4 TranslatedWorldToClip;     ; Offset:  192
;       row_major float4x4 TranslatedWorldToSubpixelClip;; Offset:  256
;       row_major float4x4 ViewToClip;                ; Offset:  320
;       row_major float4x4 ClipToRelativeWorld;       ; Offset:  384
;       row_major float4x4 PrevTranslatedWorldToView; ; Offset:  448
;       row_major float4x4 PrevTranslatedWorldToClip; ; Offset:  512
;       row_major float4x4 PrevViewToClip;            ; Offset:  576
;       row_major float4x4 PrevClipToRelativeWorld;   ; Offset:  640
;       int4 ViewRect;                                ; Offset:  704
;       float4 ViewSizeAndInvSize;                    ; Offset:  720
;       float4 ClipSpaceScaleOffset;                  ; Offset:  736
;       float3 RelativePreViewTranslation;            ; Offset:  752
;       float ViewTilePositionX;                      ; Offset:  764
;       float3 RelativePrevPreViewTranslation;        ; Offset:  768
;       float ViewTilePositionY;                      ; Offset:  780
;       float3 RelativeWorldCameraOrigin;             ; Offset:  784
;       float ViewTilePositionZ;                      ; Offset:  796
;       float3 DrawDistanceOriginTranslatedWorld;     ; Offset:  800
;       float RangeBasedCullingDistance;              ; Offset:  812
;       float3 ViewForward;                           ; Offset:  816
;       float NearPlane;                              ; Offset:  828
;       float4 TranslatedGlobalClipPlane;             ; Offset:  832
;       float3 MatrixTilePosition;                    ; Offset:  848
;       float Padding1;                               ; Offset:  860
;       float2 LODScales;                             ; Offset:  864
;       float MinBoundsRadiusSq;                      ; Offset:  872
;       uint StreamingPriorityCategory_AndFlags;      ; Offset:  876
;       int4 TargetLayerIdX_AndMipLevelY_AndNumMipLevelsZ;; Offset:  880
;       int4 HZBTestViewRect;                         ; Offset:  896
;   
;   } $Element;                                       ; Offset:    0 Size:   912
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; UniformBufferConstants_VirtualShadowMap   cbuffer      NA          NA     CB0            cb0     1
; ShadowDepthPass_VirtualSmPageTable   texture  struct         r/o      T0             t0     1
; ShadowDepthPass_PackedNaniteViews   texture  struct         r/o      T1             t1     1
; ShadowDepthPass_OutDepthBufferArray       UAV     u32     2darray      U0             u0     1
;
;
; ViewId state:
;
; Number of inputs: 12, outputs: 0
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%"class.StructuredBuffer<unsigned int>" = type { i32 }
%"hostlayout.class.StructuredBuffer<FPackedNaniteView>" = type { %hostlayout.struct.FPackedNaniteView }
%hostlayout.struct.FPackedNaniteView = type { [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <4 x i32>, <4 x float>, <4 x float>, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <4 x float>, <3 x float>, float, <2 x float>, float, i32, <4 x i32>, <4 x i32> }
%"class.RWTexture2DArray<unsigned int>" = type { i32 }
%UniformBufferConstants_VirtualShadowMap = type { i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <2 x i32>, <2 x i32>, i32, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

define void @Main() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 1 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 0 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind zeroinitializer, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %4, %dx.types.ResourceProperties { i32 13, i32 116 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call i32 @dx.op.loadInput.i32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = fptoui float %6 to i32
  %11 = fptoui float %7 to i32
  %12 = and i32 %9, 65535
  %13 = and i32 %9, 65536
  %14 = icmp ne i32 %13, 0
  %15 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 524, i32 912 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=912>
  %16 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %15, i32 %12, i32 880, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %17 = extractvalue %dx.types.ResRet.i32 %16, 0
  %18 = extractvalue %dx.types.ResRet.i32 %16, 1
  %19 = icmp ult i32 %17, 8192
  br i1 %19, label %39, label %20

; <label>:20                                      ; preds = %0
  %21 = lshr i32 %11, 7
  %22 = lshr i32 %10, 7
  %23 = mul i32 %17, 21845
  %24 = shl i32 %18, 1
  %25 = sub i32 16, %24
  %26 = and i32 %24, 30
  %27 = shl i32 1, %26
  %28 = add i32 %27, -1
  %29 = and i32 %25, 30
  %30 = shl i32 %28, %29
  %31 = and i32 %30, 1431655765
  %32 = sub i32 7, %18
  %33 = and i32 %32, 31
  %34 = shl i32 %21, %33
  %35 = add nsw i32 %22, -178946048
  %36 = add i32 %35, %23
  %37 = add i32 %36, %34
  %38 = add i32 %37, %31
  br label %39

; <label>:39                                      ; preds = %20, %0
  %40 = phi i32 [ %38, %20 ], [ %17, %0 ]
  %41 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 12, i32 4 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=4>
  %42 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %41, i32 %40, i32 0, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %43 = extractvalue %dx.types.ResRet.i32 %42, 0
  %44 = and i32 %43, 200278016
  %45 = icmp eq i32 %44, 134217728
  br i1 %45, label %46, label %61

; <label>:46                                      ; preds = %39
  %47 = shl i32 %43, 7
  %48 = and i32 %47, 130944
  %49 = lshr i32 %43, 3
  %50 = and i32 %49, 130944
  %51 = and i32 %10, 127
  %52 = and i32 %11, 127
  %53 = or i32 %48, %51
  %54 = or i32 %50, %52
  %55 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %5, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %56 = extractvalue %dx.types.CBufRet.i32 %55, 0
  %57 = select i1 %14, i32 %56, i32 0
  %58 = bitcast float %8 to i32
  %59 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 4103, i32 261 })  ; AnnotateHandle(res,props)  resource: RWTexture2DArray<U32>
  %60 = call i32 @dx.op.atomicBinOp.i32(i32 78, %dx.types.Handle %59, i32 7, i32 %53, i32 %54, i32 %57, i32 %58)  ; AtomicBinOp(handle,atomicOp,offset0,offset1,offset2,newValue)
  br label %61

; <label>:61                                      ; preds = %46, %39
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.loadInput.i32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32, %dx.types.Handle, i32, i32, i8, i32) #1

; Function Attrs: nounwind
declare i32 @dx.op.atomicBinOp.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.viewIdState = !{!15}
!dx.entryPoints = !{!16}

!0 = !{!"dxc(private) 1.7.0.0 (private, 00000000)"}
!1 = !{i32 1, i32 6}
!2 = !{i32 1, i32 7}
!3 = !{!"ps", i32 6, i32 6}
!4 = !{!5, !10, !13, null}
!5 = !{!6, !8}
!6 = !{i32 0, %"class.StructuredBuffer<unsigned int>"* undef, !"", i32 0, i32 0, i32 1, i32 12, i32 0, !7}
!7 = !{i32 1, i32 4}
!8 = !{i32 1, %"hostlayout.class.StructuredBuffer<FPackedNaniteView>"* undef, !"", i32 0, i32 1, i32 1, i32 12, i32 0, !9}
!9 = !{i32 1, i32 912}
!10 = !{!11}
!11 = !{i32 0, %"class.RWTexture2DArray<unsigned int>"* undef, !"", i32 0, i32 0, i32 1, i32 7, i1 false, i1 false, i1 false, !12}
!12 = !{i32 0, i32 5}
!13 = !{!14}
!14 = !{i32 0, %UniformBufferConstants_VirtualShadowMap* undef, !"", i32 0, i32 0, i32 1, i32 116, null}
!15 = !{[2 x i32] [i32 12, i32 0]}
!16 = !{void ()* @Main, !"Main", !17, !4, !27}
!17 = !{!18, null, null}
!18 = !{!19, !21, !24}
!19 = !{i32 0, !"TEXCOORD", i8 9, i8 0, !20, i8 2, i32 1, i8 1, i32 0, i8 0, null}
!20 = !{i32 6}
!21 = !{i32 1, !"TEXCOORD", i8 5, i8 0, !22, i8 1, i32 1, i8 1, i32 1, i8 0, !23}
!22 = !{i32 8}
!23 = !{i32 3, i32 1}
!24 = !{i32 2, !"SV_Position", i8 9, i8 3, !25, i8 4, i32 1, i8 4, i32 2, i8 0, !26}
!25 = !{i32 0}
!26 = !{i32 3, i32 7}
!27 = !{i32 0, i64 16, i32 5, !25}
